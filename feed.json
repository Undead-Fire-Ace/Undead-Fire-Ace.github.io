{
    "version": "https://jsonfeed.org/version/1",
    "title": "桜の風",
    "subtitle": "",
    "icon": "https://undead-fire-ace.github.io/images/favicon.ico",
    "description": "",
    "home_page_url": "https://undead-fire-ace.github.io",
    "items": [
        {
            "id": "https://undead-fire-ace.github.io/2023/10/25/CSP2023/",
            "url": "https://undead-fire-ace.github.io/2023/10/25/CSP2023/",
            "title": "CSP2023（剧本杀）游记",
            "date_published": "2023-10-25T13:31:58.000Z",
            "content_html": "<p>吾七人于csp结束后乘车往商场以剧本杀，通宵达旦，酣畅淋漓，故记之</p>\n<span id=\"more\"></span>\n<p>说实话这次 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>S</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">CSP</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 实在是太抽象了，已经吐槽累了，<s>就不在这展现我优秀的素质了</s>。</p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/7y029bsn.png\" alt=\"\" /></p>\n<p><s>挂张优秀素质的图/ww，也挺能反应我的心情的(doge</s></p>\n<p>出了考场之后就往外走准备打车去，结果我上了个厕所就找不着他们人了，<s>真好（骂骂咧咧</s> 。上车前还跟宝硕和沼泽聊了聊这几道题的做法，顺便骂了骂 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>C</mi><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">CCF</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> 的抽象，啥题都往里面放，我甚至还做过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mn>4</mn></mrow><annotation encoding=\"application/x-tex\">T4</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord\">4</span></span></span></span> 的一道类似的原题（这都不重要我说他干啥，大雾。</p>\n<p>我们都上了车之后都在给家长报个平安顺便说下晚上晚点回酒店（最后回去的时候是真的晚），我们分了两辆车我们好像晚到了一会，但是没看见他们人，又发现那个商场前面广场上有跳广场舞的就想着一起跟着跳，就在我要融入他们的时候<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mi>o</mi><mi>s</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">hosen</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span></span></span></span> 他们出现了，就直接去打剧本杀的地了，广场舞没跳成/kk。顺便提一嘴，感谢 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>m</mi><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">smh</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">h</span></span></span></span> 请我们吃了三张披萨，灰常的好吃/hanx。</p>\n<p>就在我们几个人在屋里猛啃披萨的时候 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">dm</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">m</span></span></span></span> （算是主持人吧）拿着每个人的剧本进来了，他让我们先吃着然后跟我们稍微介绍了一下每个角色的身份，然后温馨提示了一下：咱们估计得打到凌晨三点左右（我们是七点左右到的，事实证明他多虑了，因为我们最后打到了四点多还没打完/ww）。</p>\n<p>+++danger 女性角色</p>\n<ul>\n<li>马晓曦：高冷御姐形象的大姐姐（御姐医生）</li>\n<li>金凌儿：富家千金，活泼开朗的女生（千金小姐）</li>\n<li>武晟楠：有着明星像的漂亮女生（人气明星）<br />\n+++</li>\n</ul>\n<p>+++info 男性角色</p>\n<ul>\n<li>赵政：看起来神色冷峻的男子（霸道总裁）</li>\n<li>姬凡：看起来文质彬彬的学者（天文星象学家）</li>\n<li>李藏：看起来非常阳光的开朗大男孩（游戏宅男）</li>\n<li>曹君渊：带着一身痞气的帅气男人（黑帮大佬）<br />\n+++</li>\n</ul>\n<p>+++success 角色分配</p>\n<ul>\n<li>武晟楠：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>T</mi><mi>o</mi><mi>k</mi><mi>a</mi><mi>i</mi><mtext>  </mtext><mtext>  </mtext><mi>T</mi><mi>e</mi><mi>i</mi><mi>o</mi></mrow><annotation encoding=\"application/x-tex\">Tokai \\;\\; Teio</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span></span></span></span>（我）</li>\n<li>金凌儿：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mi>o</mi><mi>s</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">hosen</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span></span></span></span></li>\n<li>马晓曦：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mi>e</mi><mi>f</mi><mi>f</mi><mi>z</mi><mi>h</mi><mi>a</mi><mi>o</mi></mrow><annotation encoding=\"application/x-tex\">Jeffzhao</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">o</span></span></span></span></li>\n<li>赵政：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>m</mi><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">smh</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">h</span></span></span></span></li>\n<li>姬凡：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>l</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">llx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">x</span></span></span></span></li>\n<li>李藏：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mi>j</mi><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">pjw</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span></li>\n<li>曹君渊：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mi>t</mi><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">ytq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span><br />\n+++</li>\n</ul>\n<p>被迫反串，很难蚌，<s>不过问题不大，优势在我</s></p>\n<p>稍微说一下剧情吧。</p>\n<p>城市出现了风暴，我们七个人都有各自的原因前往风暴中心，然后就都因为一些原因然后噶了，正好过去的帝魂附在我们的身上，我们又活， 世界错乱，我们最终要夺取逆天改命的机会，我们之间就开始了战斗。</p>\n<p>每个人死的原因都不太一样，我那个角色死的原因是在颁奖仪式后想要给自己放个假，然后在高速公路上飙车，突然刹车失灵了，然后摔下了悬崖，然后凶手自然就在我们这几个人之中，基本上都是互相有仇的状态，我们需要找到自己的仇人并复仇，不顾这都是后面的事了。</p>\n<p>我们几个人醒了之后就都聚在了一起，然后开始争夺唤灵石（算是一种货币，以后要用），就开始了我们第一把游戏</p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/5fdp286f.png\" alt=\"\" /></p>\n<p>规则就是上面的这个，其实通俗点来讲就是抽卡然后合成，但是啊，我身为抽卡游戏的万年非酋，我是第一个炼化失败的/kk。后面我好像又失败了一次，但是我还是帮 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>l</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">llx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">x</span></span></span></span> 合成了一个四色唤灵石，属实蚌埠住了，凭借我“极好的”运气，我成功的吃到了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">dm</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">m</span></span></span></span> 给的低保，不知道为啥这把游戏我和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>m</mi><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">smh</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">h</span></span></span></span> 运气都特别的差，所有人也都不约而同的坑了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>m</mi><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">smh</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">h</span></span></span></span> 一次，<s>我也坑了他一次</s>。到这回合为止整个游戏还是比较轻松愉快的，到后面的回合游戏就越来越复杂了，因为我们打的这个是机制本不是剧情本啊。</p>\n<p>这一回合打完之后，剧情接着往下推进，附身每个人的帝魂的身份也都出来了</p>\n<p>+++danger 帝魂信息</p>\n<ul>\n<li>武晟楠：武则天</li>\n<li>赵政：嬴政</li>\n<li>金凌儿：孝庄太后</li>\n<li>姬凡：姬发</li>\n<li>马晓曦：马皇后</li>\n<li>曹君渊：曹操</li>\n<li>李藏：李世民<br />\n+++</li>\n</ul>\n<p>然后我们几个就为了最终的胜利接着掐架，然后我们的仇人也因为时空错乱导致短信收件人出错被揭露了出来，反正就基本上都知道是谁是自己的仇人，然后阵营就差不多出来了，中间还有两个回合是类似狼人杀的小游戏，每个人刷了些资源啥的，我跟 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>m</mi><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">smh</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">h</span></span></span></span> 一队，到了最终回合摇人之前算是俩最穷的/kk，运气都不太好了在一队了属于是。<s>中间那两个回合就先跳过了，如果想看就评论告诉我，以后再补（也挺有意思的）</s></p>\n<p>最最抽象的是我们在刚打完 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>S</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">CSP</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span> 后还得做历史卷子，没错，他最终之战前的摇人要靠历史知识抢角色（<s>虽然资源足够多就能直接获得答案，但是我俩是最穷的啊喂</s>），不过好在因为都是熟人都商量了商量就没有互相抢，多亏了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>m</mi><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">smh</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">h</span></span></span></span> <s>这个全场唯一的文科生</s>帮我把我想要的都给拿到了/bx。最后公布成绩的时候， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">dm</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">m</span></span></span></span> 说了句 <strong>“出分了！”</strong> 给 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>J</mi><mi>e</mi><mi>f</mi><mi>f</mi><mi>z</mi><mi>h</mi><mi>a</mi><mi>o</mi></mrow><annotation encoding=\"application/x-tex\">Jeffzhao</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.09618em;\">J</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">o</span></span></span></span> 下了一跳，他惊讶的说：“<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>S</mi><mi>P</mi></mrow><annotation encoding=\"application/x-tex\">CSP</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">P</span></span></span></span>  这么快就出分了？！？”。所有人（包括 $dm $）都蚌埠住了。然后就开始了<s>紧张刺激的</s> 公布结果环节，没想到我和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>m</mi><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">smh</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">h</span></span></span></span> 点背了一晚上，我俩最后的阵容是最好的 /hanx</p>\n<p>简单说一下灵将的等级：天级，专属灵将，角色觉醒 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&gt;</span></span></span></span> 地级 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&gt;</span></span></span></span> 人级 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.5782em;vertical-align:-0.0391em;\"></span><span class=\"mrel\">&gt;</span></span></span></span> 残级</p>\n<p>每个人都是有一个专属灵将，角色觉醒得在最后的战役中弄，除此之外，每个人还有三张卡，我用 <s>hosen 三年单身</s>换来了两个天和一个地（全场最豪华的阵容/hanx），<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>m</mi><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">smh</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">h</span></span></span></span> 好像是一个天两个地，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mi>t</mi><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">ytq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> 是最惨的，有一个残级/cf(bushi</p>\n<p>到选完人为止，已经一点多了，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">dm</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">m</span></span></span></span> 根据往常的经验以为三点左右就能结束，<s>然而还是太乐观了</s>。经过简单的战略结盟和讨论战术后就开始互相折磨了，最后的这个游戏就是类似于三国杀的玩法，但是在每回合三国杀之前都要在另外一个战场用灵将抢能量，然后抢到的能量在角色之间打斗的时候用，我的角色应该是所有人里单体爆发最高的（不觉醒的情况下），每个角色满血是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>30</mn></mrow><annotation encoding=\"application/x-tex\">30</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">0</span></span></span></span> 滴，我把伤害拉满能一下打 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>17</mn></mrow><annotation encoding=\"application/x-tex\">17</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">7</span></span></span></span> 滴血（但是大部分情况下要么是牌不够，要么是能量不够/kk）。<s>有想看中间的详细的过程的也可以在评论里说</s>。大概就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mi>t</mi><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">ytq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> 先觉醒，然后猛杀了一波，但是不得不提的是，每个角色在觉醒的时候都有一段觉醒台词要念， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mi>t</mi><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">ytq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> 的那句是 <strong>家有娇妻者，投降不杀！！！</strong> <s>很符合曹操的人设</s>，在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mi>t</mi><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">ytq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> 觉醒前基本上所有人的血都没咋掉，在他觉醒后就直接把所有人的血线拉到了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>16</mn></mrow><annotation encoding=\"application/x-tex\">16</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">6</span></span></span></span> 左右，还是很猛的，下一个觉醒的是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mi>j</mi><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">pjw</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span> ，比较抽象的是他那个觉醒有两个形态可以选，一个是光，一个是暗，李信一念神魔了属于是。因为我的帝魂是武则天，所以自然台词跟女皇有关，大体好像是叫我女王殿下之类的，记不太清了，反正一个男的说这个挺尴尬的(doge。最蚌埠住的是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mi>o</mi><mi>s</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">hosen</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span></span></span></span> 的觉醒台词：<strong>“皇太极，有人欺负我！”</strong> 。属实有点难蚌/hanx。回到战斗就是我开完大之后把 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mi>t</mi><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">ytq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> 给弄的快没了，配合 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>h</mi><mi>o</mi><mi>s</mi><mi>e</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">hosen</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span></span></span></span> 一起把 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mi>t</mi><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">ytq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> 给杀了（<s>到我们走的时候也只有他死了/cf</s>），就我们这么打着打着到了残局，这时候已经三点多了，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>m</mi><mi>h</mi></mrow><annotation encoding=\"application/x-tex\">smh</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">h</span></span></span></span> 的爸爸也一直在催我们走，最后也就只能匆匆的把结尾的故事过完了就走了，最后差个尾巴没打完很难受/kel，每个角色最终的故事看着我也挺难受的/kk（<s>会挂在下面</s></p>\n<p>说实话这打了一晚上是挺爽的，也算是一段美好的回忆吧，等回到酒店差不多就已经四点半左右了，所有人都倒头就睡，<s>这个我也会挂在下面/ww</s>。到这好像基本上也就没啥了，但是总感觉缺点什么，算了不管了，就这样了。</p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/a9cyp376.png\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/86s509li.png\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/il7xieyo.png\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/c3ypg6ds.png\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/yxmbcewu.png\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/qt4p7vy7.png\" alt=\"\" /></p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/ofweydk8.png\" alt=\"\" /></p>\n",
            "tags": [
                "游记",
                "回忆录",
                "游记",
                "回忆录"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/10/16/arc167e/",
            "url": "https://undead-fire-ace.github.io/2023/10/16/arc167e/",
            "title": "ARC167E One Square in a Triangle 题解",
            "date_published": "2023-10-15T18:59:07.000Z",
            "content_html": "<p>ARC167E One Square in a Triangle 题解</p>\n<span id=\"more\"></span>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vQVRfYXJjMTY3X2U=\">题目传送门</span></p>\n<p>首先对于这道题，一定要读懂题意/kk，<s>比赛的时候因为翻译软件有点抽象导致题意理解错了</s>，题干说的是你需要构造的三角形包含且仅包含一个完整的正方形，其实对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 为偶数的情况，我们是比较好处理的，难处理的是奇数情况，因为你想要构造一个顶点都在格点上的三角形（先不考虑包含一个完整正方形的情况），偶数的情况我们可以直接以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 为底，高自然也就出来了，并且一定是能得到一个这个三角形的，那么我们先看看 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 为奇数的时候我们应该怎么先去构造一个面积合法的三角形。</p>\n<p>我们知道一个三角形的面积公式是</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy=\"false\">∣</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mrow><mo fence=\"true\">[</mo><mrow><mo fence=\"true\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo fence=\"true\">)</mo></mrow><mrow><mo fence=\"true\">(</mo><msub><mi>y</mi><mn>3</mn></msub><mo>−</mo><msub><mi>y</mi><mn>1</mn></msub><mo fence=\"true\">)</mo></mrow><mo>−</mo><mrow><mo fence=\"true\">(</mo><msub><mi>x</mi><mn>3</mn></msub><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo fence=\"true\">)</mo></mrow><mrow><mo fence=\"true\">(</mo><msub><mi>y</mi><mn>2</mn></msub><mo>−</mo><msub><mi>y</mi><mn>1</mn></msub><mo fence=\"true\">)</mo></mrow><mo fence=\"true\">]</mo></mrow><mo stretchy=\"false\">∣</mo></mrow><annotation encoding=\"application/x-tex\"> S = \\lvert \\frac{1}{2} \\left[ \\left(x_2 - x_1\\right) \\left(y_3-y_1\\right) - \\left(x_3-x_1\\right) \\left(y_2-y_1\\right)  \\right] \\rvert\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mopen\">∣</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">[</span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">]</span></span><span class=\"mclose\">∣</span></span></span></span></span></p>\n<p>那么我们令其中一个点为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>0</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(0,0)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span> ，这是为了方便构造，具体是多少不是特别重要，因为我们可以通过平移来找到等价的三角形，然后这个式子就变成了</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy=\"false\">∣</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mrow><mo fence=\"true\">(</mo><msub><mi>x</mi><mn>2</mn></msub><msub><mi>y</mi><mn>3</mn></msub><mo>−</mo><msub><mi>x</mi><mn>3</mn></msub><msub><mi>y</mi><mn>2</mn></msub><mo fence=\"true\">)</mo></mrow><mo stretchy=\"false\">∣</mo></mrow><annotation encoding=\"application/x-tex\"> S = \\lvert \\frac{1}{2} \\left( x_2y_3 - x_3y_2  \\right) \\rvert\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mopen\">∣</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose\">∣</span></span></span></span></span></p>\n<p>因为我们假定的现在情况为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 为奇数，那么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub><msub><mi>y</mi><mn>3</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_2y_3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>3</mn></msub><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_3y_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 奇偶性不同，既然需要奇偶性不同我们可以直接令 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">y_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为最小的两个奇数，同理这也是为了方便构造选其他的应该也能构造出来，尽量不要使得 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub><mo>=</mo><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_2 =y_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> ，因为这样好像有些有解的面积也无法构造出来。然后式子就变成了</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy=\"false\">∣</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mrow><mo fence=\"true\">(</mo><msub><mi>y</mi><mn>3</mn></msub><mo>−</mo><mn>3</mn><msub><mi>x</mi><mn>3</mn></msub><mo fence=\"true\">)</mo></mrow><mo stretchy=\"false\">∣</mo></mrow><annotation encoding=\"application/x-tex\"> S = \\lvert \\frac{1}{2} \\left( y_3 - 3x_3  \\right) \\rvert\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mopen\">∣</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">3</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">)</span></span><span class=\"mclose\">∣</span></span></span></span></span></p>\n<p>这里我们是让 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x_2,y_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo separator=\"true\">,</mo><mn>3</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(1, 3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">3</span><span class=\"mclose\">)</span></span></span></span>，那么我为了让剩下的这俩奇偶性仍然不同，最简单的方法即为让 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>x</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">y = x - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 。那么我们最后的式子就会变成了</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo>=</mo><mo stretchy=\"false\">∣</mo><msub><mi>x</mi><mn>3</mn></msub><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy=\"false\">∣</mo></mrow><annotation encoding=\"application/x-tex\">S = \\lvert x_3 + \\frac{1}{2} \\rvert\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">∣</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">∣</span></span></span></span></span></p>\n<p>那么我们就构造出了一个面积合法的三角形。<s>折腾了半天终于构造出来了QWQ</s></p>\n<p>那么现在另外一个问题就来了，我们怎么保证有且只有一个正方形被包含，我们其实打开画图软件玩一下我们按照这个构造出来的图形会发现当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>9</mn><mo>≤</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">9 \\le x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> ，我们这么构造他就是有且仅有一个正方形</p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/kj8dvfir.png\" alt=\"\" /></p>\n<p>那么这只是一个感性的理解，那么怎么严格证明呢？我们可以将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">AC</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 看成一个斜率为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 的直线，那么我们想要满足包含那个正方形，就只需要满足 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">AC</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 不经过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span>，因为当我们需要的面积越大的时候 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>B</mi><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">BC</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 是要往上走的，所以只用考虑 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>E</mi></mrow><annotation encoding=\"application/x-tex\">E</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span></span></span></span> ，那么我们此时要证明的就等价于当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>9</mn><mo>≤</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">9\\le x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 直线 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">AC</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 的斜率始终小于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 。那么又因为我们的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 满足纵坐标永远比横坐标小 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>，那么斜率也就永远小于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> ，所以此结论成立。</p>\n<p>那么我们对于奇数的构造方法就差不多结束了。</p>\n<p>但是真的结束了吗？我们会发现我们只是讨论了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>9</mn><mo>≤</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">9\\le x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">9</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的情况，那小于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>9</mn></mrow><annotation encoding=\"application/x-tex\">9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">9</span></span></span></span> 的奇数咋办？最最最暴力的想法，我们直接手玩不就行了吗(doge</p>\n<p>然后偶数其实同理可以根据奇数的结论去构造，那么如果你看到了这里都能看懂那就祝贺您已经切了一道 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3200</mn><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">3200+</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">3</span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">+</span></span></span></span> 的题，%%%%%</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;vector&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T&amp; x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span>(ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span>(ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span>(ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T, <span class=\"hljs-keyword\">typename</span>... Args&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T&amp; first, Args &amp;...args)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(first);\n        <span class=\"hljs-built_in\">read</span>(args...);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span>(x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T&amp; a, T&amp; b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">int</span> t, s;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(t);\n\n        <span class=\"hljs-keyword\">while</span>(t -- )\n        &#123;\n            <span class=\"hljs-built_in\">read</span>(s);\n            <span class=\"hljs-keyword\">if</span>(s &lt; <span class=\"hljs-number\">4</span> || s == <span class=\"hljs-number\">5</span> || s == <span class=\"hljs-number\">7</span>)\n                <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;No&quot;</span>);\n            <span class=\"hljs-keyword\">else</span>\n            &#123;\n                <span class=\"hljs-keyword\">if</span>(s==<span class=\"hljs-number\">4</span>)\n                &#123;\n                    <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;Yes&quot;</span>);\n                    std :: cout&lt;&lt;<span class=\"hljs-string\">&quot;0 0 0 2 2 2&quot;</span> &lt;&lt; std :: endl;\n                &#125;\n                <span class=\"hljs-keyword\">else</span>\n                &#123;\n                    <span class=\"hljs-keyword\">if</span>(!(s &amp; <span class=\"hljs-number\">1</span>))\n                    &#123;\n                        <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;Yes&quot;</span>);\n                        std :: cout &lt;&lt; <span class=\"hljs-string\">&quot;0 0 0 2 &quot;</span> &lt;&lt; s / <span class=\"hljs-number\">2</span> &lt;&lt; <span class=\"hljs-string\">&quot; &quot;</span> &lt;&lt; s / <span class=\"hljs-number\">2</span> - <span class=\"hljs-number\">1</span> &lt;&lt; std :: endl;\n                    &#125;\n                    <span class=\"hljs-keyword\">else</span>\n                    &#123;\n                        <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;Yes&quot;</span>);\n                        std :: cout &lt;&lt; <span class=\"hljs-string\">&quot;0 0 1 3 &quot;</span>&lt;&lt; (s - <span class=\"hljs-number\">1</span>) / <span class=\"hljs-number\">2</span> &lt;&lt; <span class=\"hljs-string\">&quot; &quot;</span> &lt;&lt; (s - <span class=\"hljs-number\">3</span>) / <span class=\"hljs-number\">2</span> &lt;&lt; std :: endl;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    <span class=\"hljs-comment\">// freopen(&quot;test.in&quot;, &quot;r&quot;, stdin);</span>\n    <span class=\"hljs-comment\">// freopen(&quot;test.out&quot;, &quot;w&quot;, stdout);</span>\n\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<hr />\n<p><s>一些废话</s></p>\n<p>代码其实实现的形式应该是挺多的，我这个应该也就是其中的一种，看看思路就行了，其实把整道题分析下来都比较好理解，但是真的很难想到，<s>可能是我太弱了</s>，构造还是得多手玩啊，还有官方题解好抽象啊，<s>康不懂</s>,感觉很复杂的样子。</p>\n",
            "tags": [
                "题解",
                "思维题",
                "题解",
                "思维题"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/10/06/summer-camp/",
            "url": "https://undead-fire-ace.github.io/2023/10/06/summer-camp/",
            "title": "2023暑假集训",
            "date_published": "2023-10-06T08:53:14.215Z",
            "content_html": "<p>23年夏，二南生借宿二本集训，故计之 。</p>\n<span id=\"more\"></span>\n<p>一眨眼，在模拟赛中半个月已经过去了， 为期一个半月的在二本的集训已经结束了，今天下午就要回二南了（我明天得复查所以今天下午不跟着他们一起回去），虽说是集训，但是却一点都不枯燥乏味，每天来给我们上课的学长都非常的有意思，而且讲的是真好（虽说还是有的时候得在课下消化半天讲的难题）。<br />\n<br />\n七月一号下午我们经过四十分钟左右，从二南坐教师班车到了二本，算是准备开始暑期集训了，差不多六七点左右到的学校，食堂好像是已经没饭了，所以就在36524随便吃了点东西，然后那天就收拾完宿舍就去机房了，对了我们的宿舍在阴面，这里有一个小伏笔。<br />\n<br />\n前两天是ZRQ（张闰清）学长讲数据结构，讲课的难度是循序渐进的，而且很细，基本上课上都搞懂了，虽说是讲知识点但是大部分都讲过就直接上例题了，不过后面还补充了点LCT和K-D Tree优化建图的技巧，真是收益匪浅，因为之前只知道数据结构能优化dp之类的。<br />\n<br />\n然后消化吸收了一整天，第四天是xy（徐烨）学长讲离线算法，这块除了CDQ之外学的还是比较好的，CDQ我是真搞不懂，能听懂就是感觉代码实现起来特别抽象，根本不知道咋写，于是课下就把一些比较简单的CDQ题写了写，然后就去做别的了，整体二分经典的题比较少，所以上课的时候讲的都是之前做过的，所以也非常好理解，一整天除了CDQ，整体难度感觉不是特别大，就是写起来比较难调<br />\n<br />\n下一位就是我们的非常神秘的lhm（刘皓铭）学长了，为啥神秘呢？因为他每次给我们上课都是在线上上，没见过他本人，包括这次也是线上，晚上讲了讲贪心的题，感觉贪心挺符合人的思维的，在想做法的时候也比之前讲的专题更简单，我们还是场切了几道题的（虽说是有点水的题）。 <s>什么时候能线下见到lhm学长啊</s><br />\n<br />\n然后就是我们的卷王学长jzp（贾朝蓬）了，为啥是卷王呢？因为他是真卷（<s>说了跟没说一样(doge</s>）。据说是晚上三点多才睡，早上六点多就起床了/bx。第一天讲的是dp专题，感觉听完思路和设计状态之后还是比较清楚的。本来看着是要讲DDP，但是最后因为时间也不太够就没有讲，但是有人卷了，我不说是谁，反正不是我(doge 。第二天讲了讲虚树和图论，虚树之前看过，听的时候还是比较好接受的，但是后面的图论是逐渐开始抽象起来了，讲着讲着就讲起了计数相关的图论题，是真的难懂/kk。<br />\n<br />\n经过了一段时间图论和数据结构的洗礼后，lsr（李书润）学长开始讲数学了，一开始的组合数学听起来还是可以接受的，后面就开始讲起了容斥，容斥这个思想本身并不是很难，但是恶心在计算容斥系数和怎么容斥上，常用的技巧有二项式定理求系数，和二项式反演，虽然上课听的一知半解，下课还是花了两个小时搞懂了，<s>真不容易/kel</s>,01分数规划感觉还是非常好理解的，而且写起来比较的套路。<br />\n<br />\n在七月集训最后的最后就是我们的zzz（张尊喆）学长了，金牌佬orz%%%%%。这两天是我感觉整个七月集训最痛苦的两天，一直再将数论和构造题，最后稍微涉及到了一点康托展开。讲了一堆我之前都没有学的数论知识，当然我这个蒟蒻咕了好多知识点（莫比乌斯反演，杜教筛……），后来下课才补了补，写起题来也是好痛苦，得一直推式子，跟学数竞似的，但是好像据说数竞也学这些。</p>\n<hr />\n<p><br />\n<br />\n然后回家休息了将近一周吧，开始了八月份的集训，八月是真恐怖，连续打了一周的模拟赛/kel   ps；（八月讲课的学长都是zzz学长的姚班同学 Orz）<br />\n<br />\n前两天是dyp（邓奕鹏），第一天讲的讲线段树，感觉跟七月讲的相比是难度高了很多，讲了讲非常常用的线段树之后还讲了讲吉司机线段树和李超线段树（但好像李超用的也比较多。后面讲的例题也是非常的难，写起来也是非常的难调。第二天讲了讲字符串的题，字符串相比其他类型的题算是要么很板子，要么不会转换和处理，所以做起来感觉比线段树好些。（但是我明明更喜欢线段树啊喂<br />\n<br />\n后面的两天是sys（史钰申），讲了两天的dp，（但看着安排好像是要讲网络流，但是好像也没讲。第一天算是主要讲了讲图论dp一些理论知识，包括转移状态设计和自动机啥的。感觉听着有点懵，硬着头皮听好像还是不太懂（好像所有人都是这样，可能是因为之间穿插了些线性代数的缘故？但还是很有收获的，比如知道dp跟自动机的一些关系啥的。<br />\n<br />\n然后就是我整个集训中很喜欢的一个学长cy（曹越），因为他讲课实在是太有意思了， 可能是因为讲博弈论的缘故吧，感觉那两天讲的数论还是比较好理解的，而且博弈论做起来还是挺有趣的。到了第二天的概率期望，难度还算是可以接受的样子，但还是做起题来有点困难。<br />\n<br />\n<br />\n六天的讲课时间结束了，啪的一下，很快啊。然后就开始了噩梦的一周，模拟赛！！！！<br />\n<br />\n<br />\nDay 1：因为编译器没配置好，爆0了，虽然爆0爆的不冤，但是为啥我配好的编译器模拟赛的时候不能用了啊。   rank INF = 0x3f3f3f3f;<br />\n<br />\nDay 2：有道题调挂了直接寄。   rank INF = 0x3f3f3f3f<br />\n<br />\nDay 3：dp专场，T1不知道哪挂了40分，然后rank7好像还行（虽然就60分。    rank 7<br />\n<br />\nDay 4：数学专场，4个小时6道题，就做出来一道，然后还有一道题的暴力写挂了    rank 8<br />\n<br />\nDay 5：两道数学题，推不出来，然后剩下的题暴力写挂了，本来能80+分    rank INF = 0x3f3f3f3f<br />\n<br />\nDay 6：T2是我给南校讲过的原题，然后剩下的题打了打暴力，最后暴力好像还是不够优雅    rank 10<br />\n<br />\nDay 7（今天）：除去一个高玩房老师，我竟然跟耳朵龙并列rank 3，得亏有个原题，T1瞎搞发现是个单峰函数，T3感觉好像跟括号序列有关然后往卡特兰数那想了想，最后结束前10分钟调出来了，但是没有看数据范围，空间开小了，扣了四十分，要不就rank 1了/kel。   rank 3<br />\n<br />\n这段时间模拟赛下来感觉自己大起大落的，老是出些zz错误，以后得改啊，要不然NOIP和省选寄了就是真的寄了。<br />\n<br />\n<br />\n还记得我之前说我们是阴面吗，我们七月上完课后，休息的那几天石家庄一直下大雨，等我们八月回去后宿舍潮的要死，而且还漏水掉墙皮，晚上还没有空调，熬了整整两天，晚上根本睡不着觉，更离谱的是只有我们宿舍这样，得亏跟王k说了之后，给我们换到阳面去了，真的是太难忘了<br />\n<br />\n<br />\n后记：暑假集训的时光还是好难忘啊，现在却也不后悔当初选择了竞赛，可能最后结局不一定很好，但是真的是一段宝贵的时光，毕竟我也像许多 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>o</mi><mi>i</mi><mi>e</mi><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">oier</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span> 一样在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>o</mi><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">oi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">i</span></span></span></span> 上付出了自己的青春啊。</p>\n<p>最后再挂一张我们刚到二本的照片吧</p>\n<p><img data-src=\"https://img1.imgtp.com/2023/10/05/d1tRPx2b.jpg\" alt=\"\" /></p>\n",
            "tags": [
                "游记",
                "游记"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/10/06/Slope-optimization/",
            "url": "https://undead-fire-ace.github.io/2023/10/06/Slope-optimization/",
            "title": "斜率优化学习笔记",
            "date_published": "2023-10-06T08:53:14.184Z",
            "content_html": "<p>学习笔记</p>\n<span id=\"more\"></span>\n<h1 id=\"斜率优化dp阉割版都单调的情况\"><a class=\"markdownIt-Anchor\" href=\"#斜率优化dp阉割版都单调的情况\"></a> 斜率优化dp阉割版（都单调的情况）</h1>\n<p>在一上午的 jzp 学长的传授后，最终还是稍微理解了什么是斜率优化 dp。(<s>有一说一，这玩意是真抽象，提前看了看别人写的博客还是不太理解</s>)</p>\n<p>首先如果我们要考虑怎么用斜率优化 dp ，得先知道这里的斜率指的是什么，我当我们没有学的时候，我们凭借对一次函数的认识可以感性的认为斜率指的是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi><mo>=</mo><mi>k</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">y = kx + b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 中的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 值，而实际上我们这里的斜率和一次函数的斜率还是非常的相似（个人感觉就是一样的）。</p>\n<p>我们先看一下这道题</p>\n<h2 id=\"hnoi2008-玩具装箱\"><a class=\"markdownIt-Anchor\" href=\"#hnoi2008-玩具装箱\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDMxOTU=\">[HNOI2008] 玩具装箱</span></h2>\n<h3 id=\"题目描述\"><a class=\"markdownIt-Anchor\" href=\"#题目描述\"></a> 题目描述</h3>\n<p>P 教授有编号为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>⋯</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">1 \\cdots n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 件玩具，第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 件玩具经过压缩后的一维长度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>C</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>为了方便整理，P教授要求：</p>\n<ul>\n<li>\n<p>在一个一维容器中的玩具编号是连续的。</p>\n</li>\n<li>\n<p>同时如果一个一维容器中有多个玩具，那么两件玩具之间要加入一个单位长度的填充物。形式地说，如果将第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 件玩具到第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 个玩具放到一个容器中，那么容器的长度将为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo>=</mo><mi>j</mi><mo>−</mo><mi>i</mi><mo>+</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mi>i</mi></mrow><mi>j</mi></msubsup><msub><mi>C</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">x=j-i+\\sum\\limits_{k=i}^{j}C_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.56089em;vertical-align:-1.002113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.558777em;\"><span style=\"top:-2.097887em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.000005em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span><span class=\"mop op-symbol small-op\">∑</span></span></span><span style=\"top:-3.997113em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.002113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n</li>\n</ul>\n<p>制作容器的费用与容器的长度有关，根据教授研究，如果容器长度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>，其制作费用为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mi>L</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">(x-L)^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>。其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span> 是一个常量。P 教授不关心容器的数目，他可以制作出任意长度的容器，甚至超过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">L</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span></span></span></span>。但他希望所有容器的总费用最小。</p>\n<h3 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\"></a> 分析：</h3>\n<p>对于这道题我们如果不看数据范围，可能很容易就写出一个比较简单的状态转移方程，我们先设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>i</mi></msubsup><mi>c</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">s[i] = \\sum_{j = 1}^ic[j] + 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.400382em;vertical-align:-0.43581800000000004em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.964564em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>， 然后我们的转移方程就变成了 ： <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mi>L</mi><mo>−</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>j</mi><mo>&lt;</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">dp[i] = min(dp[j] + (s[i] - s[j] - L - 1)^2) (j &lt; i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span></span></span></span> 。显然这个转移方程的复杂度是这个题的数据范围难以忍受的。然后我们考虑怎么优化。</p>\n<p>我们稍微想一下就会发现，其实我们在上面的转移中会有许多的冗余步骤，因为对于一个状态的转移，这个状态的有效转移的上一个状态的个数实际上是远小于我们所暴力枚举的这个区间的的，你会发现是不是跟当初单调队列优化的时候所出现的问题差不多，既然出现的问题差不多，我们是不是可以考虑一下是不是可以用类似的方法去解决这道题呢？</p>\n<p>首先我们对于上面的式子进行拆分。我们可以先把 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">min</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span></span></span></span> 给拆掉，就变成了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mi>L</mi><mo>−</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">dp[i] = dp[j] + (s[i] - s[j] - L - 1) ^ 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>。然后，我们再把平方拆开，就变成了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><msup><mo stretchy=\"false\">]</mo><mn>2</mn></msup><mo>−</mo><mn>2</mn><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mi>L</mi><mo>+</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>L</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>−</mo><mn>2</mn><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">dp[i] = s[i] ^ 2 - 2s[i]L + dp[j] + (s[j] + L)^2 - 2s[i]s[j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\"><span class=\"mclose\">]</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mord mathnormal\">L</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> ，我们假定我们现在有两个状态，分别是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>j</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">j_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05724em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>j</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">j_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05724em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。我们考虑当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>j</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">j_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05724em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> &lt; <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>j</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">j_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.05724em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>时，需要满足什么条件。</p>\n<p>我们可以对式子进行划分(这里为了方便就直接借用<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWGluZy1MaW5nL3AvMTEyMTAxNzkuaHRtbA==\">辰星凌大佬写好的式子了</span>)</p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/p9glus36.png\" alt=\"\" /></p>\n<p>然后我们设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mi>Y</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>L</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">X(i) = s[i], Y(i) = dp[i] + (s[i] + L) ^ 2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>。</p>\n<p>我们对其进行移项和化简就能得到 $2s[i] \\geq \\frac{Y(j_2)-Y(j_1)}{X(j_2)-X(j_1)} $。然后我们就可以得出，如果对于两个状态如果满足这个式子，那么后面的状态是优于前面的这个状态的的，如果我们对于每个相邻点，只保留后面的点优于前面的点的一系列的点，实际上就是一个单调递增的一堆点，如果我们在这里将更优的这个性质转换成斜率的话，因为是单调递增，所以最终就构成了一个下凸壳。</p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/e7244gbb.png\" alt=\"\" /></p>\n<p>每条彩线是每个节点对应的斜率也就是上面花间之后的那个值，中间的黑点为什么没有选择，主要是因为当我们选择他们之后会让答案变的更劣，所以我们最终维护的就是一个下凸壳。</p>\n<p>那么我们最终对状态转移的时候只需每次选取凸壳上的点进行转移即可，而维护凸壳的方法有很多，比如单调队列，单调栈，CDQ，平衡树等等，这里我用的是单调队列，因为相对比较好写和好调，但是会有特殊情况。（因为这道题里的 x 和 最后转换之后的式子是单调的，所以我们可以直接维护一个凸壳，但是有的时候是不单调的，那么我们就只能通过其他方式去维护了，其中受限制最小的李超线段树，理论上是任何情况下通用的）</p>\n<p>下面是代码实现</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> int long long</span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n            <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n                x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n, L;\n    <span class=\"hljs-type\">int</span> w[N], q[N], hh = <span class=\"hljs-number\">1</span>, tt;\n    <span class=\"hljs-type\">int</span> s[N], dp[N];   <span class=\"hljs-comment\">//:s[i] = c[k] + 1  (1 &lt;= k &lt;= i)</span>\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">calc_Y</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> dp[x] + (s[x] + L) * (s[x] + L); \n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">calc_X</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> s[x];\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">double</span> <span class=\"hljs-title\">calc</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-type\">double</span>) ((<span class=\"hljs-built_in\">calc_Y</span>(y) - <span class=\"hljs-built_in\">calc_Y</span>(x)) / (<span class=\"hljs-built_in\">calc_X</span>(y) - <span class=\"hljs-built_in\">calc_X</span>(x)));\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(L);\n        ++ L;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-built_in\">read</span>(w[i]);\n            s[i] = s[i - <span class=\"hljs-number\">1</span>] + w[i] + <span class=\"hljs-number\">1</span>;\n        &#125;\n\n        <span class=\"hljs-comment\">//for(int i = 1 ; i &lt;= n ; ++ i)</span>\n        <span class=\"hljs-comment\">//    write(s[i]), putchar(&#x27; &#x27;);</span>\n\n        q[++ tt] = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;   \n            <span class=\"hljs-keyword\">while</span>(hh &lt; tt &amp;&amp; <span class=\"hljs-built_in\">calc</span>(q[hh], q[hh + <span class=\"hljs-number\">1</span>]) &lt;= <span class=\"hljs-number\">2</span> * s[i])\n                hh ++;\n            <span class=\"hljs-type\">int</span> fron = q[hh];\n            dp[i] = dp[fron] + (s[i] - s[fron] - L) * (s[i] - s[fron] - L);\n            <span class=\"hljs-keyword\">while</span>(hh &lt; tt &amp;&amp; <span class=\"hljs-built_in\">calc</span>(q[tt - <span class=\"hljs-number\">1</span>], q[tt]) &gt;= <span class=\"hljs-built_in\">calc</span>(q[tt - <span class=\"hljs-number\">1</span>], i))\n                tt --;\n            q[++ tt] = i;\n        &#125;\n\n        <span class=\"hljs-built_in\">write</span>(dp[n]);\n    &#125;\n\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve::<span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<h2 id=\"cats-transport\"><a class=\"markdownIt-Anchor\" href=\"#cats-transport\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vQ0YzMTFC\">Cats Transport</span></h2>\n<h3 id=\"题面翻译\"><a class=\"markdownIt-Anchor\" href=\"#题面翻译\"></a> 题面翻译</h3>\n<p>Zxr960115 是一个大农场主。</p>\n<p>他养了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 只可爱的猫子,雇佣了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> 个铲屎官。这里有一条又直又长的道路穿过了农场，有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个山丘坐落在道路周围，编号自左往右从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>。山丘 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 与山丘 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 的距离是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>D</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">D_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 米。铲屎官们住在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 号山丘。</p>\n<p>一天，猫子们外出玩耍。猫子 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 去山丘 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>H</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">H_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 游玩，在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">T_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 时间结束他的游玩，然后在山丘 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>H</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">H_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 傻等铲屎官。铲屎官们必须把所有的猫子带上。每个铲屎官直接从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>H</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">H_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 走到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>H</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">H_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.08125em;\">H</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，中间不停下，可以认为不花费时间的把游玩结束的猫子带上。每个铲屎官的速度为一米每单位时间，并且足够强壮来带上任意数量的猫子。</p>\n<p>举个栗子，假装我们有两个山丘( <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>D</mi><mn>2</mn></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">D_2=1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> )，有一只猫子，他想去山丘 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 玩到时间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span>。然后铲屎官如果在时间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 或者时间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span> 从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 号山丘出发，他就能抱走猫子。如果他在时间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 出发那么就不行(猫子还在玩耍)。如果铲屎官在时间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 出发，猫子就不用等他（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">Δ</mi><mi>T</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">\\Delta T=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">Δ</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>）。如果他在时间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">3</span></span></span></span> 出发，猫子就要等他 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个单位时间。</p>\n<p>你的任务是安排每个铲屎官出发的时间(可以从 0 时刻之前出发），最小化猫子们等待的时间之和。</p>\n<hr />\n<h3 id=\"分析-2\"><a class=\"markdownIt-Anchor\" href=\"#分析-2\"></a> 分析：</h3>\n<p>这道题也非常的经典，一开始的状态转移也比较好写，我们先将题中的数据转换一下，我们考虑对于每一个猫来说，你最早的出发时间就是那个那座山里第一座山的距离再减去猫游玩的时间（因为这里的速度是1m/s），我们先记这个时间为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">a[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> ，然后我们就可以设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 为派出了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个人，已经接了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 只猫，猫所等待的时间，然后转移式子就是</p>\n<hr />\n<h4 id=\"fij-minfi-1k-aj-j-k-sum_l-k-1jal\"><a class=\"markdownIt-Anchor\" href=\"#fij-minfi-1k-aj-j-k-sum_l-k-1jal\"></a> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>a</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>∗</mo><mo stretchy=\"false\">(</mo><mi>j</mi><mo>−</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mi>k</mi><mo>+</mo><mn>1</mn></mrow><mi>j</mi></msubsup><mi>a</mi><mo stretchy=\"false\">[</mo><mi>l</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j] = min(f[i - 1][k] + a[j] * (j - k) - \\sum_{l = k + 1}^{j}a[l])</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.322605em;vertical-align:-0.35804100000000005em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.964564em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029000000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.35804100000000005em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span></span></span></span></h4>\n<hr />\n<p>这个式子实际上就是从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i][k]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span></span></span></span> 这个式子转移过来的，然后多的时间就是在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k + 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 之前的猫全按照不玩，等了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">a[j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 的时间，最后再减去每只猫本身出发的时间。</p>\n<p>对于这个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">a[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> 数组我们其实可以通过预处理前缀和来优化一下，这里我们计 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>i</mi></msubsup><mi>a</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">sum[i] = \\sum_{j = 1}^i a[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.400382em;vertical-align:-0.43581800000000004em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.964564em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> ，然后我们上面的那个式子就变成了</p>\n<hr />\n<h4 id=\"fij-minfi-1k-aj-j-k-sumj-sumk\"><a class=\"markdownIt-Anchor\" href=\"#fij-minfi-1k-aj-j-k-sumj-sumk\"></a> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>a</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>∗</mo><mo stretchy=\"false\">(</mo><mi>j</mi><mo>−</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j] = min(f[i - 1][k] + a[j] * (j - k) - (sum[j] - sum[k]))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></h4>\n<hr />\n<p>然后我们会发现只有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 是一只在变化的， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 都是枚举的，固定不变的，我们就可以考虑把 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 给单独提出来，这里我们再设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">w(k, i) = f[i - 1][k] + sum(k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span> ，这样我们的式子就进一步的转换为</p>\n<hr />\n<h4 id=\"fij-minwij-ajj-k-sumj\"><a class=\"markdownIt-Anchor\" href=\"#fij-minwij-ajj-k-sumj\"></a> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>w</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>a</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>∗</mo><mo stretchy=\"false\">(</mo><mi>j</mi><mo>−</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j] = min(w(i,j) + a[j]*(j - k) -sum[j])</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span></span></span></span></h4>\n<hr />\n<p>然后我们可以考虑将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">min</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span></span></span></span> 先去掉，因为我们肯定是要去找最小值的，我们考虑在什么情况下，后面的状态会比前面的状态更优，我们设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">k_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">k_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，当由 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">k_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 转移过来的状态比由 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">k_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 转移过来的状态更优时，因为要找最小值，且此时 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的值是固定的，因此我们就可以把只含 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的那项给删掉，然后就会得到一个不等式</p>\n<hr />\n<h4 id=\"wk_1j-ajj-k_1-leq-wk_2j-ajj-k_2\"><a class=\"markdownIt-Anchor\" href=\"#wk_1j-ajj-k_1-leq-wk_2j-ajj-k_2\"></a> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo stretchy=\"false\">(</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>a</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>∗</mo><mo stretchy=\"false\">(</mo><mi>j</mi><mo>−</mo><msub><mi>k</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo>≤</mo><mi>w</mi><mo stretchy=\"false\">(</mo><msub><mi>k</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mi>a</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>∗</mo><mo stretchy=\"false\">(</mo><mi>j</mi><mo>−</mo><msub><mi>k</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">w(k_1,j) + a[j]*(j - k_1) \\leq w(k_2,j) + a[j]*(j - k_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></h4>\n<hr />\n<p>然后再移项</p>\n<hr />\n<h4 id=\"wk_1-j-wk_2-j-leq-ajk_1-k_2\"><a class=\"markdownIt-Anchor\" href=\"#wk_1-j-wk_2-j-leq-ajk_1-k_2\"></a> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo stretchy=\"false\">(</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>w</mi><mo stretchy=\"false\">(</mo><msub><mi>k</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>≤</mo><mi>a</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>∗</mo><mo stretchy=\"false\">(</mo><msub><mi>k</mi><mn>1</mn></msub><mo>−</mo><msub><mi>k</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">w(k_1, j) - w(k_2, j) \\leq a[j]*(k_1-k_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></h4>\n<hr />\n<p>最后我们想要去维护，肯定需要一个定值，我们就可以让一边只剩下 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">a[j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span>，那么最后就变成了</p>\n<hr />\n<h4 id=\"fracwk_2j-wk_1jk_2-k_1-leq-aj\"><a class=\"markdownIt-Anchor\" href=\"#fracwk_2j-wk_1jk_2-k_1-leq-aj\"></a> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi>w</mi><mo stretchy=\"false\">(</mo><msub><mi>k</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>w</mi><mo stretchy=\"false\">(</mo><msub><mi>k</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><mrow><msub><mi>k</mi><mn>2</mn></msub><mo>−</mo><msub><mi>k</mi><mn>1</mn></msub></mrow></mfrac><mo>≤</mo><mi>a</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">\\frac{w(k_2,j) - w(k_1,j)}{k_2-k_1} \\leq a[j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.4550999999999998em;vertical-align:-0.44509999999999994em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen mtight\">(</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.44509999999999994em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span></h4>\n<hr />\n<p>这里为了方便就将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">k_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">k_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 换了一下位置，我们观察最终的这个式子就成只要满足上面的式子那么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>k</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">k_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 就一定是比 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>k</mi><mn>1</mn></msub></mrow><annotation encoding=\"application/x-tex\">k_1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 更优的。（一般是将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">w(k,i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span></span></span></span> 这类的函数叫做斜率式，实际上就是一种对于更优性的判断标准）</p>\n<p>我们的最终的递推式子也就变成了</p>\n<hr />\n<h4 id=\"fij-wk-i-sumj-ajj-k\"><a class=\"markdownIt-Anchor\" href=\"#fij-wk-i-sumj-ajj-k\"></a> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>w</mi><mo stretchy=\"false\">(</mo><mi>k</mi><mo separator=\"true\">,</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>a</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>∗</mo><mo stretchy=\"false\">(</mo><mi>j</mi><mo>−</mo><mi>k</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j] = w(k, i) - sum[j] + a[j]*(j - k)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span></span></span></h4>\n<hr />\n<p>然后对于上面的状态，因为我们有了更优性的判断的式子，我们就可以通过单调队列来优化更优状态的转移来降低转移复杂度和无用状态。</p>\n<p>还有一个比较重要的点就是要将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">a[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> 排序，因为人接猫肯定是接的一整段的连续的时间，所以要将出发时间拍一下序</p>\n<p>下面是代码实现（稍微带点比较重要的注释）</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> int long long</span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n            <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n                x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">2e5</span> + <span class=\"hljs-number\">10</span>, INF = <span class=\"hljs-number\">1e13</span> + <span class=\"hljs-number\">10</span>;   <span class=\"hljs-comment\">//   INF一定要开的足够大!!!!!!</span>\n\n    <span class=\"hljs-type\">int</span> n, p, m;\n    <span class=\"hljs-type\">int</span> a[N], t[N];\n    <span class=\"hljs-type\">int</span> f[<span class=\"hljs-number\">110</span>][N];   <span class=\"hljs-comment\">//f[i][j]:派了i个人，接了j只猫用的时间</span>\n    <span class=\"hljs-type\">int</span> q[N], hh, tt;\n    <span class=\"hljs-type\">int</span> sum[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">calc</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>   <span class=\"hljs-comment\">//就是w(k,i)这个式子</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> f[x - <span class=\"hljs-number\">1</span>][y] + sum[y];\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(m), <span class=\"hljs-built_in\">read</span>(p);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">2</span> ; i &lt;= n ; ++ i)   <span class=\"hljs-comment\">//预处理距离，一定要处理成前缀和，因为题干中所给的是距离上一座山的距离而不是距离第一座山的距离</span>\n        &#123;\n            <span class=\"hljs-type\">int</span> x;\n            <span class=\"hljs-built_in\">read</span>(x);\n            t[i] = t[i - <span class=\"hljs-number\">1</span>] + x;\n        &#125;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= m ; ++ i)   <span class=\"hljs-comment\">//计算出发时间，顺便初始化dp数组</span>\n        &#123;\n            <span class=\"hljs-type\">int</span> x, y;\n            <span class=\"hljs-built_in\">read</span>(x), <span class=\"hljs-built_in\">read</span>(y);\n            a[i] = y - t[x];\n            f[<span class=\"hljs-number\">0</span>][i] = INF;\n        &#125;\n\n        std::<span class=\"hljs-built_in\">sort</span>(a + <span class=\"hljs-number\">1</span>, a + m + <span class=\"hljs-number\">1</span>);   <span class=\"hljs-comment\">//一定要排序</span>\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= m ; ++ i)   <span class=\"hljs-comment\">//排完序再处理前缀和，要不然是错的</span>\n            sum[i] = a[i] + sum[i - <span class=\"hljs-number\">1</span>];\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= p ; ++ i)\n        &#123;\n            hh = <span class=\"hljs-number\">1</span>, tt = <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span> ; j &lt;= m ; ++ j)\n            &#123;\n                <span class=\"hljs-keyword\">while</span>(hh &lt; tt &amp;&amp; <span class=\"hljs-built_in\">calc</span>(i, q[hh + <span class=\"hljs-number\">1</span>]) - <span class=\"hljs-built_in\">calc</span>(i, q[hh]) &lt;= a[j] * (q[hh + <span class=\"hljs-number\">1</span>] - q[hh]))   \n                    hh ++;   <span class=\"hljs-comment\">//如果队头(hh)已经小于队头的下一个元素(hh + 1)，那么队头就没有利用价值，直接弹出就行</span>\n                <span class=\"hljs-keyword\">if</span>(hh &lt;= tt)\n                    f[i][j] = <span class=\"hljs-built_in\">calc</span>(i, q[hh]) - sum[j] + a[j] * (j - q[hh]);   <span class=\"hljs-comment\">//如果当前队列中还有状态，就进行转移</span>\n                <span class=\"hljs-keyword\">while</span>(hh &lt; tt &amp;&amp; (<span class=\"hljs-built_in\">calc</span>(i, j) - <span class=\"hljs-built_in\">calc</span>(i, q[tt])) * (q[tt] - q[tt - <span class=\"hljs-number\">1</span>]) &lt;= (<span class=\"hljs-built_in\">calc</span>(i, q[tt]) - <span class=\"hljs-built_in\">calc</span>(i, q[tt - <span class=\"hljs-number\">1</span>])) * (j - q[tt]))  \n                    tt --;    <span class=\"hljs-comment\">//如果队尾的元素不如新插入之后的更优了就要弹出，这里为了避免除法的误差，可以直接乘到对面去</span>\n                q[++ tt] = j;   <span class=\"hljs-comment\">//将当前元素入队</span>\n            &#125;\n        &#125;\n\n        <span class=\"hljs-built_in\">write</span>(f[p][m]);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve::<span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<h2 id=\"jsoi2011-柠檬\"><a class=\"markdownIt-Anchor\" href=\"#jsoi2011-柠檬\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDU1MDQ=\">[JSOI2011] 柠檬</span></h2>\n<h3 id=\"题目描述-2\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-2\"></a> 题目描述</h3>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Flute</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Flute}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord\">Flute</span></span></span></span></span> 很喜欢柠檬。它准备了一串用树枝串起来的贝壳，打算用一种魔法把贝壳变成柠檬。贝壳一共有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>100000</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(1≤n≤100000)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span> 只，按顺序串在树枝上。为了方便，我们从左到右给贝壳编号 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1..</mn><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">1..n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">.</span><span class=\"mord\">.</span><span class=\"mord mathnormal\">n</span></span></span></span> 。每只贝壳的大小不一定相同，贝壳 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的大小为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub><mo stretchy=\"false\">(</mo><mn>1</mn><mo>≤</mo><msub><mi>s</mi><mi>i</mi></msub><mo>≤</mo><mn>10000</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">s_i(1≤s_i≤10000)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7859700000000001em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mclose\">)</span></span></span></span> 。</p>\n<p>变柠檬的魔法要求<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>:</mo><mtext> Flute</mtext></mrow><annotation encoding=\"application/x-tex\">:\\ \\text{Flute}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord\">Flute</span></span></span></span></span> 每次从树枝一端取下一小段连续的贝壳，并选择一种贝壳的大小 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">s_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。如果这一小段贝壳中大小为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">s_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的贝壳有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span> 只，那么魔法可以把这一小段贝壳变成 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mn>0</mn></msub><msup><mi>t</mi><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">s_0t^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.964108em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span> 只柠檬。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Flute</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Flute}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord\">Flute</span></span></span></span></span> 可以取任意多次贝壳，直到树枝上的贝壳被全部取完。各个小段中，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Flute</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Flute}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord\">Flute</span></span></span></span></span> 选择的贝壳大小 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mn>0</mn></msub></mrow><annotation encoding=\"application/x-tex\">s_0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 可以不同。而最终 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Flute</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Flute}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord\">Flute</span></span></span></span></span> 得到的柠檬数，就是所有小段柠檬数的总和。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>Flute</mtext></mrow><annotation encoding=\"application/x-tex\">\\text{Flute}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord\">Flute</span></span></span></span></span> 想知道，它最多能用这一串贝壳<br />\n变出多少柠檬。请你帮忙解决这个问题。</p>\n<hr />\n<h3 id=\"分析-3\"><a class=\"markdownIt-Anchor\" href=\"#分析-3\"></a> 分析：</h3>\n<p>对于这道题我们先不用急着做，我们先看一下是不是有什么性质，首先他说贡献就是你截取的某一段中某种数量的平方和大小的乘积，我们考虑对于选定的一段，要想总贡献最大，我们这一段的头和尾肯定是一样的，因为如果头和尾不一样的话，把尾单独拆出去肯定会比加上尾要更优，然后我们搞清楚了这个小性质就可以开始继续往下搞了。</p>\n<p>我们设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> 为拆到了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的最大贡献，然后我们很快的就能想到去通过一个区间来更新当前状态</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>+</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>∗</mo><mo stretchy=\"false\">(</mo><msub><mi>c</mi><mi>i</mi></msub><mo>−</mo><msub><mi>c</mi><mi>j</mi></msub><mo>+</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i] = max(f[j - 1] + s[i] * (c_i - c_j + 1) ^ 2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8694379999999999em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></p>\n<p>其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">s[j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 为第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 个位置上的该颜色的数量， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">c_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为位置为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的 为颜色是该颜色中第几次出现。这样直接做的时间复杂度是比较难以接受的，我们考虑进一步的将式子进行拆分去看看能不能做进一步的优化，然后可以先将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">max</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span></span></span></span> 拆掉，然后再将平方拆掉</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>∗</mo><msubsup><mi>c</mi><mi>i</mi><mn>2</mn></msubsup><mo>+</mo><mn>2</mn><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><msub><mi>c</mi><mi>i</mi></msub><mo>+</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>+</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><msubsup><mi>c</mi><mi>i</mi><mn>2</mn></msubsup><mo>−</mo><mn>2</mn><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><msub><mi>c</mi><mi>j</mi></msub><mo stretchy=\"false\">)</mo><mo>−</mo><mn>2</mn><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><msub><mi>c</mi><mi>i</mi></msub><msub><mi>c</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">f[i] = (s[i] * c_i^2 + 2s[i]c_i + s[i]) + (f[j - 1] + s[i]c_i^2 - 2s[i]c_j) - 2s[i]c_ic_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.072772em;vertical-align:-0.258664em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-2.441336em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.072772em;vertical-align:-0.258664em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-2.441336em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>我们将只有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">i,j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span>都有的分别括起来然后我们对于只 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的，其值是可以确定的，对于含 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的，其实际上是单调递增的，所以我们可以直接对其维护一个上凸壳。</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;queue&gt;</span></span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> int long long</span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> top q[S][q[S].size() - 2]</span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> Top q[S][q[S].size() - 1]</span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">2e6</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n;\n    <span class=\"hljs-type\">int</span> f[N], tot[N];\n    <span class=\"hljs-type\">int</span> last[N], c[N], s[N];\n\n    std::vector&lt;<span class=\"hljs-type\">int</span>&gt; q[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">X</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> i)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> c[i];\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">Y</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> i)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> f[i - <span class=\"hljs-number\">1</span>] - <span class=\"hljs-number\">2</span> * c[i] * s[i] + s[i] * c[i] * c[i];\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">double</span> <span class=\"hljs-title\">w</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> j, <span class=\"hljs-type\">int</span> i)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1.0</span> * (<span class=\"hljs-built_in\">Y</span>(j) - <span class=\"hljs-built_in\">Y</span>(i)) / (<span class=\"hljs-built_in\">X</span>(j) - <span class=\"hljs-built_in\">X</span>(i));\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">calc</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> j, <span class=\"hljs-type\">int</span> i)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> f[j - <span class=\"hljs-number\">1</span>] + s[i] * (c[i] - c[j] + <span class=\"hljs-number\">1</span>) * (c[i] - c[j] + <span class=\"hljs-number\">1</span>);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n);\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= n; ++i)\n        &#123;\n            <span class=\"hljs-built_in\">read</span>(s[i]);\n            c[i] = ++ tot[s[i]];\n        &#125;\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= n; ++i)\n        &#123;\n            <span class=\"hljs-type\">int</span> S = s[i];\n            <span class=\"hljs-keyword\">while</span>(q[S].<span class=\"hljs-built_in\">size</span>() &gt;= <span class=\"hljs-number\">2</span> &amp;&amp; <span class=\"hljs-built_in\">w</span>(top, Top) &lt;= <span class=\"hljs-built_in\">w</span>(top, i))\n                q[S].<span class=\"hljs-built_in\">pop_back</span>();\n            q[S].<span class=\"hljs-built_in\">push_back</span>(i);\n            <span class=\"hljs-keyword\">while</span>(q[S].<span class=\"hljs-built_in\">size</span>() &gt;= <span class=\"hljs-number\">2</span> &amp;&amp; <span class=\"hljs-built_in\">calc</span>(Top, i) &lt;= <span class=\"hljs-built_in\">calc</span>(top, i))\n                q[S].<span class=\"hljs-built_in\">pop_back</span>();\n            f[i] = <span class=\"hljs-built_in\">calc</span>(Top, i);\n        &#125;\n\n        <span class=\"hljs-built_in\">write</span>(f[n]);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve::<span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<h2 id=\"最后再说一道例题吧p2120-zjoi2007-仓库建设\"><a class=\"markdownIt-Anchor\" href=\"#最后再说一道例题吧p2120-zjoi2007-仓库建设\"></a> 最后再说一道例题吧<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDIxMjA=\">P2120 [ZJOI2007] 仓库建设</span></h2>\n<h3 id=\"题目描述-3\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-3\"></a> 题目描述</h3>\n<p>L 公司有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个工厂，由高到低分布在一座山上，工厂 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 在山顶，工厂 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 在山脚。</p>\n<p>由于地形的不同，在不同工厂建立仓库的费用可能是不同的。第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个工厂目前已有成品 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 件，在第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个工厂位置建立仓库的费用是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">c_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>对于没有建立仓库的工厂，其产品应被运往其他的仓库进行储藏，而由于 L 公司产品的对外销售处设置在山脚的工厂 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>，故产品只能往山下运（即<strong>只能运往编号更大的工厂的仓库</strong>），当然运送产品也是需要费用的，一件产品运送一个单位距离的费用是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>。</p>\n<p>假设建立的仓库容量都都是足够大的，可以容下所有的产品。你将得到以下数据：</p>\n<ul>\n<li>工厂 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 距离工厂 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 的距离 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>（其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">x_1=0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>）。</li>\n<li>工厂 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 目前已有成品数量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</li>\n<li>在工厂 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 建立仓库的费用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">c_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</li>\n</ul>\n<p>请你帮助 L 公司寻找一个仓库建设的方案，使得总的费用（建造费用 + 运输费用）最小。</p>\n<hr />\n<h3 id=\"分析-4\"><a class=\"markdownIt-Anchor\" href=\"#分析-4\"></a> 分析：</h3>\n<p>这道题也比较的经典，我们首先考虑对于最后一个仓库如果他里面是有货物的，我们是一定要建仓库的，因为在他后面没有仓库可以让他进行转移，所以必须得建，然后我们就很快的有了一个思路，我们可以设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> 为在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 建仓库，所花费的最小费用，然后我们考虑怎么转移，对于不建仓库的地方，他的所有的货物是一定要转移的，所以我们不妨枚举在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 之前的最后一个仓库，那么我们就会有下面的式子</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>x</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mi>j</mi><mo>+</mo><mn>1</mn></mrow><mi>i</mi></msubsup><mi>p</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>+</mo><mn>1</mn></mrow><mi>i</mi></msubsup><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo>∗</mo><mi>p</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i] = min(f[j] + x[i] \\sum_{k = j + 1}^{i}p[k] - \\sum_{j + 1}^{i}(x[k]*p[k]))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.400382em;vertical-align:-0.43581800000000004em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.964564em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.400382em;vertical-align:-0.43581800000000004em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.964564em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.43581800000000004em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>然后我们一般对于有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∑</mo></mrow><annotation encoding=\"application/x-tex\">\\sum</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.00001em;vertical-align:-0.25001em;\"></span><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span></span></span></span> 这种的东西的通用手段就是维护前缀和，我们设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">sum[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> 为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">p[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> 的前缀和， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>u</mi><mi>l</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">mul[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> 为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>∗</mo><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">x[i]*p[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> 的前缀和，然后就变成了这样</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>x</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mo>−</mo><mo stretchy=\"false\">(</mo><mi>m</mi><mi>u</mi><mi>l</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mi>m</mi><mi>u</mi><mi>l</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i] = min(f[j] + x[i](sum[i] - sum[j + 1]) - (mul[i] - mul[j + 1]))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>我们再考虑什么情况下更优，我们列个不等式然后化简一下就能得到这么一个式子</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><msub><mi>k</mi><mn>1</mn></msub><mo stretchy=\"false\">]</mo><mo>+</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><msub><mi>k</mi><mn>1</mn></msub><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mo>−</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><msub><mi>k</mi><mn>2</mn></msub><mo stretchy=\"false\">]</mo><mo>+</mo><mi>m</mi><mi>u</mi><mi>l</mi><mo stretchy=\"false\">[</mo><msub><mi>k</mi><mn>2</mn></msub><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><msub><mi>k</mi><mn>1</mn></msub><mo stretchy=\"false\">]</mo><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><msub><mi>k</mi><mn>2</mn></msub><mo stretchy=\"false\">]</mo></mrow></mfrac><mo>&lt;</mo><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">\\frac{(f[k_1]+sum[k_1]) - (f[k_2]+mul[k_2])}{sum[k_1] - sum[k_2]}&lt;x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.53em;vertical-align:-0.52em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\">m</span><span class=\"mopen mtight\">[</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">]</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\">m</span><span class=\"mopen mtight\">[</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">]</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen mtight\">[</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">]</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">s</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\">m</span><span class=\"mopen mtight\">[</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">]</span><span class=\"mclose mtight\">)</span><span class=\"mbin mtight\">−</span><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen mtight\">[</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">]</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mopen mtight\">[</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31731428571428577em;\"><span style=\"top:-2.357em;margin-left:-0.03148em;margin-right:0.07142857142857144em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.143em;\"><span></span></span></span></span></span></span><span class=\"mclose mtight\">]</span><span class=\"mclose mtight\">)</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.52em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>那么我们就可以设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>X</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>m</mi><mi>u</mi><mi>l</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">X(i) = f[i] + mul[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">X</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> ， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>Y</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">Y(i) = sum[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.22222em;\">Y</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span>，然后就可以根据这个去单调队列维护了</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> int long long</span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n            <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n                x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">2e6</span> + <span class=\"hljs-number\">10</span>, INF = <span class=\"hljs-number\">0x3f3f3f3f3f3f</span>;\n\n    <span class=\"hljs-type\">int</span> n;\n    <span class=\"hljs-type\">int</span> p[N], c[N], x[N];\n    <span class=\"hljs-type\">int</span> dp[N], sum[N], mul[N];\n    <span class=\"hljs-type\">int</span> q[N], hh = <span class=\"hljs-number\">1</span>, tt, pos, ans = INF;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">calc</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> j, <span class=\"hljs-type\">int</span> i)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> dp[j] + x[i] * (sum[i] - sum[j]) - (mul[i] - mul[j]) + c[i];\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">X</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> i)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> dp[i] + mul[i];\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">Y</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> i)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> sum[i];\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">long</span> <span class=\"hljs-type\">double</span> <span class=\"hljs-title\">slope</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> k1, <span class=\"hljs-type\">int</span> k2)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> (<span class=\"hljs-type\">long</span> <span class=\"hljs-type\">double</span>) <span class=\"hljs-number\">1.0</span> * (<span class=\"hljs-built_in\">X</span>(k1) - <span class=\"hljs-built_in\">X</span>(k2)) / (<span class=\"hljs-built_in\">Y</span>(k1) - <span class=\"hljs-built_in\">Y</span>(k2));\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-built_in\">read</span>(x[i]), <span class=\"hljs-built_in\">read</span>(p[i]), <span class=\"hljs-built_in\">read</span>(c[i]);\n            sum[i] = sum[i - <span class=\"hljs-number\">1</span>] + p[i];\n            mul[i] = mul[i - <span class=\"hljs-number\">1</span>] + p[i] * x[i];\n        &#125;\n\n        q[++ tt] = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-keyword\">while</span>(hh &lt; tt &amp;&amp; <span class=\"hljs-built_in\">slope</span>(q[hh + <span class=\"hljs-number\">1</span>], q[hh]) &lt; x[i])\n                hh ++;\n            dp[i] = <span class=\"hljs-built_in\">calc</span>(q[hh], i);\n            <span class=\"hljs-keyword\">while</span>(hh &lt; tt &amp;&amp; <span class=\"hljs-built_in\">slope</span>(i, q[tt]) &lt; <span class=\"hljs-built_in\">slope</span>(i, q[tt - <span class=\"hljs-number\">1</span>]))\n                tt --;\n            q[++ tt] = i;\n        &#125;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = n ; i &gt;= <span class=\"hljs-number\">1</span> ; -- i)   <span class=\"hljs-comment\">//注意！！！！因为可能后面可能有很多仓库里什么都没有，然后你需要特判断一下，否则可能会100分但是unaccepted</span>\n        &#123;\n            ans = <span class=\"hljs-built_in\">min</span>(ans, dp[i]);\n            <span class=\"hljs-keyword\">if</span>(p[i] != <span class=\"hljs-number\">0</span>)\n                <span class=\"hljs-keyword\">break</span>;\n        &#125;\n\n        <span class=\"hljs-built_in\">write</span>(ans);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve::<span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<h1 id=\"to-be-continue\"><a class=\"markdownIt-Anchor\" href=\"#to-be-continue\"></a> To Be Continue……</h1>\n",
            "tags": [
                "笔记",
                "动态规划",
                "笔记",
                "动态规划"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/10/06/Segmnet-Tree-Merge/",
            "url": "https://undead-fire-ace.github.io/2023/10/06/Segmnet-Tree-Merge/",
            "title": "线段树合并笔记",
            "date_published": "2023-10-06T08:53:14.168Z",
            "content_html": "<p>学习笔记</p>\n<span id=\"more\"></span>\n<h1 id=\"线段树合并笔记\"><a class=\"markdownIt-Anchor\" href=\"#线段树合并笔记\"></a> 线段树合并笔记</h1>\n<h3 id=\"定义\"><a class=\"markdownIt-Anchor\" href=\"#定义\"></a> 定义：</h3>\n<p>定义其实就是字面意思，就是将两棵线段树合并在一起，至于我们为什么要合并，我们可以先可以看道例题。</p>\n<h1 id=\"lomsat-gelral\"><a class=\"markdownIt-Anchor\" href=\"#lomsat-gelral\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vQ0Y2MDBF\">Lomsat gelral</span></h1>\n<h2 id=\"题面翻译\"><a class=\"markdownIt-Anchor\" href=\"#题面翻译\"></a> 题面翻译</h2>\n<ul>\n<li>有一棵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个结点的以  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 号结点为根的<strong>有根树</strong>。</li>\n<li>每个结点都有一个颜色，颜色是以编号表示的， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 号结点的颜色编号为  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">c_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。</li>\n<li>如果一种颜色在以  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 为根的子树内出现次数最多，称其在以  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 为根的子树中占<strong>主导地位</strong>。显然，同一子树中可能有多种颜色占主导地位。</li>\n<li>你的任务是对于每一个  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>∈</mo><mo stretchy=\"false\">[</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">i\\in[1,n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69862em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span></span></span></span>，求出以  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 为根的子树中，占主导地位的颜色的编号和。</li>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mo separator=\"true\">,</mo><msub><mi>c</mi><mi>i</mi></msub><mo>≤</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n\\le 10^5,c_i\\le n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span></li>\n</ul>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\"></a> 分析：</h2>\n<p>我们先考虑这道题的暴力的做法，就是对于每个节点直接 dfs 暴力求一下这棵子树中的每个颜色的数量，然后取最大值，那么显然易见肯定会超时。</p>\n<p>我们先想一想为什么会超时</p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/lyg0qjwj.png\" alt=\"\" /></p>\n<p>对于这么一张图，当我们扫描 3 号节点的子树时候会将 3， 6， 7都扫描到，而当我们再统计 1 号节点的答案时会再将 3 号节点的子树搜一遍，这样就会有大量的重复计算，实际上 1 号节点是可以通过 2 号节点和 3 号节点答案去拼凑出来的，那么这个拼凑的过程其实就是将以 2 号节点为根的线段树和以 3 号节点为根的线段树进行合并。</p>\n<p>那么我们如何合并呢？在学之前你需要知道权值线段树和动态开点。</p>\n<p><s>什么？？你不会</s> 那我就稍微讲一讲，我们一开始学的线段树，对于每个节点的 l 和 r 实际上维护的是一个数组或是别的数据结构的下标，但但是我们会发现这样如果让统计一个区间的某个值出现的次数就很难维护，那么这时候就可以使用我们的权值线段树了，与普通线段树不同的是我们此时每个节点的 l 和 r 维护并不再是下标而是一个值域，比如一个节点的 l 是 3， r 是 8，那么我们这个节点所维护的就是数值大小在 3 和 8 之间的数出现的次数。这就是权值线段树的基本思想。</p>\n<p>但是如果仅仅是这样还是不够，因为你会发现，当题干中的值域范围非常大的时候，我们的权值线段树是开不下的，那么我们还要维护，那么我们考虑对原有的权值线段树进行压榨，我们其实可以想到，对于一颗权值线段树，我们的每个节点是不一定有数字，而这样的节点对于答案是没有任何贡献的，而且往往这样的节点会很多，因此我们可以在建线段树的时候先不把这些空的节点都建出来，而是用到了一个节点再建一个节点。</p>\n<p>比如对于这么一棵树(每个节点下面的数字就是 l 和 r，也就是值域)</p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/3em6cq11.png\" alt=\"\" /></p>\n<p>我们会发现 2 号节点虽然有着 l 和 r ，但是他只连了值域为 2 的 4 号节点和值域 为 3 的 5 号节点，为什么没有连值域为 1 和 4 的节点呢，因为如果我们没有这些数，实际上就没有创建他们的必要了（因为对答案肯定是没有贡献的），那么如果你再插入一个值域为 6 的节点怎么办呢？那你就直接给 3 号节点加个新的儿子并将他的值域设成 6 即可。</p>\n<p>那么你会发现如果我分别加了1，2，3，4值域的节点，我刚才的那个图的 2 号节点会有 4 个儿子了，这就有点不太符合线段树的结构了，那么我们此时可以再让 l 和 r 的意义又变成了下标。那么你肯定又会有疑问了，那我怎么确定值域呢？？</p>\n<p>我们可以先看着代码理解一下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">insert</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> &amp;u, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r, <span class=\"hljs-type\">int</span> val)</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span>(!u)  <span class=\"hljs-comment\">//如果没有这个节点就新建一个</span>\n        u = ++ cnt;   <span class=\"hljs-comment\">//cnt为节点的编号</span>\n    <span class=\"hljs-keyword\">if</span>(l == r)   <span class=\"hljs-comment\">//入如果已经到了叶子节点，就证明找到了这个点，直接将总和加一即可</span>\n    &#123;\n        tr[u].sum ++;\n        <span class=\"hljs-keyword\">return</span> ;\n    &#125;\n\n    <span class=\"hljs-type\">int</span> mid = l + r &gt;&gt; <span class=\"hljs-number\">1</span>;   <span class=\"hljs-comment\">//二分值域</span>\n    <span class=\"hljs-keyword\">if</span>(val &lt;= mid)   <span class=\"hljs-comment\">//如果当前值小于中点，证明应该插在当前节点的左子树</span>\n        <span class=\"hljs-built_in\">insert</span>(tr[u].l, l, mid, val);    <span class=\"hljs-comment\">//递归建树</span>\n    <span class=\"hljs-keyword\">else</span>   <span class=\"hljs-comment\">//反之</span>\n        <span class=\"hljs-built_in\">insert</span>(tr[u].r, mid + <span class=\"hljs-number\">1</span>, r, val);\n    <span class=\"hljs-built_in\">pushup</span>(u);  <span class=\"hljs-comment\">//更新父亲</span>\n&#125;\n</code></pre>\n<p>这是新建一个节点的代码，这里面的 l 和 r 是值域， val 是你要插入的值域的点。</p>\n<p>那么看到这里你应该大致的明白了动态开点和权值线段树了，权值线段树常常和动态开点相结合，上面的那个代码就是一个动态开点的权值线段树。同时如果动态开点，值域还是过大怎么办，那么我们就可以对每个数进行离散化，因为往往用到权值线段树的时候统计的基本上都是数量，所以数值和数值之间只用体现大小关系即可。</p>\n<p>然后我们回来接着看这道题</p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/lyg0qjwj.png\" alt=\"\" /></p>\n<p>对于这棵树如果我们已经有了 3 号节点和 2 号节点的答案，我们怎么更新 1 号节点呢？</p>\n<p>那么你刚才学完了权值线段树，你肯定会有一个想法，就是将 2 号节点和 3 号节点的权值线段树合并一下就行了。</p>\n<h2 id=\"那么怎么合并呢\"><a class=\"markdownIt-Anchor\" href=\"#那么怎么合并呢\"></a> 那么怎么合并呢？？？</h2>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/ztvfeiea.png\" alt=\"\" /></p>\n<p>比如现在我们要合并这两棵子树，我们合并线段树，肯定是合并对应位置的节点，保证结构不变比如当我们合并左边这棵树的 2 号节点和右边 2 号节点子树，这时两棵树的这个位置都有节点，那么我们就可以直接将右边子树的值加到左边子树，但是当我们合并左边那棵树的时候，5号节点的对应到右边的位置是没有点的，那么我们这时候直接将存在的这个点继承过去即可，合并好之后的就是这样一棵树。</p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/ze5jg6ia.png\" alt=\"\" /></p>\n<p>其中蓝色的点是将左右子树都存在的点合并得到的，红色的点是左边有，右边没有，直接将左边的点继承过来得到的，绿色就是右边有左边没有。</p>\n<p>那么相信你看到这里你应该就理解了如何合并线段树了，那么刚才那道例题你应该就能写出来了。</p>\n<p>我会在代码里对细节进行一些说明</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> int long long</span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write   <span class=\"hljs-comment\">//无关紧要的快读快写</span>\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n            <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n                x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Segment_Tree\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">2e6</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n, m;\n    <span class=\"hljs-type\">int</span> h[N], idx;\n    <span class=\"hljs-type\">int</span> col[N], ans[N];\n    <span class=\"hljs-type\">int</span> rt[N], cnt;\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Tree</span>  \n    &#123;\n        <span class=\"hljs-type\">int</span> l, r;\n        <span class=\"hljs-type\">int</span> val, sum, ans;\n    &#125; tr[N];\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Edge</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> ne, v;\n    &#125; e[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushup</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u)</span>    <span class=\"hljs-comment\">//ans是题干当中的颜色编号之和，val是颜色最多的编号，sum是数量</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(tr[tr[u].l].sum &gt; tr[tr[u].r].sum)\n        &#123;\n            tr[u].sum = tr[tr[u].l].sum;\n            tr[u].val = tr[tr[u].l].val;\n            tr[u].ans = tr[tr[u].l].ans;\n        &#125;\n\n        <span class=\"hljs-keyword\">if</span>(tr[tr[u].l].sum == tr[tr[u].r].sum)\n        &#123;\n            tr[u].sum = tr[tr[u].l].sum;\n            tr[u].val = tr[tr[u].l].val;\n            tr[u].ans = tr[tr[u].l].ans + tr[tr[u].r].ans;\n        &#125;\n\n        <span class=\"hljs-keyword\">if</span>(tr[tr[u].l].sum &lt; tr[tr[u].r].sum)\n        &#123;\n            tr[u].sum = tr[tr[u].r].sum;\n            tr[u].val = tr[tr[u].r].val;\n            tr[u].ans = tr[tr[u].r].ans;\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">insert</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> &amp;u, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r, <span class=\"hljs-type\">int</span> pos, <span class=\"hljs-type\">int</span> v)</span>   <span class=\"hljs-comment\">//新建一个节点，刚才已经说过了，就不再说了</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(!u)\n            u = ++ cnt;\n        <span class=\"hljs-keyword\">if</span>(l == r)\n        &#123;\n            tr[u].sum += v;;\n            tr[u].val = l;\n            tr[u].ans = l;\n            <span class=\"hljs-keyword\">return</span> ;\n        &#125;\n\n        <span class=\"hljs-type\">int</span> mid = l + r &gt;&gt; <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">if</span>(pos &lt;= mid)\n            <span class=\"hljs-built_in\">insert</span>(tr[u].l, l, mid, pos, v);\n        <span class=\"hljs-keyword\">else</span> \n            <span class=\"hljs-built_in\">insert</span>(tr[u].r, mid + <span class=\"hljs-number\">1</span>, r, pos, v);\n        <span class=\"hljs-built_in\">pushup</span>(u);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">merge</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a, <span class=\"hljs-type\">int</span> b, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r)</span>   <span class=\"hljs-comment\">//合并线段树</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(!a)   <span class=\"hljs-comment\">//如果有一个位置为空，返回不空的位置即可</span>\n            <span class=\"hljs-keyword\">return</span> b;\n        <span class=\"hljs-keyword\">if</span>(!b)\n            <span class=\"hljs-keyword\">return</span> a;\n        <span class=\"hljs-keyword\">if</span>(l == r)   <span class=\"hljs-comment\">//如果到了那个节点，就将两棵树的答案合并即可</span>\n        &#123;\n            tr[a].sum += tr[b].sum;\n            tr[a].val = l;\n            tr[b].ans = l;\n            <span class=\"hljs-keyword\">return</span> a;\n        &#125;\n\n        <span class=\"hljs-type\">int</span> mid = l + r &gt;&gt; <span class=\"hljs-number\">1</span>;\n        tr[a].l = <span class=\"hljs-built_in\">merge</span>(tr[a].l, tr[b].l, l, mid);\n        tr[a].r = <span class=\"hljs-built_in\">merge</span>(tr[a].r, tr[b].r, mid + <span class=\"hljs-number\">1</span>, r);\n\n        <span class=\"hljs-built_in\">pushup</span>(a);\n        <span class=\"hljs-keyword\">return</span> a;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">dfs</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> fath)</span>   <span class=\"hljs-comment\">//递归子树，获得答案</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = h[u] ; i ; i = e[i].ne)\n        &#123;\n            <span class=\"hljs-type\">int</span> v = e[i].v;\n            <span class=\"hljs-keyword\">if</span>(v == fath)\n                <span class=\"hljs-keyword\">continue</span>;\n            <span class=\"hljs-built_in\">dfs</span>(v, u);    <span class=\"hljs-comment\">//先搜子树，保证子树的答案比父亲先算出来</span>\n\n            <span class=\"hljs-built_in\">merge</span>(rt[u], rt[v], <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100000</span>);   <span class=\"hljs-comment\">//将当前节点和他的叶子节点合并</span>\n        &#125;\n\n        <span class=\"hljs-built_in\">insert</span>(rt[u], <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">100000</span>, col[u], <span class=\"hljs-number\">1</span>);   <span class=\"hljs-comment\">//等得到这个节点的答案之后再将这个节点插入，因为我们要统计的是子树中的答案，是不包含当前节点的</span>\n        ans[u] = tr[rt[u]].ans;   \n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> Segment_Tree;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">add</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> v)</span>\n    </span>&#123;\n        e[++ idx].v = v, e[idx].ne = h[u], h[u] = idx;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-built_in\">read</span>(col[i]);\n            rt[i] = i;\n            ++ cnt;   <span class=\"hljs-comment\">//先将根节点创建出来</span>\n        &#125;\n    \n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt; n ; ++ i)\n        &#123;\n            <span class=\"hljs-type\">int</span> u, v;\n            <span class=\"hljs-built_in\">read</span>(u), <span class=\"hljs-built_in\">read</span>(v);\n            <span class=\"hljs-built_in\">add</span>(u, v);\n            <span class=\"hljs-built_in\">add</span>(v, u);\n        &#125;\n\n        <span class=\"hljs-built_in\">dfs</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n            <span class=\"hljs-built_in\">write</span>(ans[i]), <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27; &#x27;</span>);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve::<span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<p>怎么样，是不是觉得自己对线段树合并已经有一个初步的认识了</p>\n<p>那么我再放几道例题练练手？？</p>\n<h1 id=\"p4556-vani有约会-雨天的尾巴-模板线段树合并\"><a class=\"markdownIt-Anchor\" href=\"#p4556-vani有约会-雨天的尾巴-模板线段树合并\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDQ1NTY=\">P4556 [Vani有约会] 雨天的尾巴 /【模板】线段树合并</span></h1>\n<p>为啥我不照着模板题讲呢，因为我觉得其实刚才那道题更好理解。你仔细读完题之后会发现其实这道题跟刚才那道题一摸一样，也是对于每个节点建一棵权值线段树，当然这里是对许多树进行操作，你可以通过差分维护。<br />\n(你可能会发现我这道题的码风和刚才的不太一样，因为这道题是老早之前写的了)</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;\n\n<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">5e6</span> + <span class=\"hljs-number\">10</span>;\n<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> maxn = <span class=\"hljs-number\">1e5</span>;\n\n<span class=\"hljs-type\">int</span> n, m, tot;\n<span class=\"hljs-type\">int</span> root[N], ans[N];\n<span class=\"hljs-type\">int</span> L[N], R[N], mx[N], id[N];    <span class=\"hljs-comment\">//mx：数量的最大值    id:最大数量的袋子id</span>\n<span class=\"hljs-type\">int</span> dep[N], fa[N][<span class=\"hljs-number\">22</span>];\n<span class=\"hljs-type\">int</span> h[N], e[N], ne[N], idx;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a)</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span>(a &lt; <span class=\"hljs-number\">0</span>)\n    &#123;\n        a = -a;\n        <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n    &#125;\n    <span class=\"hljs-keyword\">if</span>(a &gt; <span class=\"hljs-number\">9</span>)\n        <span class=\"hljs-built_in\">write</span>(a / <span class=\"hljs-number\">10</span>);\n    <span class=\"hljs-built_in\">putchar</span>(a % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n&#125;\n\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> &amp;a)</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> x = <span class=\"hljs-number\">0</span>,f = <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n    <span class=\"hljs-keyword\">while</span>(ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span> || ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n    &#123;\n        <span class=\"hljs-keyword\">if</span>(ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n            f = <span class=\"hljs-number\">-1</span>;\n        ch = <span class=\"hljs-built_in\">getchar</span>();\n    &#125;\n    <span class=\"hljs-keyword\">while</span>(ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n        x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>,ch = <span class=\"hljs-built_in\">getchar</span>();\n    a = x * f;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">add</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a,<span class=\"hljs-type\">int</span> b)</span>\n</span>&#123;\n    e[++ idx] = b,ne[idx] = h[a],h[a] = idx;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">dfs1</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a,<span class=\"hljs-type\">int</span> f)</span>     <span class=\"hljs-comment\">//预处理一下深度和祖先</span>\n</span>&#123;\n    dep[a] = dep[f] + <span class=\"hljs-number\">1</span>;\n    fa[a][<span class=\"hljs-number\">0</span>] = f;\n\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= <span class=\"hljs-number\">20</span> ; i ++ )\n    &#123;\n        fa[a][i] = fa[fa[a][i - <span class=\"hljs-number\">1</span>]][i - <span class=\"hljs-number\">1</span>];\n    &#125;\n\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = h[a] ; ~i ; i = ne[i] )\n    &#123;\n        <span class=\"hljs-type\">int</span> j = e[i];\n        <span class=\"hljs-keyword\">if</span>(j == f)\n            <span class=\"hljs-keyword\">continue</span>;\n        <span class=\"hljs-built_in\">dfs1</span>(j,a);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title\">lca</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a,<span class=\"hljs-type\">int</span> b)</span>    <span class=\"hljs-comment\">//求最近公共祖先</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span>(dep[a] &lt; dep[b])\n        <span class=\"hljs-built_in\">swap</span>(a,b);\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">20</span> ; i &gt;= <span class=\"hljs-number\">0</span> ; i -- )\n    &#123;\n        <span class=\"hljs-keyword\">if</span>(dep[fa[a][i]] &gt;= dep[b])\n            a = fa[a][i];\n    &#125;\n\n    <span class=\"hljs-keyword\">if</span>(a == b)\n        <span class=\"hljs-keyword\">return</span> a;\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">20</span> ; i &gt;= <span class=\"hljs-number\">0</span> ; i -- )\n    &#123;\n        <span class=\"hljs-keyword\">if</span>(fa[a][i] != fa[b][i])\n        &#123;\n            a = fa[a][i];\n            b = fa[b][i];\n        &#125;\n    &#125;\n\n    <span class=\"hljs-keyword\">return</span> fa[a][<span class=\"hljs-number\">0</span>];\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushup</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> p)</span>     <span class=\"hljs-comment\">//更新父节点的值</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span>(mx[L[p]] &gt;= mx[R[p]])      <span class=\"hljs-comment\">//如果左大于右,将当前点更新</span>\n    &#123;\n        mx[p] = mx[L[p]];   <span class=\"hljs-comment\">//将最大值更换同时换id</span>\n        id[p] = id[L[p]];\n    &#125;\n    <span class=\"hljs-keyword\">else</span>\n    &#123;\n        mx[p] = mx[R[p]];\n        id[p] = id[R[p]];\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title\">modify</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> p,<span class=\"hljs-type\">int</span> l,<span class=\"hljs-type\">int</span> r,<span class=\"hljs-type\">int</span> x,<span class=\"hljs-type\">int</span> val)</span>    <span class=\"hljs-comment\">//创建新的节点</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span>(!p)\n        p = ++ tot;\n    <span class=\"hljs-keyword\">if</span>(l == r)\n    &#123;\n        mx[p] += val;\n        id[p] = x;\n        <span class=\"hljs-keyword\">return</span> p; \n    &#125;\n    <span class=\"hljs-type\">int</span> mid = (l + r) &gt;&gt; <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">if</span>(x &lt;= mid)\n        L[p] = <span class=\"hljs-built_in\">modify</span>(L[p], l, mid, x, val);\n    <span class=\"hljs-keyword\">else</span> \n        R[p] = <span class=\"hljs-built_in\">modify</span>(R[p], mid + <span class=\"hljs-number\">1</span>, r, x, val);\n    <span class=\"hljs-built_in\">pushup</span>(p);\n    <span class=\"hljs-keyword\">return</span> p;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title\">merge</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a,<span class=\"hljs-type\">int</span> b,<span class=\"hljs-type\">int</span> l,<span class=\"hljs-type\">int</span> r)</span>     <span class=\"hljs-comment\">//合并</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span>(!a) \n        <span class=\"hljs-keyword\">return</span> b;\n    <span class=\"hljs-keyword\">if</span>(!b)\n        <span class=\"hljs-keyword\">return</span> a;\n    <span class=\"hljs-keyword\">if</span>(l == r)\n    &#123;\n        mx[a] += mx[b];     <span class=\"hljs-comment\">//将b的信息遗传到a，然后返回a</span>\n        <span class=\"hljs-keyword\">return</span> a;\n    &#125;\n    <span class=\"hljs-type\">int</span> mid = (l + r) &gt;&gt; <span class=\"hljs-number\">1</span>;\n    L[a] = <span class=\"hljs-built_in\">merge</span>(L[a], L[b], l, mid);\n    R[a] = <span class=\"hljs-built_in\">merge</span>(R[a], R[b], mid + <span class=\"hljs-number\">1</span>, r);\n    <span class=\"hljs-built_in\">pushup</span>(a);\n    <span class=\"hljs-keyword\">return</span> a;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">dfs</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u,<span class=\"hljs-type\">int</span> f)</span>      <span class=\"hljs-comment\">//宽搜找答案</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = h[u] ; ~i ; i = ne[i])\n    &#123;   \n        <span class=\"hljs-type\">int</span> j = e[i];\n        <span class=\"hljs-keyword\">if</span>(j == f)\n            <span class=\"hljs-keyword\">continue</span>;\n        <span class=\"hljs-built_in\">dfs</span>(j,u);\n        root[u] = <span class=\"hljs-built_in\">merge</span>(root[u], root[j], <span class=\"hljs-number\">1</span>, maxn);\n    &#125;\n\n    <span class=\"hljs-keyword\">if</span>(mx[root[u]]) \n        ans[u] = id[root[u]];\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    <span class=\"hljs-built_in\">memset</span>(h, <span class=\"hljs-number\">-1</span>,<span class=\"hljs-keyword\">sizeof</span> h);\n    <span class=\"hljs-built_in\">read</span>(n),<span class=\"hljs-built_in\">read</span>(m);\n\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt; n ; i ++ )\n    &#123;\n        <span class=\"hljs-type\">int</span> a,b;\n        <span class=\"hljs-built_in\">read</span>(a),<span class=\"hljs-built_in\">read</span>(b);\n        <span class=\"hljs-built_in\">add</span>(a,b);\n        <span class=\"hljs-built_in\">add</span>(b,a);\n    &#125;\n\n    <span class=\"hljs-built_in\">dfs1</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>);\n\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= m ; i ++ )\n    &#123;\n        <span class=\"hljs-type\">int</span> x,y,z;\n        <span class=\"hljs-built_in\">read</span>(x),<span class=\"hljs-built_in\">read</span>(y),<span class=\"hljs-built_in\">read</span>(z);\n\n        <span class=\"hljs-type\">int</span> f = <span class=\"hljs-built_in\">lca</span>(x,y);\n        <span class=\"hljs-type\">int</span> p = fa[f][<span class=\"hljs-number\">0</span>];\n        root[x] = <span class=\"hljs-built_in\">modify</span>(root[x], <span class=\"hljs-number\">1</span>, maxn, z, <span class=\"hljs-number\">1</span>);\n        root[y] = <span class=\"hljs-built_in\">modify</span>(root[y], <span class=\"hljs-number\">1</span>, maxn, z, <span class=\"hljs-number\">1</span>);\n        root[f] = <span class=\"hljs-built_in\">modify</span>(root[f], <span class=\"hljs-number\">1</span>, maxn, z, <span class=\"hljs-number\">-1</span>);\n        <span class=\"hljs-keyword\">if</span>(p)\n            root[p] = <span class=\"hljs-built_in\">modify</span>(root[p], <span class=\"hljs-number\">1</span>, maxn, z, <span class=\"hljs-number\">-1</span>);\n    &#125;\n\n    <span class=\"hljs-built_in\">dfs</span>(<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">0</span>);\n\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; i ++ )\n    &#123;\n        <span class=\"hljs-built_in\">write</span>(ans[i]);\n        <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;&quot;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<h1 id=\"promotion-counting-p\"><a class=\"markdownIt-Anchor\" href=\"#promotion-counting-p\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDM2MDU=\">Promotion Counting P</span></h1>\n<p>这道题也比较的板子，就维护一下最大值即可，其实也可以不维护，直接建完，然后查询一下合并之后的线段树中的大于这头牛的值的个数也是可以的。</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n            <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n                x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Segment_Tree\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">2e6</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n, m;\n    <span class=\"hljs-type\">int</span> h[N], idx;\n    <span class=\"hljs-type\">int</span> ans[N], cnt, tot;\n    <span class=\"hljs-type\">int</span> rt[N], w[N], a[N];\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Edge</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> ne, v;\n    &#125; e[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">add</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> v)</span>\n    </span>&#123;\n        e[++ idx].v = v, e[idx].ne = h[u], h[u] = idx;\n    &#125;\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Tree</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> l, r;\n        <span class=\"hljs-type\">int</span> sum;\n    &#125; tr[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushup</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u)</span>\n    </span>&#123;\n        tr[u].sum = tr[tr[u].l].sum + tr[tr[u].r].sum;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">insert</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> &amp;u, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r, <span class=\"hljs-type\">int</span> pos)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(!u)\n            u = ++ tot;\n        <span class=\"hljs-keyword\">if</span>(l == r)\n        &#123;\n            tr[u].sum ++ ;\n            <span class=\"hljs-keyword\">return</span> ;\n        &#125;\n        <span class=\"hljs-type\">int</span> mid = l + r &gt;&gt; <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">if</span>(pos &lt;= mid)\n            <span class=\"hljs-built_in\">insert</span>(tr[u].l, l, mid, pos);\n        <span class=\"hljs-keyword\">else</span> \n            <span class=\"hljs-built_in\">insert</span>(tr[u].r, mid + <span class=\"hljs-number\">1</span>, r, pos);\n        <span class=\"hljs-built_in\">pushup</span>(u);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">merge</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a, <span class=\"hljs-type\">int</span> b, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(!a)\n            <span class=\"hljs-keyword\">return</span> b;\n        <span class=\"hljs-keyword\">if</span>(!b)\n            <span class=\"hljs-keyword\">return</span> a;\n        <span class=\"hljs-keyword\">if</span>(l == r)\n        &#123;\n            tr[a].sum += tr[b].sum;\n            <span class=\"hljs-keyword\">return</span> a;\n        &#125;\n\n        <span class=\"hljs-type\">int</span> mid = l + r &gt;&gt; <span class=\"hljs-number\">1</span>;\n        tr[a].l = <span class=\"hljs-built_in\">merge</span>(tr[a].l, tr[b].l, l, mid);\n        tr[a].r = <span class=\"hljs-built_in\">merge</span>(tr[a].r, tr[b].r, mid + <span class=\"hljs-number\">1</span>, r);\n\n        <span class=\"hljs-built_in\">pushup</span>(a);\n        <span class=\"hljs-keyword\">return</span> a;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">query</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r, <span class=\"hljs-type\">int</span> L, <span class=\"hljs-type\">int</span> R)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(L &lt;= l &amp;&amp; R &gt;= r)\n            <span class=\"hljs-keyword\">return</span> tr[u].sum;\n        <span class=\"hljs-type\">int</span> mid = l + r &gt;&gt; <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">int</span> res = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">if</span>(L &lt;= mid)\n            res += <span class=\"hljs-built_in\">query</span>(tr[u].l , l, mid, L, R);\n        <span class=\"hljs-keyword\">if</span>(R &gt; mid)\n            res += <span class=\"hljs-built_in\">query</span>(tr[u].r , mid + <span class=\"hljs-number\">1</span>, r, L, R);\n        <span class=\"hljs-keyword\">return</span> res;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">dfs</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> fath)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = h[u] ; i ; i = e[i].ne)\n        &#123;\n            <span class=\"hljs-type\">int</span> v = e[i].v;\n            \n            <span class=\"hljs-keyword\">if</span>(v == fath)\n                <span class=\"hljs-keyword\">continue</span>;\n            <span class=\"hljs-built_in\">dfs</span>(v, u);\n            <span class=\"hljs-built_in\">merge</span>(rt[u], rt[v], <span class=\"hljs-number\">1</span>, cnt);\n        &#125;\n\n        ans[u] = <span class=\"hljs-built_in\">query</span>(rt[u], <span class=\"hljs-number\">1</span>, cnt, w[u] + <span class=\"hljs-number\">1</span>, cnt);\n        <span class=\"hljs-comment\">//write(ans[u]), puts(&quot;&quot;);</span>\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> Segment_Tree;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-built_in\">read</span>(w[i]);\n            a[i] = w[i];\n        &#125;\n\n        std::<span class=\"hljs-built_in\">sort</span>(a + <span class=\"hljs-number\">1</span>, a + n + <span class=\"hljs-number\">1</span>);\n        cnt = std::<span class=\"hljs-built_in\">unique</span>(a + <span class=\"hljs-number\">1</span>, a + n + <span class=\"hljs-number\">1</span>) - a - <span class=\"hljs-number\">1</span>;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            w[i] = std::<span class=\"hljs-built_in\">lower_bound</span>(a + <span class=\"hljs-number\">1</span>, a + n + <span class=\"hljs-number\">1</span>, w[i]) - a;\n            <span class=\"hljs-built_in\">insert</span>(rt[i], <span class=\"hljs-number\">1</span>, cnt, w[i]);\n        &#125;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">2</span>;  i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-type\">int</span> x;\n            <span class=\"hljs-built_in\">read</span>(x);\n            <span class=\"hljs-built_in\">add</span>(x, i);\n            <span class=\"hljs-built_in\">add</span>(i, x);\n        &#125;\n\n        <span class=\"hljs-built_in\">dfs</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= cnt ; ++ i)\n            <span class=\"hljs-built_in\">write</span>(ans[i]), <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;&quot;</span>);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve::<span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<p>到了最后再给大家推荐一个线段树合并的题单，可以自己再练练手。</p>\n<h1 id=\"题单\"><a class=\"markdownIt-Anchor\" href=\"#题单\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3RyYWluaW5nLzM4NTgjcHJvYmxlbXM=\">题单</span></h1>\n<p>完结撒花<em>★,°</em>:.☆(￣▽￣)/$:<em>.°★</em> 。</p>\n",
            "tags": [
                "笔记",
                "数据结构",
                "线段树",
                "数据结构",
                "笔记",
                "线段树"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/09/29/mid-autumn/",
            "url": "https://undead-fire-ace.github.io/2023/09/29/mid-autumn/",
            "title": "中秋晚会游记",
            "date_published": "2023-09-29T00:04:50.000Z",
            "content_html": "<p>23年秋，二南举晚会以迎新生，近中秋，故往而观之，念其特殊之处，故记之</p>\n<span id=\"more\"></span>\n<p>前两天是真的被震撼到了，真的算是从在二本集训时参加消夏晚会后见到的又一盛况，前天晚上在机房的阳台白嫖了四十八的中秋晚会，至于我们为啥会去看初中的晚会，主要是因为他们的音响开的功率太大了，机房里特别震（<s>都快被震成耳朵龙了</s>），玻璃都震的咚咚响，就只能跑到阳台了，整场下来给我的感觉只有灯光挺漂亮的，别的是真的感觉不行，没啥质量特别好的节目，一晚上就写了一道洛谷 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2022</mn></mrow><annotation encoding=\"application/x-tex\">2022</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">2</span><span class=\"mord\">2</span></span></span></span> 年的推式子题（那题是真的好，题解以后会发的/ww，感觉好像扯远了）。</p>\n<p>但是啪的一下很快啊，我们帝二又给新高一的办了一场迎新中秋晚会（为啥我们当初没有这个待遇啊/kk）。本来我们是打算跟教练说一声晚上去看，但是没想到下午他竟然主动问我们要不要去（<s>泪目</s>），这不正好吗，晚上吃饭的时候 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>b</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">lbx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">x</span></span></span></span> 好像是找了一个高一的问了问啥时候开始，匆匆吃过晚饭然后赶回了机房写题，还有一个小时才开始（七点开始），然后就翻了翻之前 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mi>B</mi><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">ABC</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mord mathnormal\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span> 的题，发现了一道非常有意思的题（<s>这个以后也会写题解，总之先咕了/ww</s>） 。压着 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>6</mn><mo>:</mo><mn>50</mn></mrow><annotation encoding=\"application/x-tex\">6:50</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">6</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">:</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span><span class=\"mord\">0</span></span></span></span> 的线写完的，然后就该过去了， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mn>1</mn><mi>s</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">u1s1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mord\">1</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">1</span></span></span></span> 这舞台肉眼可见的不如隔壁初中的好，但是感觉气氛比那边好多了，这也是第一次感觉看台好小啊，就坐了一个年级的学生就差不多坐满了，落座之后吹了会水就要开始了，具体咋开的幕倒是真不记得了，但是我清楚的记得主持人说了一句，“有请我们最帅最靓的 无尽😀  校长！！！”，全场瞬间沸腾了，他说着一口栾城话，又讲起了这里是三苏的故乡，我们都是三苏的老乡（说实话这都不知道听了多少遍了，看来他是真不知道该说啥了），但是没有说“二南人一贯三为王”我们不是很认可。</p>\n<p>无尽😀 讲完话之后，<s>正片结束</s>，演出就该开始了，上来来了个歌曲串烧，没想到想我这种平时都不听中文歌的人还听过那么一两首唱的歌，具体唱的啥也忘了，反正是几首老歌就对了，但是下一个节目唱的是啥我可是记住了，因为那可是高贵的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>O</mi><mi>L</mi></mrow><annotation encoding=\"application/x-tex\">LOL</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\">L</span></span></span></span> 的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2018</mn></mrow><annotation encoding=\"application/x-tex\">2018</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">1</span><span class=\"mord\">8</span></span></span></span> 年决赛的开幕曲 ——  <span class=\"exturl\" data-url=\"aHR0cHM6Ly9tdXNpYy4xNjMuY29tL3Nvbmc/aWQ9MTMyMTM4NTY1NSZhbXA7dXNlcmlkPTg0NjU5MTg4Mjg=\">POP/STARS</span> ，真的是很震撼，尤其是那个人一个人唱从头到尾唱完一个大部分都是韩语的歌，而且这原曲还是四个人一起唱的，明显能听出来他真的是尽力跟上了，毕竟一个人唱是真的很累，拜谢 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">%</mi><mi mathvariant=\"normal\">%</mi><mi mathvariant=\"normal\">%</mi><mi mathvariant=\"normal\">%</mi><mi mathvariant=\"normal\">%</mi><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">\\%\\%\\%\\%\\%\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">%</span><span class=\"mord\">%</span><span class=\"mord\">%</span><span class=\"mord\">%</span><span class=\"mord\">%</span><span class=\"mord\">%</span></span></span></span>。后面就是好多高一和高二的特长生跳舞，汉服社的也来了，中间还有三个少数民族的舞蹈展示，咱也不懂也就不评价了，但是有一点能肯定，比春晚的跳的好/ww。然后就到了算是压轴戏吧，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>19</mn></mrow><annotation encoding=\"application/x-tex\">19</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">9</span></span></span></span> 年毕业的学长学姐也回来了一部分，然后献上了童年舞蹈串烧，没有拿手机录下来真的是有点遗憾，真的无法用语言形容，第一个是老版猪猪侠的主题曲，应该是陈洁丽唱的那个版本，第二个是开心超人，然后集体开始青海摇，<s>一看就是考研压力有点大了，想发泄发泄</s> (doge 。然后还有就是街舞，第二阶段把外套一扔是真的有那种感觉了，也是真的挺酷的，总之 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">%</span></span></span></span> 就对了。在街舞正跳着的时候我们发现高一的班主任们也不在看台上看了，都去后台换衣服了，然后就是相当炸裂的一幕了，同时也让我们意识到了作为青年班主任必须要具备一个技能那就是跳舞，真的对于每一个学生都没办法想象自己的班主任也这么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mi>a</mi><mi>s</mi><mi>h</mi><mi>i</mi><mi>o</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">fashion</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">n</span></span></span></span> ，然后在一片祥和里晚会也算是结束了，又回机房卷了一道题，今天晚上来看晚会简直是血赚。</p>\n<p>为啥这篇游记我会写这么短啊，主要是真的好多东西都无法描述，真的需要去现场看才能感受到那种气氛，年轻真好。<br />\n<br />\n<br />\n<br />\n杂记：中间有个节目是合唱团唱宣传片里的那首歌，但是这个宣传片好像和现在官网上的不太一样，<s>因为没有看到白宇/fn</s>  ，但是在那里面看到了闫丁浩和魏静，只能说是真蚌埠住了。</p>\n",
            "tags": [
                "游记",
                "游记"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/09/27/Other/",
            "url": "https://undead-fire-ace.github.io/2023/09/27/Other/",
            "title": "杂题",
            "date_published": "2023-09-27T13:09:49.000Z",
            "content_html": "<p>平时做的个人感觉比较好的杂题会放到这</p>\n<span id=\"more\"></span>\n<h1 id=\"heoi2016tjoi2016-序列\"><a class=\"markdownIt-Anchor\" href=\"#heoi2016tjoi2016-序列\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDQwOTM=\">[HEOI2016/TJOI2016] 序列</span></h1>\n<h2 id=\"题目描述\"><a class=\"markdownIt-Anchor\" href=\"#题目描述\"></a> 题目描述</h2>\n<p>佳媛姐姐过生日的时候，她的小伙伴从某宝上买了一个有趣的玩具送给他。</p>\n<p>玩具上有一个数列，数列中某些项的值可能会变化，但同一个时刻最多只有一个值发生变化。现在佳媛姐姐已经研究出了所有变化的可能性，她想请教你，能否选出一个子序列，使得在<strong>任意一种变化和原序列</strong>中，这个子序列都是不降的？请你告诉她这个子序列的最长长度即可。</p>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\"></a> 分析</h2>\n<p>首先对于这道题我们肯定能想到是想要满足两个状态之间能进行转移，必须保证前一个点的最大值要小于等于后面这个点的最小值，那么加上这个限制，转移方程也就是</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mn>1</mn><mo stretchy=\"false\">(</mo><mn>1</mn><mo>≤</mo><mi>j</mi><mo>&lt;</mo><mi>i</mi><mtext>  </mtext><mtext>  </mtext><mo>∧</mo><mtext>  </mtext><mtext>  </mtext><mi>m</mi><mi>x</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>&lt;</mo><mo>=</mo><mi>m</mi><mi>n</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i] = f[j] + 1 (1\\leq j \\lt i \\;\\; \\wedge \\;\\;mx[j] &lt;= mn[i])</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<p>然后就成了一个三维偏序问题，直接 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>C</mi><mi>D</mi><mi>Q</mi></mrow><annotation encoding=\"application/x-tex\">CDQ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathnormal\">Q</span></span></span></span> 带个数据结构或者是树套树即可</p>\n<h1 id=\"agc024d-isomorphism-freak\"><a class=\"markdownIt-Anchor\" href=\"#agc024d-isomorphism-freak\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vQVRfYWdjMDI0X2Q=\">[AGC024D] Isomorphism Freak</span></h1>\n<h2 id=\"题面翻译\"><a class=\"markdownIt-Anchor\" href=\"#题面翻译\"></a> 题面翻译</h2>\n<p>给定一棵点数为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 的无根树. 对于两个点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mo separator=\"true\">,</mo><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">u,v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span>, 若有以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> 为根与以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 为根树同构, 则染上同一种颜色.</p>\n<p>可以给这棵树加若干点, 问加完点后树最少能有多少种颜色, 以及在最少颜色的情况下最少有多少个叶子节点.</p>\n<h2 id=\"分析-2\"><a class=\"markdownIt-Anchor\" href=\"#分析-2\"></a> 分析</h2>\n<p>他要让我们去求最少需要多少种类的颜色，我们考虑对于一棵树想要让颜色最少肯定是要让树的最深的深度最小，然后每一层保证所有点成为根都能使得树是同构的，那么我们直接把同一层深度的点都变成加点之前最多的点的结构即可，那么我们最后所需要的点的数量就是树的深度，然后直接 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>f</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">dfs</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">s</span></span></span></span> 一遍，然后记录一下每一层儿子最多的点，然后对于其他点补全即可</p>\n<h1 id=\"agc004d-teleporter\"><a class=\"markdownIt-Anchor\" href=\"#agc004d-teleporter\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vQVRfYWdjMDA0X2Q=\">[AGC004D] Teleporter</span></h1>\n<h2 id=\"题面翻译-2\"><a class=\"markdownIt-Anchor\" href=\"#题面翻译-2\"></a> 题面翻译</h2>\n<p>有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个城市，每个城市有一个传送点，都可以传送到唯一的另外一个城市，保证从任何位置出发经过若干次传送之后能够到达 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 号城市。现在希望修改一些点的目的地，使得从任何一点出发在传送 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 次之后恰好都能到达 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 号城市，求最少要改变目的地的城市的数量。</p>\n<h2 id=\"分析-3\"><a class=\"markdownIt-Anchor\" href=\"#分析-3\"></a> 分析</h2>\n<p>对于一号节点，我们可以直接让他指向自己即可，如果不指向自己，那么一号节点肯定要与其他节点构成一个环，那么这个环上是肯定有点到不了一号节点的，然后我们考虑怎么去保证绕 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 次到达 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> ，其实也比较好像，我们会发现有了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 的这个自环，我们只用构造出一个以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 为根的，且所有子树的深度是不超过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 的即可，既然我们要求最小值，那么直接把深度大于的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">k - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 的树分开即可。</p>\n<h1 id=\"jsoi2007-重要的城市\"><a class=\"markdownIt-Anchor\" href=\"#jsoi2007-重要的城市\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDE4NDE=\">[JSOI2007] 重要的城市</span></h1>\n<h2 id=\"题目描述-2\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-2\"></a> 题目描述</h2>\n<p>参加jsoi冬令营的同学最近发现，由于南航校内修路截断了原来通向计算中心的路，导致去的路程比原先增加了近一公里。而食堂门前施工虽然也截断了原来通向计算中心的路，却没有使路程增加，因为可以找到同样长度的路作替代。其实，问题的关键在于，路截断的地方是交通要点。</p>\n<p>同样的情况也出现在城市间的交通中。某些城市如果出了问题，可能会引起其他很多城市的交通不便。另一些城市则影响不到别的城市的交通。jsoi冬令营的同学发现这是一个有趣的问题，于是决定研究这个问题。</p>\n<p>他们认为这样的城市是重要的：如果一个城市c被破坏后，存在两个不同的城市a和b（a, b均不等于c），a到b的最短距离增长了（或不通），则城市c是重要的。</p>\n<p>jsoi冬令营的同学面对着一张教练组交给他们的城市间交通图，他们希望能找出所有重要的城市。现在就请你来解决这个问题。</p>\n<h2 id=\"分析-4\"><a class=\"markdownIt-Anchor\" href=\"#分析-4\"></a> 分析</h2>\n<h1 id=\"funny-game\"><a class=\"markdownIt-Anchor\" href=\"#funny-game\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vQ0Y3MzFF\">Funny Game</span></h1>\n<h2 id=\"题面翻译-3\"><a class=\"markdownIt-Anchor\" href=\"#题面翻译-3\"></a> 题面翻译</h2>\n<p>一个长度为 N 的序列 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> ，双方轮流操作</p>\n<p>每次的操作是选择一个长度大于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 的前缀，计算它的和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> ，然后用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> 替换它的前缀，同时当前玩家获得 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> 的分数。</p>\n<p>当只剩下一个元素，游戏结束。</p>\n<p>双方均想最大化 自己的分数-对手的分数，计算这个值。</p>\n<h2 id=\"分析-5\"><a class=\"markdownIt-Anchor\" href=\"#分析-5\"></a> 分析</h2>\n<p>我们设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> 表示先手取完前 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个数之后的最大的差值，转移的式子即为</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>max</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mi>a</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>−</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i] = \\max(f[i + 1], a[i + 1] - f[i + 1])</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">max</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<p>因为我们如果不选第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i + 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 个数就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i + 1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span> ，如果是选了，那么后手就会复制先手的操作，那么此时的贡献即为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>−</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">a[i + 1] - f[i + 1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></p>\n<h1 id=\"yloi2020-灼\"><a class=\"markdownIt-Anchor\" href=\"#yloi2020-灼\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDcwOTk=\">[yLOI2020] 灼</span></h1>\n<h2 id=\"题目描述-3\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-3\"></a> 题目描述</h2>\n<p>在一条数轴上有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个虫洞，第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个虫洞的坐标为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。进入这些虫洞的任意一个都可以直接到达勒本星球拯救扶苏。飞船到达数轴所在直线上后，会因为磁场的效应失去操控能力，飞船每秒会<strong>等概率</strong>向左或向右移动一个单位长度。</p>\n<p>灼闻羽非常焦急，他给出了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> 个飞船进入数轴所在直线的初始坐标，对于每个坐标，他想知道期望需要多少秒才能到达一个虫洞。</p>\n<p>如果你计算出的期望是个分数，你需要求出这个分数对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>998244353</mn></mrow><annotation encoding=\"application/x-tex\">998244353</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">9</span><span class=\"mord\">9</span><span class=\"mord\">8</span><span class=\"mord\">2</span><span class=\"mord\">4</span><span class=\"mord\">4</span><span class=\"mord\">3</span><span class=\"mord\">5</span><span class=\"mord\">3</span></span></span></span> 取模的答案。有关分数取模的定义你可以参考「提示」中的内容。</p>\n<p>为了避免输出过大，你只需要输出四个整数，分别表示你所有回答（对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>998244353</mn></mrow><annotation encoding=\"application/x-tex\">998244353</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">9</span><span class=\"mord\">9</span><span class=\"mord\">8</span><span class=\"mord\">2</span><span class=\"mord\">4</span><span class=\"mord\">4</span><span class=\"mord\">3</span><span class=\"mord\">5</span><span class=\"mord\">3</span></span></span></span> 取模之后，下同）的按位异或之和、你共有多少次回答的答案是奇数，你的所有答案中的最大值、你的所有答案中的最小值。</p>\n",
            "tags": [
                "学习笔记",
                "学习笔记"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/09/24/AGC018B/",
            "url": "https://undead-fire-ace.github.io/2023/09/24/AGC018B/",
            "title": "AGC018B Sports Festival",
            "date_published": "2023-09-24T11:49:52.000Z",
            "content_html": "<p>一篇题解</p>\n<span id=\"more\"></span>\n<h1 id=\"agc018b-sports-festival\"><a class=\"markdownIt-Anchor\" href=\"#agc018b-sports-festival\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vQVRfYWdjMDE4X2I=\">[AGC018B] Sports Festival</span></h1>\n<h2 id=\"题面翻译\"><a class=\"markdownIt-Anchor\" href=\"#题面翻译\"></a> 题面翻译</h2>\n<p>Takahashi 举办了一场运动会，这场运动会有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>M</mi></mrow><annotation encoding=\"application/x-tex\">M</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span></span></span></span> 个项目，有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 个人来参加。</p>\n<p>每个人会在所有开展的项目当中，选择她心目中排名最高的那个项目参加。</p>\n<p>因此，如果开展全部项目的话，可能某个项目的人数会爆多无比，所以 Takahashi 决定，只开展其中的一部分项目，使得参加人数最多的那个项目，参加人数尽量少。</p>\n<p>请输出这个值。</p>\n<p>———from<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3Uub3JnL3NwYWNlL3Nob3c/dWlkPTgyMTI=\">@__stdcall</span></p>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\"></a> 分析</h2>\n<p>首先对于这 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 个赛事，我们可以一开始都选上，然后我们考虑怎么会让答案变的更优，既然我们要满足最大值最小，那么一个比较显然的想法就是我们每次删去参加人数最多的比赛，然后这个答案一定是不会变的更劣的，因为我们只改动了一个项目，只会发生两种情况</p>\n<p>①：对于所有的涉及到改动的人在删掉当前的活动后，如果下一个优先级的活动都一样，那么答案是跟删之前相等的。</p>\n<p>②：如果他们的下一个优先级的活动不一样，那么最大值一定是比之前小。</p>\n<p>所以这么贪心一定是对的，同时我们对于每个活动删还是不删，一定都是删去的是当前位置之后的位置，那么每个人选择的活动一定是往后走的，然后按照上面的贪心策略删就行了。</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T, <span class=\"hljs-keyword\">typename</span>... Args&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;first, Args &amp;...args)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(first);\n        <span class=\"hljs-built_in\">read</span>(args...);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">520</span>;\n\n    <span class=\"hljs-type\">int</span> n, m, ans;\n    <span class=\"hljs-type\">int</span> a[N][N];\n    <span class=\"hljs-type\">int</span> cnt[N], cur[N];\n    <span class=\"hljs-type\">bool</span> st[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n, m);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= m ; ++ i)  <span class=\"hljs-comment\">//一开始将所有的活动选上</span>\n            st[i] = <span class=\"hljs-literal\">true</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span> ; j &lt;= m ; ++ j)\n                <span class=\"hljs-built_in\">read</span>(a[i][j]);\n            cur[i] = <span class=\"hljs-number\">1</span>;\n            ++ cnt[a[i][<span class=\"hljs-number\">1</span>]];   <span class=\"hljs-comment\">//记录每个活动参加的人数</span>\n        &#125;\n\n        ans = n;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> k = <span class=\"hljs-number\">1</span> ; k &lt;= m ; ++ k)\n        &#123;\n            <span class=\"hljs-type\">int</span> mx = <span class=\"hljs-number\">-1</span>, pos = <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= m ; ++ i)    <span class=\"hljs-comment\">//找到当前的最大值和是哪个活动</span>\n                <span class=\"hljs-keyword\">if</span>(st[i] &amp;&amp; cnt[i] &gt; mx)\n                    mx = cnt[i], pos = i;\n            ans = <span class=\"hljs-built_in\">min</span>(ans, mx);   <span class=\"hljs-comment\">//更新一下答案</span>\n            st[pos] = <span class=\"hljs-literal\">false</span>;   <span class=\"hljs-comment\">//删去这个活动</span>\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)  <span class=\"hljs-comment\">//更新有影响的人的选择的活动</span>\n            &#123;\n                <span class=\"hljs-keyword\">if</span>(a[i][cur[i]] == pos)\n                &#123;\n                    <span class=\"hljs-keyword\">while</span>(cur[i] &lt; m &amp;&amp; !st[a[i][cur[i]]])\n                        ++ cur[i];\n                    ++ cnt[a[i][cur[i]]];\n                &#125;\n            &#125;\n        &#125;\n\n        <span class=\"hljs-built_in\">write</span>(ans);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n",
            "tags": [
                "题解",
                "贪心",
                "题解",
                "贪心"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/09/18/place-chess/",
            "url": "https://undead-fire-ace.github.io/2023/09/18/place-chess/",
            "title": "CQOI2011 放棋子 题解",
            "date_published": "2023-09-18T12:09:15.000Z",
            "content_html": "<p>一篇题解</p>\n<span id=\"more\"></span>\n<h1 id=\"cqoi2011-放棋子\"><a class=\"markdownIt-Anchor\" href=\"#cqoi2011-放棋子\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDMxNTg=\">CQOI2011 放棋子</span></h1>\n<h2 id=\"题目描述\"><a class=\"markdownIt-Anchor\" href=\"#题目描述\"></a> 题目描述</h2>\n<p>在一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 行 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 列的棋盘里放一些彩色的棋子，使得每个格子最多放一个棋子，且不同颜色的棋子不能在同一行或者同一列，有多少种方法？</p>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\"></a> 分析</h2>\n<p>首先我们看到求方案读完题意，知道了相同颜色的棋子是可以在同一行和同一列任意排列的，但是这个不同颜色的棋子想要去求贡献会略有复杂，但是我们会发现要是计算方案数，它实际上是有一个顺序的，就比如你现在确定了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 行 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 列，那么你当前的方案数是可以从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 行 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">j-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 列和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 行 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 列转移过来的，那么我们就很自然的会想到是不是可以用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">dp</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span></span></span></span> 来求。然后我们继续读题会进一步的发现方案数只跟当前确定了多少行和多少列以及现在考虑了多少颜色有关，那么我们就可以设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j][k]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span></span></span></span> 为当前已经考虑了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 种颜色，并且已经确定了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 行 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 列的方案数，我们这里对于具体是哪几行和哪几列并不关心，因为我们可以最后通过组合数去去重和求解，然后我们考虑如何去转移，我们肯定是枚举在考虑当前的颜色之前的方案数再乘上考虑当前颜色后的新增状态，为了方便计算，我们设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">g[i][j][k]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span></span></span></span> 为用了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 个颜色相同的棋子，确定了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 行 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 列的方案数，那么状态转移方程即为</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mn>1</mn><mo>=</mo><mn>0</mn></mrow><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msubsup><mo>∑</mo><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mn>2</mn><mo>=</mo><mn>0</mn></mrow><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>c</mi><mi>u</mi><mi>r</mi><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>c</mi><mi>u</mi><mi>r</mi><mn>2</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><mo>×</mo><mrow><mi>g</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mi>c</mi><mi>u</mi><mi>r</mi><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo>−</mo><mi>c</mi><mi>u</mi><mi>r</mi><mn>2</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>c</mi><mi>n</mi><mi>t</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">]</mo></mrow><mo>×</mo><msubsup><mi>C</mi><mrow><mi>n</mi><mo>−</mo><mi>c</mi><mi>u</mi><mi>r</mi><mn>1</mn></mrow><mrow><mi>i</mi><mo>−</mo><mi>c</mi><mi>u</mi><mi>r</mi><mn>1</mn></mrow></msubsup><mo>×</mo><msubsup><mi>C</mi><mrow><mi>m</mi><mo>−</mo><mi>c</mi><mi>u</mi><mi>r</mi><mn>2</mn></mrow><mrow><mi>j</mi><mo>−</mo><mi>c</mi><mi>u</mi><mi>r</mi><mn>2</mn></mrow></msubsup></mrow><annotation encoding=\"application/x-tex\">f[i][j][k] = \\sum_{cur1 = 0}^{i - 1} \\sum_{cur2 = 0}^{j-1} {f[cur1][cur2][k-1]} \\times {g[i-cur1][j-cur2][cnt[k]]} \\times {C_{n-cur1}^{i-cur1}} \\times {C_{m-cur2}^{j-cur2}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.264274em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.964564em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.964564em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mtight\">2</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029000000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">2</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">2</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mclose\">]</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1894339999999999em;vertical-align:-0.324639em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.864795em;\"><span style=\"top:-2.433692em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.1031310000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.324639em;\"><span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.267211em;vertical-align:-0.324639em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.942572em;\"><span style=\"top:-2.433692em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">m</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mtight\">2</span></span></span></span><span style=\"top:-3.1809080000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.324639em;\"><span></span></span></span></span></span></span></span></span></span></span></p>\n</blockquote>\n<p>这个式子的意思就是之前确定了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">cur1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">1</span></span></span></span> 行 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">cur2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">2</span></span></span></span> 列，那么我们剩下的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>−</mo><mi>c</mi><mi>u</mi><mi>r</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i-cur1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">1</span></span></span></span> 行 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo>−</mo><mi>c</mi><mi>u</mi><mi>r</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">j-cur2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">2</span></span></span></span> 列就是通过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 去确定的，然后由于我们的顺序是不确定的，那么我们可以从剩下的行和列中任意选择。</p>\n<p>那么解决了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">f</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{f}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61111em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">f</span></span></span></span></span> 数组，接下来就来看 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">g</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{g}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65278em;vertical-align:-0.22222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">g</span></span></span></span></span> 数组怎么求。</p>\n<p>我们其实会发现正着去求 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">g</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{g}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65278em;vertical-align:-0.22222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">g</span></span></span></span></span> 会很困难，但是我们求不合法的情况还是比较容易的，那么我们不妨容斥一下，拿总的方案数减去不合法的，那么式子就是</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo>=</mo><msubsup><mi>C</mi><mrow><mi>i</mi><mo>×</mo><mi>j</mi></mrow><mi>k</mi></msubsup><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mn>1</mn><mo>=</mo><mn>1</mn></mrow><mi>i</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mn>2</mn><mo>=</mo><mn>1</mn></mrow><mi>j</mi></msubsup><mi>g</mi><mo stretchy=\"false\">[</mo><mi>c</mi><mi>u</mi><mi>r</mi><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>c</mi><mi>u</mi><mi>r</mi><mn>2</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo>×</mo><msubsup><mi>C</mi><mi>i</mi><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mn>1</mn></mrow></msubsup><mo>×</mo><msubsup><mi>C</mi><mi>j</mi><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mn>2</mn></mrow></msubsup><mo stretchy=\"false\">(</mo><mi>c</mi><mi>u</mi><mi>r</mi><mn>1</mn><mo mathvariant=\"normal\">≠</mo><mi>i</mi><mtext> </mtext><mo>∧</mo><mtext> </mtext><mi>c</mi><mi>u</mi><mi>r</mi><mn>2</mn><mo mathvariant=\"normal\">≠</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">g[i][j][k] = C_{i \\times j}^{k} - \\sum_{cur1 = 1}^{i} \\sum_{cur2 = 1}^{j} g[cur1][cur2][k] \\times C_i^{cur1} \\times C_j^{cur2} (cur1 \\neq i \\space \\wedge \\space cur2\\neq j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2438799999999999em;vertical-align:-0.394772em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.849108em;\"><span style=\"top:-2.441336em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.394772em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.264274em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.964564em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mtight\">1</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.964564em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mtight\">2</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029000000000005em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">2</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.072772em;vertical-align:-0.258664em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-2.441336em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.258664em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.20888em;vertical-align:-0.394772em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-2.441336em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">c</span><span class=\"mord mathnormal mtight\">u</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.394772em;\"><span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∧</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\"><span class=\"mrel\"><span class=\"mord vbox\"><span class=\"thinbox\"><span class=\"rlap\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"inner\"><span class=\"mrel\"></span></span><span class=\"fix\"></span></span></span></span></span><span class=\"mrel\">=</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<p>那么这个式子的意思就是所有的情况减去所有的之前的无法转移到当前状态的不合法状态的方案数，我们肯定是不能把自己减掉的，所以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">cur1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">1</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>u</mi><mi>r</mi><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">cur2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\">2</span></span></span></span> 是不能同时到达上限的。</p>\n<p>然后这道题基本上就结束了，还有一个比较小的空间上的优化，但是也不怎么需要，就是我们会发现我们每个考虑的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j][k]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span></span></span></span> 实际上是不会依赖上一个状态的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">g</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{g}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65278em;vertical-align:-0.22222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">g</span></span></span></span></span> 数组的，因此，对于单独的一个状态，我们 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">g</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{g}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65278em;vertical-align:-0.22222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">g</span></span></span></span></span> 数组的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 这一维是固定的，那么我们可以直接对于每个颜色直接计算，不用再保留 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">g</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{g}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65278em;vertical-align:-0.22222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">g</span></span></span></span></span> 数组的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 这一维。</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T, <span class=\"hljs-keyword\">typename</span>... Args&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;first, Args &amp;...args)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(first);\n        <span class=\"hljs-built_in\">read</span>(args...);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> int long long</span>\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">960</span>, mod = <span class=\"hljs-number\">1e9</span> + <span class=\"hljs-number\">9</span>;\n\n    <span class=\"hljs-type\">int</span> n, m, c, ans;\n    <span class=\"hljs-type\">int</span> C[N][N], cnt[N];\n    <span class=\"hljs-type\">int</span> f[N][N][<span class=\"hljs-number\">12</span>], g[N][N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">init</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span> ; i &lt; N ; ++ i)\n        &#123;\n            C[i][<span class=\"hljs-number\">0</span>] = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span> ; j &lt;= i ; ++ j)\n                C[i][j] = C[i - <span class=\"hljs-number\">1</span>][j] + C[i - <span class=\"hljs-number\">1</span>][j - <span class=\"hljs-number\">1</span>] % mod;\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">calc_g</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> &amp;x, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= l ; ++ i)\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span> ; j &lt;= r ; ++ j)\n                <span class=\"hljs-keyword\">if</span>(i &lt; l || j &lt; r)\n                    x = (x + g[i][j] * C[l][i] % mod * C[r][j] % mod + mod) % mod;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">calc_f</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r, <span class=\"hljs-type\">int</span> k)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> res = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span> ; i &lt; l ; ++ i)\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span> ; j &lt; r ; ++ j)\n                <span class=\"hljs-keyword\">if</span>((l - i) * (r - j) &gt;= cnt[k])\n                    res = (res + f[i][j][k - <span class=\"hljs-number\">1</span>] % mod * g[l - i][r - j] % mod * C[n - i][l - i] % mod * C[m - j][r - j] % mod + mod) % mod;\n        <span class=\"hljs-keyword\">return</span> res;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n, m, c);\n        <span class=\"hljs-built_in\">init</span>();\n        f[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>] = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> id = <span class=\"hljs-number\">1</span> ; id &lt;= c ; ++ id)\n        &#123;\n            <span class=\"hljs-built_in\">read</span>(cnt[id]);\n            <span class=\"hljs-built_in\">memset</span>(g, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">sizeof</span>(g));\n\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n            &#123;\n                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span> ; j &lt;= m ; ++ j)\n                &#123;\n                    <span class=\"hljs-keyword\">if</span>(i * j &gt;= cnt[id])\n                    &#123;\n                        <span class=\"hljs-type\">int</span> sum = <span class=\"hljs-number\">0</span>;\n                        <span class=\"hljs-built_in\">calc_g</span>(sum, i, j);\n                        g[i][j] = (C[i * j][cnt[id]] - sum + mod) % mod;\n                    &#125;\n                &#125;\n            &#125;\n\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span> ; j &lt;= m ; ++ j)\n                    f[i][j][id] = <span class=\"hljs-built_in\">calc_f</span>(i, j, id) % mod;\n        &#125;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span> ; j &lt;= m ; ++ j)\n                ans = (ans + f[i][j][c] % mod + mod ) % mod;\n        <span class=\"hljs-built_in\">write</span>(ans);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n",
            "tags": [
                "动态规划",
                "组合数学",
                "题解",
                "题解",
                "动态规划",
                "组合数学"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/09/14/memory/",
            "url": "https://undead-fire-ace.github.io/2023/09/14/memory/",
            "title": "夢のような思い出",
            "date_published": "2023-09-14T03:03:41.000Z",
            "content_html": "<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"密码错误, 请再试试. ಠ_ಠ\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"b2cdeaecd60ac02dfc3db1f2c93ce3738ab651b5b075a1c76b497572c6d74d44\"></script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">请在此输入密码. φ(゜▽゜*)♪</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">",
            "tags": [
                "回忆"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/09/08/expectation/",
            "url": "https://undead-fire-ace.github.io/2023/09/08/expectation/",
            "title": "期望题",
            "date_published": "2023-09-08T00:45:47.000Z",
            "content_html": "<p><s>做笔试题发现自己期望这块太烂了于是就做了一晚上的期望题</s></p>\n<span id=\"more\"></span>\n<h1 id=\"六省联考-2017-分手是祝愿\"><a class=\"markdownIt-Anchor\" href=\"#六省联考-2017-分手是祝愿\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDM3NTA=\">六省联考 2017 分手是祝愿</span></h1>\n<h2 id=\"题目描述\"><a class=\"markdownIt-Anchor\" href=\"#题目描述\"></a> 题目描述</h2>\n<blockquote>\n<p>Zeit und Raum trennen dich und mich.<br />\n时空将你我分开。</p>\n</blockquote>\n<p>B 君在玩一个游戏，这个游戏由 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个灯和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个开关组成，给定这 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个灯的初始状态，下标为从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 的正整数。</p>\n<p>每个灯有两个状态亮和灭，我们用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 来表示这个灯是亮的，用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 表示这个灯是灭的，游戏的目标是使所有灯都灭掉。</p>\n<p>但是当操作第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个开关时，所有编号为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的约数（包括 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>）的灯的状态都会被改变，即从亮变成灭，或者是从灭变成亮。</p>\n<p>B 君发现这个游戏很难，于是想到了这样的一个策略，每次等概率随机操作一个开关，直到所有灯都灭掉。</p>\n<p>这个策略需要的操作次数很多，B 君想到这样的一个优化。如果当前局面，可以通过操作小于等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 个开关使所有灯都灭掉，那么他将不再随机，直接选择操作次数最小的操作方法（这个策略显然小于等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 步）操作这些开关。</p>\n<p>B 君想知道按照这个策略（也就是先随机操作，最后小于等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 步，使用操作次数最小的操作方法）的操作次数的期望。</p>\n<p>这个期望可能很大，但是 B 君发现这个期望乘以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 的阶乘一定是整数，所以他只需要知道这个整数对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>100003</mn></mrow><annotation encoding=\"application/x-tex\">100003</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">3</span></span></span></span> 取模之后的结果。</p>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\"></a> 分析</h2>\n<p>首先看题发现我们对于这个灯的控制是能控制所有约数的位置，那么这就会有一个很好的性质即你改变任意一个灯的状态实际上会改变状态的就只有他之前的灯，也就是说小的灯是影响不到大的灯，因此对于最优状态，我们一定是从后往前去挨个更新一定是最优的，那么到这里，就可以拿到 80 分了，我们考虑怎么去求随机的那部分。</p>\n<p>我们设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> 表示当前有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 盏灯是亮着的，那么我们的状态转移就是</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mfrac><mi>i</mi><mi>n</mi></mfrac><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>+</mo><mfrac><mrow><mi>n</mi><mo>−</mo><mi>i</mi></mrow><mi>n</mi></mfrac><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">f[i] = \\frac{i}{n} f[i - 1] + \\frac{n - i}{n}f[i + 1] + 1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.02252em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.02252em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span></span></p>\n<p>然后对于这个式子接着进行化简，首先 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">f[n] = f[n - 1] + 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> ，我们接着化简最后会发现 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>+</mo><msub><mi>g</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">f[i] = f[i - 1] + g_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> ，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>g</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">g_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为常量，那么我们再带入进一步化简会发现 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>g</mi><mi>i</mi></msub><mo>=</mo><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo stretchy=\"false\">)</mo><mi>g</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>+</mo><mi>n</mi></mrow><mi>i</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">g_i = \\frac{(n - i)g[i + 1] + n}{i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.355em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.01em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.485em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mopen mtight\">(</span><span class=\"mord mathnormal mtight\">n</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mclose mtight\">)</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen mtight\">[</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span><span class=\"mclose mtight\">]</span><span class=\"mbin mtight\">+</span><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span> ，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">g[n] = 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> ，然后带入算即可。</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cmath&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> int long long</span>\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>, mod = <span class=\"hljs-number\">100003</span>;\n\n    <span class=\"hljs-type\">int</span> n, k;\n    <span class=\"hljs-type\">int</span> w[N], g[N], f[N];\n    <span class=\"hljs-type\">int</span> fac = <span class=\"hljs-number\">1</span>, cnt;\n    <span class=\"hljs-type\">int</span> infac[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">qmi</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> a, <span class=\"hljs-type\">int</span> k)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> res = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">while</span>(k)\n        &#123;\n            <span class=\"hljs-keyword\">if</span>(k &amp; <span class=\"hljs-number\">1</span>)\n                res = res * a % mod;\n            a = a * a % mod;\n            k &gt;&gt;= <span class=\"hljs-number\">1</span>;\n        &#125;\n\n        <span class=\"hljs-keyword\">return</span> res;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(k);\n        g[n] = <span class=\"hljs-number\">1</span>, f[k] = k;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n            <span class=\"hljs-built_in\">read</span>(w[i]), fac = fac * i % mod;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = n ; i &gt;= <span class=\"hljs-number\">1</span> ; -- i)\n        &#123;\n            <span class=\"hljs-keyword\">if</span>(w[i])\n            &#123;\n                cnt ++ ;\n\n                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span> ; j * j &lt;= i ; ++ j)\n                &#123;\n                    <span class=\"hljs-keyword\">if</span>(i % j == <span class=\"hljs-number\">0</span>)\n                    &#123;\n                        w[j] ^= <span class=\"hljs-number\">1</span>;\n                        <span class=\"hljs-keyword\">if</span>(j * j != i)\n                            w[i / j] ^= <span class=\"hljs-number\">1</span>;\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n\n        <span class=\"hljs-keyword\">if</span>(cnt &lt;= k)\n        &#123;\n            <span class=\"hljs-built_in\">write</span>((cnt * fac) % mod);\n            <span class=\"hljs-built_in\">exit</span>(<span class=\"hljs-number\">0</span>);\n        &#125;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = n - <span class=\"hljs-number\">1</span> ; i &gt; k ; -- i)\n            g[i] = ((n - i) * g[i + <span class=\"hljs-number\">1</span>] % mod + n)  % mod * <span class=\"hljs-built_in\">qmi</span>(i, mod - <span class=\"hljs-number\">2</span>) % mod; \n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = k + <span class=\"hljs-number\">1</span> ; i &lt;= cnt ; ++ i)\n            f[i] = (f[i - <span class=\"hljs-number\">1</span>] + g[i]) % mod;\n        <span class=\"hljs-built_in\">write</span>(f[cnt] * fac % mod);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<h1 id=\"shoi2012-随机树\"><a class=\"markdownIt-Anchor\" href=\"#shoi2012-随机树\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDM4MzA=\">SHOI2012 随机树</span></h1>\n<h2 id=\"题目描述-2\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-2\"></a> 题目描述</h2>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/pic/6555.png\" alt=\"\" /></p>\n<h2 id=\"分析-2\"><a class=\"markdownIt-Anchor\" href=\"#分析-2\"></a> 分析</h2>\n<p>对于这个题，首先我们考虑第一问，这个还是比较好处理的，我们新加入一个节点，设之前的平均深度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> ，那么我们加入之后是新加了两个单位的深度，那么我们将其分摊到所有点上即为贡献。然后考虑第二问，我们设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个节点的树，深度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的概率，那么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></msubsup><mi>i</mi><mo>×</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">ans = \\sum_{i = 0}^{n} i \\times f[n][i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.104002em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> ，那么我们的转移即为</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>l</mi><mo stretchy=\"false\">]</mo><munderover><mo>∑</mo><mrow><mi>x</mi><mo>=</mo><mn>1</mn></mrow><mi>j</mi></munderover><munderover><mo>∑</mo><mrow><mi>y</mi><mo>=</mo><mn>1</mn></mrow><mi>j</mi></munderover><mi>f</mi><mo stretchy=\"false\">[</mo><mi>l</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>x</mi><mo stretchy=\"false\">]</mo><mo>∗</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mi>l</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>y</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j] = \\sum_{l = 1}^{i - 1} p[i][l] \\sum_{x = 1}^{j} \\sum_{y = 1}^{j} f[l][x] * f[i - l][y]\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.261998em;vertical-align:-1.403221em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8116690000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8587770000000003em;\"><span style=\"top:-1.882887em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">x</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.347113em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.267113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8587770000000001em;\"><span style=\"top:-1.8828869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">y</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.347113em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.403221em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">]</span></span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">p[i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 为有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个节点的树，左边有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 个点的概率，这个转移的复杂度很高，打达到了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>4</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^4)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">4</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> ，接着考虑优化，设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow></msub><mi>j</mi><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">g[i][j] = \\sum_{i = 1}{j}f[i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0497100000000001em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.16195399999999993em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span></p>\n<p>然后式子就变成了</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>l</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></munderover><mo>×</mo><mo stretchy=\"false\">(</mo><mn>2</mn><mo>×</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>l</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>×</mo><mi>g</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mi>l</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>−</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>l</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>×</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mi>l</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j] = \\sum_{l = 1}^{i - 1} \\times (2 \\times f[l][j - 1] \\times g[i - l][j - 1] - f[l][j - 1] \\times f[i - l][j - 1])\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.1137820000000005em;vertical-align:-1.302113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.8116690000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">×</span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span></span></span></span></span></p>\n<p>然后就递推求即可</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e3</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n, q;\n    <span class=\"hljs-type\">double</span> f[N][N], g[N][N], ans;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        read_write :: <span class=\"hljs-built_in\">read</span>(q), read_write :: <span class=\"hljs-built_in\">read</span>(n);\n        \n        <span class=\"hljs-keyword\">if</span>(q == <span class=\"hljs-number\">1</span>)\n        &#123;\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">2</span> ; i &lt;= n ; ++ i)\n                ans += <span class=\"hljs-number\">2.0</span> / i;\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%lf&quot;</span>, ans);\n        &#125;\n        <span class=\"hljs-keyword\">else</span> \n        &#123;\n            f[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">0</span>] = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span> ; i &lt;= n ; ++ i)\n                g[<span class=\"hljs-number\">1</span>][i] = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">2</span> ; i &lt;= n ; ++ i)\n            &#123;\n                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> s = <span class=\"hljs-number\">0</span> ; s &lt; i ; ++ s)\n                    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> l = <span class=\"hljs-number\">1</span> ; l &lt; i ; ++ l)\n                        f[i][s + <span class=\"hljs-number\">1</span>] = f[i][s + <span class=\"hljs-number\">1</span>] + (<span class=\"hljs-number\">2</span> * f[l][s] * g[i - l][s] - f[l][s] * f[i - l][s]) / (i - <span class=\"hljs-number\">1</span>);\n                g[i][<span class=\"hljs-number\">0</span>] = f[i][<span class=\"hljs-number\">0</span>];\n                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> s = <span class=\"hljs-number\">1</span> ; s &lt;= n ; ++ s)\n                    g[i][s] = g[i][s - <span class=\"hljs-number\">1</span>] + f[i][s];\n            &#125;\n\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n                ans += i * f[n][i];\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%lf&quot;</span>, ans);\n        &#125;\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<h1 id=\"scoi2008-奖励关\"><a class=\"markdownIt-Anchor\" href=\"#scoi2008-奖励关\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDI0NzM=\">SCOI2008 奖励关</span></h1>\n<h2 id=\"题目描述-3\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-3\"></a> 题目描述</h2>\n<p>你正在玩你最喜欢的电子游戏，并且刚刚进入一个奖励关。在这个奖励关里，系统将依次随机抛出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 次宝物，每次你都可以选择吃或者不吃（必须在抛出下一个宝物之前做出选择，且现在决定不吃的宝物以后也不能再吃）。</p>\n<p>宝物一共有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 种，系统每次抛出这 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 种宝物的概率都相同且相互独立。也就是说，即使前 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(k-1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 次系统都抛出宝物 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>（这种情况是有可能出现的，尽管概率非常小），第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 次抛出各个宝物的概率依然均为 $\\frac 1 n $。</p>\n<p>获取第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 种宝物将得到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 分，但并不是每种宝物都是可以随意获取的。第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 种宝物有一个前提宝物集合 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">s_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。只有当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">s_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 中所有宝物都至少吃过一次，才能吃第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 种宝物（如果系统抛出了一个目前不能吃的宝物，相当于白白的损失了一次机会）。注意，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 可以是负数，但如果它是很多高分宝物的前提，损失短期利益而吃掉这个负分宝物将获得更大的长期利益。</p>\n<p>假设你采取最优策略，平均情况你一共能在奖励关得到多少分值？</p>\n<h2 id=\"分析-3\"><a class=\"markdownIt-Anchor\" href=\"#分析-3\"></a> 分析</h2>\n<p>对于这种集合类的题，我们首先是考虑把集合压成二进制，然后我们设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 表示到了第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 轮，当前状态是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> ，那么转移就是</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mrow><mo fence=\"true\">{</mo><mtable rowspacing=\"0.3599999999999999em\" columnalign=\"left left\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mtext>  </mtext><mi mathvariant=\"normal\">∣</mi><mtext>  </mtext><mo stretchy=\"false\">(</mo><mn>1</mn><mo>&lt;</mo><mo>&lt;</mo><mo stretchy=\"false\">(</mo><mi>z</mi><mi>t</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mo>+</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mi>j</mi><mtext>  </mtext><mi mathvariant=\"normal\">&amp;</mi><mtext>  </mtext><mi>z</mi><mi>t</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mo>=</mo><mi>z</mi><mi>t</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding=\"application/x-tex\">f[i][j] = \n\\begin{cases}\nf[i + 1][j \\; | \\; (1 &lt;&lt; (zt[k] - 1))] + s[k] \\quad (j \\; \\&amp; \\; zt[i] == zt[k]) \\\\\n\nf[i + 1][j]\n\\end{cases}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:3.0000299999999998em;vertical-align:-1.25003em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\"><span class=\"delimsizing size4\">{</span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-l\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.69em;\"><span style=\"top:-3.69em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord\">&amp;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mord mathnormal\">t</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.25em;\"><span class=\"pstrut\" style=\"height:3.008em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.19em;\"><span></span></span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">100</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n, k;\n    <span class=\"hljs-type\">int</span> s[N], zt[N];\n    <span class=\"hljs-type\">double</span> f[N][<span class=\"hljs-number\">1</span> &lt;&lt; <span class=\"hljs-number\">16</span>];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(k), <span class=\"hljs-built_in\">read</span>(n);\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-type\">int</span> x;\n            <span class=\"hljs-built_in\">read</span>(s[i]), <span class=\"hljs-built_in\">read</span>(x);\n            <span class=\"hljs-keyword\">while</span>(x)\n                zt[i] = zt[i] | (<span class=\"hljs-number\">1</span> &lt;&lt; (x - <span class=\"hljs-number\">1</span>)), <span class=\"hljs-built_in\">read</span>(x);\n        &#125;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = k ; i &gt;= <span class=\"hljs-number\">1</span> ; -- i)\n        &#123;\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span> ; j &lt; (<span class=\"hljs-number\">1</span> &lt;&lt; n) ; ++ j)\n            &#123;\n                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> zl = <span class=\"hljs-number\">1</span> ; zl &lt;= n ; ++ zl)\n                &#123;\n                    <span class=\"hljs-keyword\">if</span>((j &amp; zt[zl]) == zt[zl])\n                        f[i][j] += <span class=\"hljs-built_in\">max</span>(f[i + <span class=\"hljs-number\">1</span>][j], f[i + <span class=\"hljs-number\">1</span>][j | (<span class=\"hljs-number\">1</span> &lt;&lt; (zl - <span class=\"hljs-number\">1</span>))] + s[zl]);\n                    <span class=\"hljs-keyword\">else</span> \n                        f[i][j] += f[i + <span class=\"hljs-number\">1</span>][j];    \n                &#125;\n                f[i][j] /= n;\n            &#125;\n        &#125;\n\n        <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%.6lf&quot;</span>, f[<span class=\"hljs-number\">1</span>][<span class=\"hljs-number\">0</span>]);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<h1 id=\"hnoi2015-亚瑟王\"><a class=\"markdownIt-Anchor\" href=\"#hnoi2015-亚瑟王\"></a> [HNOI2015 亚瑟王]</h1>\n<h2 id=\"题目描述-4\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-4\"></a> 题目描述</h2>\n<p>小 K 不慎被 LL 邪教洗脑了，洗脑程度深到他甚至想要从亚瑟王邪教中脱坑。他决定，在脱坑之前，最后再来打一盘亚瑟王。既然是最后一战，就一定要打得漂亮。众所周知，亚瑟王是一个看脸的游戏，技能的发动都是看概率的。</p>\n<p>作为一个非洲人，同时作为一个前 OIer，小 K 自然是希望最大化造成伤害的期望值。但他已经多年没写过代码，连 Spaly都敲不对了，因此，希望你能帮帮小 K，让他感受一下当欧洲人是怎样的体验。</p>\n<p>本题中我们将考虑游戏的一个简化版模型。 玩家有一套卡牌，共 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 张。游戏时，玩家将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 张卡牌排列成某种顺序，排列后将卡牌按从前往后依次编号为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>−</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">1 -  n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>。本题中，顺序已经确定，即为输入的顺序。每张卡牌都有一个技能。第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 张卡牌的技能发动概率为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，如果成功发动，则会对敌方造成 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">d_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 点伤害。也只有通过发动技能，卡牌才能对敌方造成伤害。基于现实因素以及小 K 非洲血统的考虑，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 不会为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>，也不会为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>，即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>&lt;</mo><msub><mi>p</mi><mi>i</mi></msub><mo>&lt;</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">0 &lt; p_i &lt; 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68354em;vertical-align:-0.0391em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7335400000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>。 一局游戏一共有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span> 轮。在每一轮中，系统将从第一张卡牌开始，按照顺序依次考虑每张卡牌。在一轮中，对于依次考虑的每一张卡牌：</p>\n<ol>\n<li>如果这张卡牌在这一局游戏中已经发动过技能，则</li>\n</ol>\n<p>1.1. 如果这张卡牌不是最后一张，则跳过之（考虑下一张卡牌）； 否则（是最后一张），结束这一轮游戏。</p>\n<ol start=\"2\">\n<li>否则（这张卡牌在这一局游戏中没有发动过技能），设这张卡牌为第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 张</li>\n</ol>\n<p>2.1. 将其以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>p</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">p_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">p</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的概率发动技能。</p>\n<p>2.2. 如果技能发动，则对敌方造成 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">d_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">d</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 点伤害，并结束这一轮。</p>\n<p>2.3. 如果这张卡牌已经是最后一张（即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>），则结束这一轮；否则，考虑下一张卡牌。</p>\n<p>请帮助小 K 求出这一套卡牌在一局游戏中能造成的伤害的期望值。</p>\n<h2 id=\"分析-4\"><a class=\"markdownIt-Anchor\" href=\"#分析-4\"></a> 分析</h2>\n<p>这个一开始不是特别好想，然后我们再分析一下题意会发现每张卡的贡献是独立的，而且我们最终的贡献即为每张卡的发动的概率乘上他的伤害，那么我们就可以设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 为前 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 张卡中选出了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 张卡的概率，那么我们考虑第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 张卡选还是不选，不选的话就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mo>=</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>×</mo><msup><mi>i</mi><mrow><mi>r</mi><mo>−</mo><mi>j</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">f[i][j] += f[i - 1][j] \\times i^{r - j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mord\">+</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.824664em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.824664em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span></span></span></span></span></span></span></span> ，选即为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mo>=</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>∗</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><msup><mi>i</mi><mrow><mi>r</mi><mo>−</mo><mi>j</mi><mo>+</mo><mn>1</mn></mrow></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j] += f[i - 1][j - 1] * (1 - i^{r - j + 1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mord\">+</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0746639999999998em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.824664em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> ，那么每张卡 的触发概率 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mo>=</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>∗</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><msup><mi>i</mi><mrow><mi>r</mi><mo>−</mo><mi>j</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">p = f[i - 1][j] * (1 - i^{r - j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.824664em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">i</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.824664em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span></span></span></span></span></span></span></span> 。</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">400</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n, t, r, d[N]; \n    <span class=\"hljs-type\">double</span> p[N], f[N][N];    <span class=\"hljs-comment\">// f[i][j] : 前 i 张卡中选出了 j 张卡的概率</span>\n    <span class=\"hljs-type\">double</span> Pow[N][N], use[N], ans;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">init</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span> ; i &lt; n ; ++ i)\n        &#123;\n            Pow[i][<span class=\"hljs-number\">0</span>] = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span> ; j &lt;= r ; ++ j)\n                Pow[i][j] = Pow[i][j - <span class=\"hljs-number\">1</span>] * (<span class=\"hljs-number\">1</span> - p[i]);\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(t);\n        <span class=\"hljs-keyword\">while</span>(t --)\n        &#123;\n            <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(r);\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span> ; i &lt; n ; ++ i)\n            &#123;\n                <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%lf&quot;</span>, &amp;p[i]);\n                <span class=\"hljs-built_in\">read</span>(d[i]);\n            &#125;\n            <span class=\"hljs-built_in\">init</span>(), ans = <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-built_in\">memset</span>(f, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">sizeof</span>(f));\n            <span class=\"hljs-built_in\">memset</span>(use, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">sizeof</span>(use));\n\n            f[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>] = Pow[<span class=\"hljs-number\">0</span>][r];\n            f[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>] = use[<span class=\"hljs-number\">0</span>] = <span class=\"hljs-number\">1</span> - f[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>];\n\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt; n ; ++ i)\n            &#123;\n                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span> ; j &lt;= r ; ++ j)\n                &#123;\n                    use[i] += f[i - <span class=\"hljs-number\">1</span>][j] * (<span class=\"hljs-number\">1</span> - Pow[i][r - j]);   \n                    f[i][j] += f[i - <span class=\"hljs-number\">1</span>][j] * Pow[i][r - j];   <span class=\"hljs-comment\">//不选</span>\n                    <span class=\"hljs-keyword\">if</span>(j)\n                        f[i][j] += f[i - <span class=\"hljs-number\">1</span>][j - <span class=\"hljs-number\">1</span>] * (<span class=\"hljs-number\">1</span> - Pow[i][r - j + <span class=\"hljs-number\">1</span>]);  <span class=\"hljs-comment\">//选</span>\n                &#125;\n            &#125;\n\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span> ; i &lt; n ; ++ i)\n                ans += d[i] * use[i];\n            <span class=\"hljs-built_in\">printf</span>(<span class=\"hljs-string\">&quot;%.10lf&quot;</span>, ans), <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;&quot;</span>);\n        &#125;\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<p>以后应该会接着更新吧，[总之先咕]{.rainbow}。</p>\n",
            "tags": [
                "学习笔记",
                "期望",
                "学习笔记",
                "期望"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/09/05/POI-record/",
            "url": "https://undead-fire-ace.github.io/2023/09/05/POI-record/",
            "title": "POI做题记录",
            "date_published": "2023-09-05T03:55:55.000Z",
            "content_html": "<p>做了差不多两天的 POI 的题，算是有所收获，真的感觉有点像做中国的 OI 题一样，也算是练了练基础和学习了一些技巧吧，还有四十分钟就要去吃饭了，就写一写总结/ww</p>\n<span id=\"more\"></span>\n<h1 id=\"poi2009-lyz-ice-skates\"><a class=\"markdownIt-Anchor\" href=\"#poi2009-lyz-ice-skates\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDM0ODg=\">POI2009 LYZ-Ice Skates</span></h1>\n<h2 id=\"题面翻译\"><a class=\"markdownIt-Anchor\" href=\"#题面翻译\"></a> 题面翻译</h2>\n<p>滑冰俱乐部初始有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mn>1</mn><mo separator=\"true\">,</mo><mi>n</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[1,n]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span></span></span></span> 号码溜冰鞋各 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 双，已知 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 号脚的人可以穿 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>x</mi><mo>+</mo><mi>d</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[x,x+d]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">]</span></span></span></span> 号码的鞋子。</p>\n<p>现在有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 次操作，每次两个数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi><mo separator=\"true\">,</mo><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">r,x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span>，表示来了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>r</mi></mrow><annotation encoding=\"application/x-tex\">r</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span></span></span></span> 号脚的人，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 为负则表示离开。在每次操作之后，你需要判断溜冰鞋是否足够。</p>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\"></a> 分析</h2>\n<p>首先我们看这个区间操作很容易想到用线段树维护，但是他每次给的是一个范围，并不是具体的减某一个位置或是区间全减，这就让我们很头疼，这时候我们就要用到一个东西，叫做 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">H</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal Hall</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathcal\" style=\"margin-right:0.00965em;\">H</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> (霍尔)定理，我就说了，不会点 -&gt; <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuemhpaHUuY29tL3RhcmRpcy96bS9hcnQvNDYwMzczMTg0P3NvdXJjZV9pZD0xMDA1\">这里</span> 。那么由这个定理我们就可以知道我们需要满足</p>\n<p class='katex-block'><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>l</mi></mrow><mi>r</mi></munderover><msub><mi>a</mi><mi>i</mi></msub><mo>≤</mo><mo stretchy=\"false\">(</mo><mi>r</mi><mo>−</mo><mi>l</mi><mo>+</mo><mn>1</mn><mo>+</mo><mi>d</mi><mo stretchy=\"false\">)</mo><mo>×</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">\\sum_{i = l}^{r} a_i \\leq (r - l + 1 + d) \\times k\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.9535100000000005em;vertical-align:-1.302113em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.8478869999999998em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span style=\"top:-3.0500049999999996em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.300005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.302113em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span></p>\n<p>但是这样看着还是有些复杂，接着进行化简</p>\n<p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: alignat* at position 7: \\begin{̲a̲l̲i̲g̲n̲a̲t̲*̲}̲{6}\n\\sum_{i = l…'>\\begin{alignat*}{6}\n\\sum_{i = l}^{r} a_i &amp; \\leq k \\times (r - l + 1) + k \\times d\\\\\n\\sum_{i = l}^{r} a_i &amp; \\leq \\sum_{i = l}^{r}k + k \\times d\\\\\n\\sum_{i = l}^{r} a_i - \\sum_{i = l}^{r}k &amp; \\leq k \\times d\\\\\n\\sum_{i = l}^{r} a_i- k &amp; \\leq k \\times d\n\\end{alignat*}\n</p>\n<p>然后我们就只需要让上面化简出来的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mi>l</mi></mrow><mi>r</mi></msubsup><msub><mi>a</mi><mi>i</mi></msub><mo>−</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">\\sum_{i = l}^{r} a_i- k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.104002em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02778em;\">r</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 小于等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi><mo>×</mo><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">k \\times d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span> 即可，接下来就是用线段树维护最大的字段和即可，初始化的时候每个元素都是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 因为没有一个被借用过。</p>\n<p>+++danger 代码</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Segment_Tree\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> int long long</span>\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n, m, k, d;\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Tree</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> sum, lmx, rmx, res;\n    &#125; tr[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushup</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u)</span>\n    </span>&#123;\n        tr[u].lmx = <span class=\"hljs-built_in\">max</span>(tr[u &lt;&lt; <span class=\"hljs-number\">1</span>].lmx, tr[u &lt;&lt; <span class=\"hljs-number\">1</span>].sum + tr[u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>].lmx);\n        tr[u].rmx = <span class=\"hljs-built_in\">max</span>(tr[u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>].rmx, tr[u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>].sum + tr[u &lt;&lt; <span class=\"hljs-number\">1</span>].rmx);\n        tr[u].sum = tr[u &lt;&lt; <span class=\"hljs-number\">1</span>].sum + tr[u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>].sum;\n        tr[u].res = <span class=\"hljs-built_in\">max</span>(tr[u &lt;&lt; <span class=\"hljs-number\">1</span>].res, <span class=\"hljs-built_in\">max</span>(tr[u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>].res, tr[u &lt;&lt; <span class=\"hljs-number\">1</span>].rmx + tr[u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>].lmx));\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">build</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(l == r)\n        &#123;\n            tr[u].sum = tr[u].res = -k;;\n            <span class=\"hljs-keyword\">return</span> ;\n        &#125;\n        <span class=\"hljs-type\">int</span> mid = l + r &gt;&gt; <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-built_in\">build</span>(u &lt;&lt; <span class=\"hljs-number\">1</span>, l, mid), <span class=\"hljs-built_in\">build</span>(u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>, mid + <span class=\"hljs-number\">1</span>, r);\n        <span class=\"hljs-built_in\">pushup</span>(u);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">modify</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r, <span class=\"hljs-type\">int</span> pos, <span class=\"hljs-type\">int</span> w)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(l == r)\n        &#123;\n            tr[u].sum += w;\n            tr[u].res += w;\n            tr[u].lmx = tr[u].rmx = <span class=\"hljs-built_in\">max</span>(<span class=\"hljs-number\">0ll</span>, tr[u].sum);\n            <span class=\"hljs-keyword\">return</span> ;\n        &#125;\n        <span class=\"hljs-type\">int</span> mid = l + r &gt;&gt; <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">if</span>(pos &lt;= mid)\n            <span class=\"hljs-built_in\">modify</span>(u &lt;&lt; <span class=\"hljs-number\">1</span>, l, mid, pos, w);\n        <span class=\"hljs-keyword\">else</span>\n            <span class=\"hljs-built_in\">modify</span>(u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>, mid + <span class=\"hljs-number\">1</span>, r, pos, w);\n        <span class=\"hljs-built_in\">pushup</span>(u);\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> Segment_Tree;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(m), <span class=\"hljs-built_in\">read</span>(k), <span class=\"hljs-built_in\">read</span>(d);\n        <span class=\"hljs-built_in\">build</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, n);\n\n        <span class=\"hljs-keyword\">while</span>(m -- )\n        &#123;\n            <span class=\"hljs-type\">int</span> x, y;\n            <span class=\"hljs-built_in\">read</span>(x), <span class=\"hljs-built_in\">read</span>(y);\n            <span class=\"hljs-built_in\">modify</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, n, x, y);\n            <span class=\"hljs-keyword\">if</span>(tr[<span class=\"hljs-number\">1</span>].res &lt;= k * d)\n                <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;TAK&quot;</span>);\n            <span class=\"hljs-keyword\">else</span> \n                <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;NIE&quot;</span>);\n        &#125;\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<p>+++</p>\n<h1 id=\"poi2010-klo-blocks\"><a class=\"markdownIt-Anchor\" href=\"#poi2010-klo-blocks\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDM1MDM=\">POI2010 KLO-Blocks</span></h1>\n<h2 id=\"题面翻译-2\"><a class=\"markdownIt-Anchor\" href=\"#题面翻译-2\"></a> 题面翻译</h2>\n<p>给出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个正整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>a</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><mo>⋯</mo><mtext> </mtext><mo separator=\"true\">,</mo><msub><mi>a</mi><mi>n</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_1,a_2,\\cdots,a_n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\">⋯</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.151392em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，再给出一个正整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>，现在可以进行如下操作：</p>\n<ul>\n<li>每次选择一个大于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 的正整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 减去 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> ，选择 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">a_{i-1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.638891em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span> 或 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">a_{i+1}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.638891em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span></span></span></span> 中的一个加上 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>。</li>\n</ul>\n<p>经过一定次数的操作后，问最大能够选出多长的一个连续子序列，使得这个子序列的每个数都不小于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 组询问。</p>\n<h2 id=\"分析-2\"><a class=\"markdownIt-Anchor\" href=\"#分析-2\"></a> 分析</h2>\n<p>首先我们肯定要找一个区间的平均值是大于等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 的，然后我们可以考虑先将整个序列减去一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> ，然后我们的任务就变成了找到一个区间之和大于等于0，我们先对其求一下前缀和，记为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">s[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> ，然后实际上就是要找到一个区间满足 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo>&gt;</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">s[j] - s[i - 1] &gt;= 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> ，同时要求区间尽可能大，然后就是怎么去求这个区间。我们考虑维护一个单调栈满足 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>&gt;</mo><mi>s</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">s[i] &gt; s[j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 同时 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo>&gt;</mo><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">j &gt; i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> ，我们会发现如果当前一个点（该点充当这个区间的右端点时）能与栈中的某一个点凑成合法的区间，那么一定是能跟那栈中的那个点上方的所有点都得到一个合法的方案，因此我们直接枚举右端点，如果一个右端点能跟栈顶得到合法的答案，直接将栈顶弹出，因为在他下面的点就都不可以得到更长的区间，然后就看新的点是否合法即可。</p>\n<p>+++danger 代码</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> int long long</span>\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n, m, k;\n    <span class=\"hljs-type\">int</span> a[N], temp[N];\n    <span class=\"hljs-type\">int</span> stk[N], top;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(m);\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n            <span class=\"hljs-built_in\">read</span>(a[i]);\n        <span class=\"hljs-keyword\">while</span>(m -- )\n        &#123;\n            <span class=\"hljs-type\">int</span> ans = <span class=\"hljs-number\">0</span>;\n            top = <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-built_in\">read</span>(k);\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n            &#123;\n                temp[i] = temp[i - <span class=\"hljs-number\">1</span>] + a[i] - k;\n                <span class=\"hljs-keyword\">if</span>(temp[i] &gt;= <span class=\"hljs-number\">0</span>)\n                    ans = <span class=\"hljs-built_in\">max</span>(ans, i);\n                <span class=\"hljs-keyword\">if</span>(!top || temp[i] &lt; temp[stk[top]])\n                    stk[++ top] = i;\n            &#125;\n\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = n ; i &gt;= <span class=\"hljs-number\">1</span> ; -- i)\n            &#123;\n                <span class=\"hljs-keyword\">while</span>(top &amp;&amp; temp[i] - temp[stk[top]] &gt;= <span class=\"hljs-number\">0</span>)\n                    ans = <span class=\"hljs-built_in\">max</span>(ans, i - stk[top]), -- top;\n            &#125;\n\n            <span class=\"hljs-built_in\">write</span>(ans), <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27; &#x27;</span>);\n        &#125;\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<p>+++</p>\n<h1 id=\"poi2010-mot-monotonicity-2\"><a class=\"markdownIt-Anchor\" href=\"#poi2010-mot-monotonicity-2\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDM1MDY=\">POI2010 MOT-Monotonicity 2</span></h1>\n<h2 id=\"题目描述\"><a class=\"markdownIt-Anchor\" href=\"#题目描述\"></a> 题目描述</h2>\n<p>给出N个正整数a[1…N]，再给出K个关系符号（&gt;、&lt;或=）s[1…k]。</p>\n<p>选出一个长度为L的子序列（不要求连续），要求这个子序列的第i项和第i+1项的的大小关系为s[(i-1)mod K+1]。</p>\n<p>求出L的最大值。</p>\n<h2 id=\"分析-3\"><a class=\"markdownIt-Anchor\" href=\"#分析-3\"></a> 分析</h2>\n<p>首先我们肯定要先把这个字符串给补全。然后我们设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> 为以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 结尾的最长合法序列，那么我们的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 的转移也就不难想了，直接枚举 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> ，然后枚举 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> ，即从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i- 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 中选择一个数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 使得将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 接到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 后为一个合法的方案。但是这复杂度肯定是无法接受的，考虑怎么优化。对于我们将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 拼接在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 后时，实际上是确定 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 与 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span> 的大小关系的，那么我们在拼接 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">a_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 的时候，最优的情况一定是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 是所有满足情况中最大的右边的那个点，然后我们每次拼接完之后就会更改一下这个前缀中的最大值或是后缀中的最大值即可。</p>\n<p>+++danger 代码</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n, k, ans, pos;\n    <span class=\"hljs-type\">int</span> a[N], f[N];\n    <span class=\"hljs-type\">int</span> t[N], t1[N], t2[N], son[N];\n    <span class=\"hljs-type\">char</span> str[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">lowbit</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &amp; -x;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">change</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = a[x] ; i &lt;= <span class=\"hljs-number\">1e6</span> ; i += <span class=\"hljs-built_in\">lowbit</span>(i))\n            <span class=\"hljs-keyword\">if</span>(f[x] &gt; f[t1[i]])\n                t1[i] = x;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">query</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> res = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = a[x] - <span class=\"hljs-number\">1</span> ; i ; i -= <span class=\"hljs-built_in\">lowbit</span>(i))\n            <span class=\"hljs-keyword\">if</span>(f[res] &lt; f[t1[i]])\n                res = t1[i];\n        <span class=\"hljs-keyword\">return</span> res;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">modify</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = a[x] ; i ; i -= <span class=\"hljs-built_in\">lowbit</span>(i))\n            <span class=\"hljs-keyword\">if</span>(f[x] &gt; f[t2[i]])\n                t2[i] = x;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">ask</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> res = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = a[x] + <span class=\"hljs-number\">1</span> ; i &lt;= <span class=\"hljs-number\">1e6</span> ; i += <span class=\"hljs-built_in\">lowbit</span>(i))\n            <span class=\"hljs-keyword\">if</span>(f[res] &lt; f[t2[i]])\n                res = t2[i];\n        <span class=\"hljs-keyword\">return</span> res;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">Write</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(son[x])\n            <span class=\"hljs-built_in\">Write</span>(son[x]);\n        <span class=\"hljs-built_in\">write</span>(a[x]), <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27; &#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(k);\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n            <span class=\"hljs-built_in\">read</span>(a[i]), f[i] = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= k ; ++ i)\n            <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot; %c&quot;</span>, &amp;str[i]);\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = k + <span class=\"hljs-number\">1</span> ; i &lt; n ; ++ i)\n            str[i] = str[(i - <span class=\"hljs-number\">1</span>) % k + <span class=\"hljs-number\">1</span>];\n        \n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-type\">int</span> temp = <span class=\"hljs-built_in\">query</span>(i);\n            <span class=\"hljs-keyword\">if</span>(f[i] &lt; f[temp] + <span class=\"hljs-number\">1</span>)\n                f[i] = f[temp] + <span class=\"hljs-number\">1</span>, son[i] = temp;\n            temp = <span class=\"hljs-built_in\">ask</span>(i);\n            <span class=\"hljs-keyword\">if</span>(f[i] &lt; f[temp] + <span class=\"hljs-number\">1</span>)\n                f[i] = f[temp] + <span class=\"hljs-number\">1</span>, son[i] = temp;\n            <span class=\"hljs-keyword\">if</span>(f[i] &lt; f[temp = t[a[i]]] + <span class=\"hljs-number\">1</span>)\n                f[i] = f[temp] + <span class=\"hljs-number\">1</span>, son[i] = temp;\n            <span class=\"hljs-keyword\">if</span>(ans &lt; f[i])\n                ans = f[i], pos = i;\n            <span class=\"hljs-keyword\">if</span>(str[f[i]] == <span class=\"hljs-string\">&#x27;&lt;&#x27;</span>)\n                <span class=\"hljs-built_in\">change</span>(i);\n            <span class=\"hljs-keyword\">if</span>(str[f[i]] == <span class=\"hljs-string\">&#x27;&gt;&#x27;</span>)\n                <span class=\"hljs-built_in\">modify</span>(i);\n            <span class=\"hljs-keyword\">if</span>(str[f[i]] == <span class=\"hljs-string\">&#x27;=&#x27;</span> &amp;&amp; f[i] &gt; f[t[a[i]]])\n                t[a[i]] = i;\n        &#125;\n\n        <span class=\"hljs-built_in\">write</span>(ans), <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;&quot;</span>);\n        <span class=\"hljs-built_in\">Write</span>(pos);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<p>+++</p>\n<h1 id=\"poi2014-kur-couriers\"><a class=\"markdownIt-Anchor\" href=\"#poi2014-kur-couriers\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDM1Njc=\">POI2014 KUR-Couriers</span></h1>\n<h2 id=\"题面翻译-3\"><a class=\"markdownIt-Anchor\" href=\"#题面翻译-3\"></a> 题面翻译</h2>\n<p>给一个长度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 的正整数序列 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span>。共有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 组询问，每次询问一个区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>l</mi><mo separator=\"true\">,</mo><mi>r</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[l,r]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mclose\">]</span></span></span></span> ，是否存在一个数在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>l</mi><mo separator=\"true\">,</mo><mi>r</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[l,r]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mclose\">]</span></span></span></span> 中出现的次数严格大于一半。如果存在，输出这个数，否则输出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>m</mi><mo>≤</mo><mn>5</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding=\"application/x-tex\">1 \\leq n,m \\leq 5 \\times 10^5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">5</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><msub><mi>a</mi><mi>i</mi></msub><mo>≤</mo><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">1 \\leq a_i \\leq n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7859700000000001em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>。</p>\n<h2 id=\"分析-4\"><a class=\"markdownIt-Anchor\" href=\"#分析-4\"></a> 分析</h2>\n<p>首先这个很快就能想到用主席树维护一下就行了，也是最板子的一道题了。</p>\n<p>+++danger 代码</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Segment_Tree\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e7</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n, m;\n    <span class=\"hljs-type\">int</span> idx, R;\n    <span class=\"hljs-type\">int</span> a[N], b[N];\n    <span class=\"hljs-type\">int</span> root[N];\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Tree</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> l, r;\n        <span class=\"hljs-type\">int</span> cnt;\n    &#125; tr[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">insert</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> p, <span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> q = ++ idx;\n        tr[q] = tr[p];\n        tr[q].cnt ++;\n        <span class=\"hljs-keyword\">if</span>(l == r)\n            <span class=\"hljs-keyword\">return</span> q;\n        <span class=\"hljs-type\">int</span> mid = l + r &gt;&gt; <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">if</span>(x &lt;= mid)\n            tr[q].l = <span class=\"hljs-built_in\">insert</span>(tr[p].l, x, l, mid);\n        <span class=\"hljs-keyword\">else</span> \n            tr[q].r = <span class=\"hljs-built_in\">insert</span>(tr[p].r, x, mid + <span class=\"hljs-number\">1</span>, r);\n        <span class=\"hljs-keyword\">return</span> q;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">query</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> p, <span class=\"hljs-type\">int</span> q, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r, <span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(l == r)\n            <span class=\"hljs-keyword\">return</span> l;\n        <span class=\"hljs-type\">int</span> mid = l + r &gt;&gt; <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-number\">2</span> * (tr[tr[q].l].cnt - tr[tr[p].l].cnt) &gt; x)\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">query</span>(tr[p].l, tr[q].l, l, mid, x);\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-number\">2</span> * (tr[tr[q].r].cnt - tr[tr[p].r].cnt) &gt; x)\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">query</span>(tr[p].r, tr[q].r, mid + <span class=\"hljs-number\">1</span>, r, x);\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> Segment_Tree;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(m);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-built_in\">read</span>(a[i]);\n            b[i] = a[i];\n        &#125;\n\n        std :: <span class=\"hljs-built_in\">sort</span>(b + <span class=\"hljs-number\">1</span>, b + n + <span class=\"hljs-number\">1</span>);\n        R = std :: <span class=\"hljs-built_in\">unique</span>(b + <span class=\"hljs-number\">1</span>, b + n + <span class=\"hljs-number\">1</span>) - b - <span class=\"hljs-number\">1</span>;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-type\">int</span> temp = std :: <span class=\"hljs-built_in\">lower_bound</span>(b + <span class=\"hljs-number\">1</span>, b + R + <span class=\"hljs-number\">1</span>, a[i]) - b;\n            root[i] = <span class=\"hljs-built_in\">insert</span>(root[i - <span class=\"hljs-number\">1</span>], temp, <span class=\"hljs-number\">1</span>, R);\n        &#125;\n\n        <span class=\"hljs-keyword\">while</span>(m -- )\n        &#123;\n            <span class=\"hljs-type\">int</span> l, r;\n            <span class=\"hljs-built_in\">read</span>(l), <span class=\"hljs-built_in\">read</span>(r);\n            <span class=\"hljs-built_in\">write</span>(b[<span class=\"hljs-built_in\">query</span>(root[l - <span class=\"hljs-number\">1</span>], root[r], <span class=\"hljs-number\">1</span>, R, r - l + <span class=\"hljs-number\">1</span>)]);\n            <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;&quot;</span>);\n        &#125;\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<p>+++</p>\n<h1 id=\"poi2014-far-farmcraft\"><a class=\"markdownIt-Anchor\" href=\"#poi2014-far-farmcraft\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDM1NzQ=\">POI2014 FAR-FarmCraft</span></h1>\n<h2 id=\"题面翻译-4\"><a class=\"markdownIt-Anchor\" href=\"#题面翻译-4\"></a> 题面翻译</h2>\n<p>在一个叫做比特村的小村庄中，有<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>条路连接着这个村庄中的全部<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>个房子。</p>\n<p>每两个房子之间都有一条唯一的通路。这些房子的编号为1至<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>。</p>\n<p>1号房子属于村庄的管理员比特安萨尔。</p>\n<p>为了提升村庄的科技使用水平，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>台电脑被快递到了比特安萨尔的房子。每个房子都应该有一台电脑，且分发电脑的任务就落在了比特安萨尔的肩上。</p>\n<p>比特村的居民一致同意去玩农场物语这个游戏的最新快照版，而且好消息是他们很快就要得到他们最新的高配置电脑了。</p>\n<p>比特安萨尔将所有电脑都装在了他的卡车上，而且他准备好完成这个艰巨的任务了。</p>\n<p><strong>他的汽油恰好够走每条路两遍。</strong></p>\n<p>在每个房子边，比特安萨尔把电脑贴心的配送给居民，且立即前往下一个房子。（配送过程不花费任何时间）</p>\n<p>只要每间房子的居民拿到了他们的新电脑，它们就会立即开始安装农场物语。安装农场物语所用的时间根据居民的科技素养而定。幸运的是，每间房子中居民的科技素养都是已知的。</p>\n<p>在比特安萨尔配送完所有电脑后，他会回到他自己的1号房子去安装他自己的农场物语。</p>\n<p>用卡车开过每条路的时间恰好是1分钟，而居民开电脑箱的时间可以忽略不计。（因为他们太想玩农场物语了）</p>\n<p>请你帮助比特安萨尔算出从开始配送到所有居民都玩上了农场物语的最少时间。</p>\n<h2 id=\"分析-5\"><a class=\"markdownIt-Anchor\" href=\"#分析-5\"></a> 分析</h2>\n<p>这个也比较好看出来是个树上 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">d</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal dp</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span></span></span></span> ，对于根节点我们是最后一个装，因此我们直接递归左右子树，然后我们考虑先递归一个子树对另一个子树的贡献，那么显然是遍历完一个子树的时间，那么怎么确定子树顺序。</p>\n<p>我们计 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>x</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[x]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">]</span></span></span></span> 为以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 为根的子树中的最大值，那么子树的大小乘 2 即为遍历完子树所用的时间，那么转移式子就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>x</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>x</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>y</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>s</mi><mi>i</mi><mi>z</mi><mo stretchy=\"false\">[</mo><mi>x</mi><mo stretchy=\"false\">]</mo><mo>×</mo><mn>2</mn><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">f[x]=max{(f[x], f[y] + siz[x] \\times 2 + 1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span>，现在有两棵子树 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> ，那么倘若先走 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">z</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> 比先走 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 更优，即 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>z</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>y</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>s</mi><mi>i</mi><mi>z</mi><mo stretchy=\"false\">[</mo><mi>z</mi><mo stretchy=\"false\">]</mo><mo>×</mo><mn>2</mn><mo>+</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><mo>≤</mo><mi>m</mi><mi>a</mi><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>y</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>z</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>s</mi><mi>i</mi><mi>z</mi><mo stretchy=\"false\">[</mo><mi>y</mi><mo stretchy=\"false\">]</mo><mo>×</mo><mn>2</mn><mo>+</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">max{(f[z], f[y] + siz[z] \\times 2 + 2)} \\leq max{(f[y], f[z] + siz[y] \\times 2 + 2)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span></span> 。拆掉括号最终即为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi><mo stretchy=\"false\">[</mo><mi>z</mi><mo stretchy=\"false\">]</mo><mo>×</mo><mn>2</mn><mo>−</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>z</mi><mo stretchy=\"false\">]</mo><mo>≤</mo><mi>s</mi><mi>i</mi><mi>z</mi><mo stretchy=\"false\">[</mo><mi>y</mi><mo stretchy=\"false\">]</mo><mo>×</mo><mn>2</mn><mo>−</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>y</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">siz[z] \\times 2 - f[z] \\leq siz[y] \\times 2 - f[y]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">]</span></span></span></span> 。然后按照这个排一下所有子树的序，按照顺序遍历即可。</p>\n<p>+++danger 代码</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;vector&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> int long long</span>\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n;\n    <span class=\"hljs-type\">int</span> c[N];\n    <span class=\"hljs-type\">int</span> f[N], g[N];\n    std :: vector&lt;<span class=\"hljs-type\">int</span>&gt; v[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">cmp</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> g[x] - f[x] &gt; g[y] - f[y];\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">dfs</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> fath)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">auto</span> i: v[u])\n        &#123;\n            <span class=\"hljs-keyword\">if</span>(i == fath)\n                <span class=\"hljs-keyword\">continue</span>;\n            <span class=\"hljs-built_in\">dfs</span>(i, u);\n        &#125;\n\n        std :: <span class=\"hljs-built_in\">sort</span>(v[u].<span class=\"hljs-built_in\">begin</span>(), v[u].<span class=\"hljs-built_in\">end</span>(), cmp);\n        <span class=\"hljs-keyword\">if</span>(u != <span class=\"hljs-number\">1</span>)\n            g[u] = c[u];\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-keyword\">auto</span> i: v[u])\n        &#123;\n            <span class=\"hljs-keyword\">if</span>(i == fath)\n                <span class=\"hljs-keyword\">continue</span>;\n            g[u] = <span class=\"hljs-built_in\">max</span>(g[u], g[i] + f[u] + <span class=\"hljs-number\">1</span>);\n            f[u] = f[u] + f[i] + <span class=\"hljs-number\">2</span>;\n        &#125;\n\n        <span class=\"hljs-keyword\">return</span> ;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n);\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n            <span class=\"hljs-built_in\">read</span>(c[i]);\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt; n ; ++ i)\n        &#123;\n            <span class=\"hljs-type\">int</span> a, b;\n            <span class=\"hljs-built_in\">read</span>(a), <span class=\"hljs-built_in\">read</span>(b);\n            v[a].<span class=\"hljs-built_in\">push_back</span>(b), v[b].<span class=\"hljs-built_in\">push_back</span>(a);\n        &#125;\n        <span class=\"hljs-built_in\">dfs</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>);\n\n        <span class=\"hljs-built_in\">write</span>(<span class=\"hljs-built_in\">max</span>(g[<span class=\"hljs-number\">1</span>], f[<span class=\"hljs-number\">1</span>] + c[<span class=\"hljs-number\">1</span>]));\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<p>+++</p>\n<h1 id=\"poi2014-zal-freight\"><a class=\"markdownIt-Anchor\" href=\"#poi2014-zal-freight\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDM1ODA=\">POI2014 ZAL-Freight</span></h1>\n<h2 id=\"题面翻译-5\"><a class=\"markdownIt-Anchor\" href=\"#题面翻译-5\"></a> 题面翻译</h2>\n<p>Upper Bytown和Lower Bytown的火车站通过一条轨道铁路连接。</p>\n<p>沿任何一个方向在它们之间行驶都需要s分钟。</p>\n<p>但是，离开车站的火车必须至少间隔一分钟。</p>\n<p>而且，在任何时候，铁路上的所有列车都必须朝同一方向行驶。</p>\n<p>根据我们的时间表，前往下拜镇的n列货运列车将通过上拜镇。 他们将在下拜敦装载货物，然后返回上拜敦。 为简单起见，我们假设将货物装载到火车上几乎不需要时间。</p>\n<p>我们将确定最后一班火车返回Upper Bytown的最短时间。</p>\n<p><strong>两个车站发车都必须至少间隔一分钟。</strong></p>\n<h2 id=\"分析-6\"><a class=\"markdownIt-Anchor\" href=\"#分析-6\"></a> 分析</h2>\n<p>对于这个题，我们考虑对时间的影响是每一波发车时放了多少车，那么我们可以设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> 为以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 结尾的最后一波车最早能到的时间，枚举 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> ，转移即为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo stretchy=\"false\">(</mo><mi>m</mi><mi>a</mi><mi>x</mi><mrow><mo stretchy=\"false\">(</mo><msub><mi>t</mi><mi>i</mi></msub><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>i</mi><mo>+</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><mo>+</mo><mn>2</mn><mo>×</mo><mi>s</mi><mo>+</mo><mi>i</mi><mo>−</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">f[i] = min{(max{(t_i, f[j] + i + j - 1)} + 2 \\times s + i - j - 1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span> 。其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">t_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的发车时间，直接转移肯定是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 的，考虑怎么优化。</p>\n<p>当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>&gt;</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>i</mi><mo>−</mo><mi>j</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">t_i &gt; f[j] + i - j - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 时，那么转移方程为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><msub><mi>t</mi><mi>i</mi></msub><mo>+</mo><mn>2</mn><mo>×</mo><mi>s</mi><mo>+</mo><mi>i</mi><mo>−</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">f[i] = min{(f[i], t_i + 2 \\times s + i - j - 1)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></span> ，将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"script\">m</mi><mi>i</mi><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">\\mathcal min</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span></span></span></span> 拆开，若当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 比 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 更优，需要满足</p>\n<p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: alignat* at position 7: \\begin{̲a̲l̲i̲g̲n̲a̲t̲*̲}̲{6}\nt_i+2 \\time…'>\\begin{alignat*}{6}\nt_i+2 \\times s + i - j - 1 &amp;&gt; t_i + 2 \\times s + i - k - 1 \\\\\n-j&amp;&gt;-k\\\\\n\\end{alignat*}\n</p>\n<p>当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>t</mi><mi>i</mi></msub><mo>&gt;</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>i</mi><mo>−</mo><mi>j</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">t_i &gt; f[j] + i - j - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76508em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 时，那么转移方程为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mrow><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mn>2</mn><mo>×</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mo>+</mo><mi>i</mi><mo>−</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">f[i] = min{(f[j] + 2 \\times (s + i - j - 1))}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></span> ，同样我们拆开</p>\n<p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: alignat* at position 7: \\begin{̲a̲l̲i̲g̲n̲a̲t̲*̲}̲{6}\nf[j] + 2 \\t…'>\\begin{alignat*}{6}\nf[j] + 2 \\times (s + i - j - 1) &amp;&gt; f[k] + 2 \\times (s + i - j - 1)\\\\\nf[j] - 2 \\times j &amp;&gt; f[k] - 2 \\times k\n\\end{alignat*}\n</p>\n<p>所以我们直接拿单调队列维护一下就行了</p>\n<p>+++danger 代码</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> int long long</span>\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>, INF = <span class=\"hljs-number\">0x7f7f7f7f</span>;\n\n    <span class=\"hljs-type\">int</span> n, S;\n    <span class=\"hljs-type\">int</span> q[N], hh, tt;\n    <span class=\"hljs-type\">int</span> t[N], f[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(S);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n            <span class=\"hljs-built_in\">read</span>(t[i]), f[i] = INF;\n        std :: <span class=\"hljs-built_in\">sort</span>(t + <span class=\"hljs-number\">1</span>, t + n + <span class=\"hljs-number\">1</span>);\n        t[<span class=\"hljs-number\">0</span>] = <span class=\"hljs-number\">-1</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n            t[i] = <span class=\"hljs-built_in\">max</span>(t[i], t[i - <span class=\"hljs-number\">1</span>] + <span class=\"hljs-number\">1</span>);\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-keyword\">while</span>(hh &lt; tt &amp;&amp; f[q[hh]] - q[hh] &lt; t[i] - i + <span class=\"hljs-number\">1</span>)\n                ++ hh;\n            f[i] = <span class=\"hljs-built_in\">min</span>(f[i], f[q[hh]] + <span class=\"hljs-number\">2</span> * (S + i - q[hh] - <span class=\"hljs-number\">1</span>));\n            f[i] = <span class=\"hljs-built_in\">min</span>(f[i], t[i] + <span class=\"hljs-number\">2</span> * S + i - q[hh - <span class=\"hljs-number\">1</span>] - <span class=\"hljs-number\">1</span>);\n            <span class=\"hljs-keyword\">while</span>(hh &lt; tt &amp;&amp; f[q[tt]] - <span class=\"hljs-number\">2</span> * q[tt] &gt; f[i] - <span class=\"hljs-number\">2</span> * i)\n                -- tt;\n            q[++ tt] = i;\n        &#125;\n\n        <span class=\"hljs-built_in\">write</span>(f[n]);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<p>+++</p>\n<h1 id=\"poi2004-prz\"><a class=\"markdownIt-Anchor\" href=\"#poi2004-prz\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDU5MTE=\">POI2004 PRZ</span></h1>\n<h2 id=\"题目背景\"><a class=\"markdownIt-Anchor\" href=\"#题目背景\"></a> 题目背景</h2>\n<p>一只队伍在爬山时碰到了雪崩，他们在逃跑时遇到了一座桥，他们要尽快的过桥。</p>\n<h2 id=\"题目描述-2\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-2\"></a> 题目描述</h2>\n<p>桥已经很旧了, 所以它不能承受太重的东西。任何时候队伍在桥上的人都不能超过一定的限制。 所以这只队伍过桥时只能分批过，当一组全部过去时，下一组才能接着过。队伍里每个人过桥都需要特定的时间，当一批队员过桥时时间应该算走得最慢的那一个，每个人也有特定的重量，我们想知道如何分批过桥能使总时间最少。</p>\n<h2 id=\"提示\"><a class=\"markdownIt-Anchor\" href=\"#提示\"></a> 提示</h2>\n<p>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>100</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">100\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>100</mn><mo>≤</mo><mi>W</mi><mo>≤</mo><mn>400</mn></mrow><annotation encoding=\"application/x-tex\">100\\le W \\le400</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8193em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">W</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">4</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span> ，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>16</mn></mrow><annotation encoding=\"application/x-tex\">1\\le n\\le 16</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">6</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>t</mi><mo>≤</mo><mn>50</mn></mrow><annotation encoding=\"application/x-tex\">1\\le t\\le50</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span><span class=\"mord\">0</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>10</mn><mo>≤</mo><mi>w</mi><mo>≤</mo><mn>100</mn></mrow><annotation encoding=\"application/x-tex\">10\\le w\\le100</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>。</p>\n<h2 id=\"分析-7\"><a class=\"markdownIt-Anchor\" href=\"#分析-7\"></a> 分析</h2>\n<p>算是一种比较常见的状压的题，对于这个我们可以将所有状态所要用的时间和重量预处理出来，那么我们枚举所有状态，然后再枚举这个状态的所有子集，判断一下重量是否合法即可。</p>\n<p>+++danger 代码</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> lim, n, tot;\n    <span class=\"hljs-type\">int</span> t[N], w[N], dp[N];\n    <span class=\"hljs-type\">int</span> <span class=\"hljs-type\">sum_t</span>[N], sum_w[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">memset</span>(dp, <span class=\"hljs-number\">0x3f</span>, <span class=\"hljs-built_in\">sizeof</span>(dp));\n        <span class=\"hljs-built_in\">read</span>(lim), <span class=\"hljs-built_in\">read</span>(n);\n\n        tot = (<span class=\"hljs-number\">1</span> &lt;&lt; n) - <span class=\"hljs-number\">1</span>;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n            <span class=\"hljs-built_in\">read</span>(t[i]), <span class=\"hljs-built_in\">read</span>(w[i]);\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span> ; i &lt;= tot ; ++ i)\n        &#123;\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span> ; j &lt;= n ; ++ j)\n            &#123;\n                <span class=\"hljs-keyword\">if</span>(i &amp; (<span class=\"hljs-number\">1</span> &lt;&lt; (j - <span class=\"hljs-number\">1</span>)))\n                &#123;\n                    <span class=\"hljs-type\">sum_t</span>[i] = <span class=\"hljs-built_in\">max</span>(<span class=\"hljs-type\">sum_t</span>[i], t[j]);\n                    sum_w[i] += w[j];\n                &#125;\n            &#125;\n        &#125;\n\n        dp[<span class=\"hljs-number\">0</span>] = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span> ; i &lt;= tot ; ++ i)\n        &#123;  \n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = i ; ; j = i &amp; (j - <span class=\"hljs-number\">1</span>))\n            &#123;\n                <span class=\"hljs-keyword\">if</span>(sum_w[i ^ j] &lt;= lim)\n                    dp[i] = <span class=\"hljs-built_in\">min</span>(dp[i], dp[j] + <span class=\"hljs-type\">sum_t</span>[i ^ j]);<span class=\"hljs-comment\">//, std :: cout &lt;&lt; dp[i] &lt;&lt; &quot; &quot; &lt;&lt; dp[j] &lt;&lt; &quot; zxc&quot; &lt;&lt; std :: endl;</span>\n                <span class=\"hljs-keyword\">if</span>(!j)\n                    <span class=\"hljs-keyword\">break</span>;\n            &#125;\n        &#125;\n\n        <span class=\"hljs-built_in\">write</span>(dp[tot]);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;D\n</code></pre>\n<p>+++</p>\n<h1 id=\"poi2014-pan-solar-panels\"><a class=\"markdownIt-Anchor\" href=\"#poi2014-pan-solar-panels\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDM1Nzk=\">POI2014 PAN-Solar Panels</span></h1>\n<h2 id=\"题目描述-3\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-3\"></a> 题目描述</h2>\n<p>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 组询问，每组询问给定四个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo separator=\"true\">,</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">a,b,c,d</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span></span></span></span>，从区间 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a,b]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">]</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>c</mi><mo separator=\"true\">,</mo><mi>d</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[c,d]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">c</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">]</span></span></span></span> 中任意选取两个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>，求 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\gcd(x,y)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\"><span style=\"margin-right:0.01389em;\">g</span>cd</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mclose\">)</span></span></span></span> 的最大值是多少。</p>\n<h2 id=\"分析-8\"><a class=\"markdownIt-Anchor\" href=\"#分析-8\"></a> 分析</h2>\n<p>首先我们考虑假如给定我们一个数，怎么判断这个数的倍数是否在这个区间出现过，稍微思考一下就能发现，假如区间为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">[</mo><mi>a</mi><mo separator=\"true\">,</mo><mi>b</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">[a,b]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mclose\">]</span></span></span></span> ，要判断的数为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 那么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">⌊</mo><mfrac><mi>a</mi><mi>k</mi></mfrac><mo stretchy=\"false\">⌋</mo><mo>&lt;</mo><mo stretchy=\"false\">⌊</mo><mfrac><mi>b</mi><mi>k</mi></mfrac><mo stretchy=\"false\">⌋</mo></mrow><annotation encoding=\"application/x-tex\">\\lfloor \\frac{a}{k} \\rfloor \\lt \\lfloor \\frac{b}{k} \\rfloor</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.095em;vertical-align:-0.345em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.695392em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">a</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.2251079999999999em;vertical-align:-0.345em;\"></span><span class=\"mopen\">⌊</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8801079999999999em;\"><span style=\"top:-2.6550000000000002em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">b</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">⌋</span></span></span></span> ，这个也很好理解，就是你要求这个区间必须出现一个他的倍数，那么显然需要左端点能出现的倍数的个数要大于右端点的倍数的个数，于是我们就会有一个比较直接的想法就是我们可以枚举每个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 然后判断是不是在这两个区间里，但是由于区间还是比较的打，所以我们可以直接枚举除完之后的约数，然后拿约数去求，这样复杂度就降到了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><msqrt><mi>a</mi></msqrt><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n\\sqrt{a})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.05028em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8002800000000001em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-2.76028em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.23972em;\"><span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> ，是能过的。</p>\n<p>+++danger 代码</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n\t<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n\t</span>&#123;\n\t\tx = <span class=\"hljs-number\">0</span>;\n\t\tT f = <span class=\"hljs-number\">1</span>;\n\t\t<span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n\t\t<span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n\t\t\t\tf = <span class=\"hljs-number\">-1</span>;\n\t\t\tch = <span class=\"hljs-built_in\">getchar</span>();\n\t\t&#125;\n\t\t<span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n\t\t\tx = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n\t\tx *= f;\n\t\t<span class=\"hljs-keyword\">return</span>;\n\t&#125;\n\n\t<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T, <span class=\"hljs-keyword\">typename</span>... Args&gt;\n\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;first, Args &amp;...args)</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-built_in\">read</span>(first);\n\t\t<span class=\"hljs-built_in\">read</span>(args...);\n\t&#125;\n\n\t<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n\t\t&#123;\n\t\t\tx = -x;\n\t\t\t<span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n\t\t&#125;\n\t\t<span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n\t\t\t<span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n\t\t<span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n\t&#125;\n\n\t<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n\t<span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n\t&#125;\n\n\t<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n\t<span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n\t&#125;\n\n\t<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n\t</span>&#123;\n\t\tT tem = b;\n\t\tb = a;\n\t\ta = tem;\n\t&#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n\t<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n\t<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>;\n\n\t<span class=\"hljs-type\">int</span> n, a, b, c, d;\n\n\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-built_in\">read</span>(n);\n\t\t<span class=\"hljs-keyword\">while</span>(n -- )\n\t\t&#123;\n\t\t\t<span class=\"hljs-type\">int</span> last, ans;\n\t\t\tlast = ans = <span class=\"hljs-number\">0</span>;\n\t\t\t<span class=\"hljs-built_in\">read</span>(a, b, c, d);\n\n\t\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= b &amp;&amp; i &lt;= d ; i = last + <span class=\"hljs-number\">1</span>)\n\t\t\t&#123;\n\t\t\t\tlast = <span class=\"hljs-built_in\">min</span>(b / (b / i), d / (d / i));\n\t\t\t\t<span class=\"hljs-keyword\">if</span>(b / (last) &gt; (a - <span class=\"hljs-number\">1</span>) / last &amp;&amp; d / last &gt; (c - <span class=\"hljs-number\">1</span>) / last)\n\t\t\t\t\tans = last;\n\t\t\t&#125;\n\t\t\t\n\t\t\t<span class=\"hljs-built_in\">write</span>(ans), <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;&quot;</span>);\n\t\t&#125;\n\t&#125; \n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n\tSolve :: <span class=\"hljs-built_in\">solve</span>();\n\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<p>+++</p>\n<h1 id=\"poi2010-cho-hamsters\"><a class=\"markdownIt-Anchor\" href=\"#poi2010-cho-hamsters\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDM1MDI=\">POI2010 CHO-Hamsters</span></h1>\n<h2 id=\"题面翻译-6\"><a class=\"markdownIt-Anchor\" href=\"#题面翻译-6\"></a> 题面翻译</h2>\n<p>给出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个互不包含的字符串，要求你求出一个最短的字符串 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span>，使得这 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个字符串在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 中总共至少出现 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 次，问 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi></mrow><annotation encoding=\"application/x-tex\">S</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span></span></span></span> 最短是多少。</p>\n<h2 id=\"分析-9\"><a class=\"markdownIt-Anchor\" href=\"#分析-9\"></a> 分析</h2>\n<p>我们读完题干之后会有一个想要 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">dp</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{dp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.22222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">dp</span></span></span></span></span> 的冲动，然后怎么考虑，我们会发现给定的字符串是很少的，因此我们是可以提前计算出每个串后接其他串的长度，这里计在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">i</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61111em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">i</span></span></span></span></span> 串后接 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">j</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.22222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">j</span></span></span></span></span> 串所需要的长度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>e</mi><mi>n</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">len[i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> ，那么我们就会有一个非常暴力的转移，计 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span></span></span></span> 为拼了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">i</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{i}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61111em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">i</span></span></span></span></span> 个串，最后一个拼的串是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">j</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.22222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">j</span></span></span></span></span> ，那么转移即为</p>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>min</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>l</mi><mi>e</mi><mi>n</mi><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j] = \\min(f[i - 1][k] + len[k][j])</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">min</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span></span></span></span></p>\n</blockquote>\n<p>答案即为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>min</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>m</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\min(f[m][k])</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">min</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">m</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span></span></span></span> ，但是我们会发现复杂度是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>m</mi><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(mn^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">m</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 的，而且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">m</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{m}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">m</span></span></span></span></span> 非常的大，那么我们要考虑优化，我们再看看我们暴力转移的代码是怎么写的</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">2</span> ; i &lt;= m ; ++ i)\n\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span> ; j &lt;= n ; ++ j)\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> k = <span class=\"hljs-number\">1</span> ; k &lt;= n ; ++ k)\n            f[i][j] = <span class=\"hljs-built_in\">min</span>(f[i][j], f[i - <span class=\"hljs-number\">1</span>][k] + len[k][j]);\n</code></pre>\n<p>我们会感觉这个式子有点像矩阵的形式，那么我们就可以尝试使用矩阵加速来优化这个转移的过程，由于我们要进行 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">m-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 次这个转移（因为一开始 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[1][i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> 的就是原串长度，不用进行转移），那么我们直接对其求个快速幂即可。</p>\n<p>+++danger 代码</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n\t<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n\t</span>&#123;\n\t\tx = <span class=\"hljs-number\">0</span>;\n\t\tT f = <span class=\"hljs-number\">1</span>;\n\t\t<span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n\t\t<span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n\t\t\t\tf = <span class=\"hljs-number\">-1</span>;\n\t\t\tch = <span class=\"hljs-built_in\">getchar</span>();\n\t\t&#125;\n\t\t<span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n\t\t\tx = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n\t\tx *= f;\n\t\t<span class=\"hljs-keyword\">return</span>;\n\t&#125;\n\n\t<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T, <span class=\"hljs-keyword\">typename</span>... Args&gt;\n\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;first, Args &amp;...args)</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-built_in\">read</span>(first);\n\t\t<span class=\"hljs-built_in\">read</span>(args...);\n\t&#125;\n\n\t<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n\t<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n\t\t&#123;\n\t\t\tx = -x;\n\t\t\t<span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n\t\t&#125;\n\t\t<span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n\t\t\t<span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n\t\t<span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n\t&#125;\n\n\t<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n\t<span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n\t&#125;\n\n\t<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n\t<span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n\t&#125;\n\n\t<span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n\t</span>&#123;\n\t\tT tem = b;\n\t\tb = a;\n\t\ta = tem;\n\t&#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n\t<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n\t<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">120</span> + <span class=\"hljs-number\">6</span> + <span class=\"hljs-number\">81</span>, M = <span class=\"hljs-number\">1e5</span> + <span class=\"hljs-number\">10</span>, INF = <span class=\"hljs-number\">20071206</span>;\n\n\t<span class=\"hljs-type\">int</span> n, m;\n\t<span class=\"hljs-type\">long</span> <span class=\"hljs-type\">long</span> res = (<span class=\"hljs-type\">long</span> <span class=\"hljs-type\">long</span>) INF * <span class=\"hljs-number\">520</span> * <span class=\"hljs-number\">1314</span>;\n\t<span class=\"hljs-type\">int</span> len[N], ne[N][M];\n\t<span class=\"hljs-type\">char</span> str[N][M];\n\n\t<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Matrix</span>\n\t&#123;\n\t\t<span class=\"hljs-type\">long</span> <span class=\"hljs-type\">long</span> a[N][N];\n\n\t\tMatrix <span class=\"hljs-keyword\">operator</span> * (Matrix &amp;b)\n\t\t&#123;\n\t\t\tMatrix c;\n\t\t\tstd :: <span class=\"hljs-built_in\">fill</span>(c.a[<span class=\"hljs-number\">0</span>], c.a[<span class=\"hljs-number\">0</span>] + N * N, (<span class=\"hljs-type\">long</span> <span class=\"hljs-type\">long</span>) INF * <span class=\"hljs-number\">520</span> * <span class=\"hljs-number\">1314</span>);\n\n\t\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span> ; i &lt;= n ; ++ i)\t\n\t\t\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span> ; j &lt;= n ; ++ j)\n\t\t\t\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> k = <span class=\"hljs-number\">0</span> ; k &lt;= n ; ++ k)\n\t\t\t\t\t\tc.a[i][k] = <span class=\"hljs-built_in\">min</span>(c.a[i][k], a[i][j] + b.a[j][k]);\n\t\t\t<span class=\"hljs-keyword\">return</span> c;\n\t\t&#125;\n\t&#125; ans, temp;\n\n\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-built_in\">read</span>(n, m);\n\t\ttemp.a[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>] = (<span class=\"hljs-type\">long</span> <span class=\"hljs-type\">long</span>) INF * <span class=\"hljs-number\">520</span> * <span class=\"hljs-number\">1314</span>;\n\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n\t\t\t<span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%s&quot;</span>, str[i] + <span class=\"hljs-number\">1</span>), len[i] = <span class=\"hljs-built_in\">strlen</span>(str[i] + <span class=\"hljs-number\">1</span>);\n\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> id = <span class=\"hljs-number\">1</span> ; id &lt;= n ; ++ id)    <span class=\"hljs-comment\">//kmp预处理</span>\n\t\t&#123;\n\t\t\t<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span>;\n\t\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">2</span> ; i &lt;= len[id] ; ++ i)\n\t\t\t&#123;\n\t\t\t\t<span class=\"hljs-keyword\">while</span>(j &amp;&amp; str[id][j + <span class=\"hljs-number\">1</span>] != str[id][i])\n\t\t\t\t\tj = ne[id][j];\n\t\t\t\t<span class=\"hljs-keyword\">if</span>(str[id][j + <span class=\"hljs-number\">1</span>] == str[id][i])\n\t\t\t\t\t++ j;\n\t\t\t\tne[id][i] = j;\n\t\t\t&#125;\n\t\t&#125;\n\n\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> cur1 = <span class=\"hljs-number\">1</span> ; cur1 &lt;= n ; ++ cur1)   <span class=\"hljs-comment\">//处理两两拼接之后的长度</span>\n\t\t&#123;\n\t\t\ttemp.a[cur1][<span class=\"hljs-number\">0</span>] = (<span class=\"hljs-type\">long</span> <span class=\"hljs-type\">long</span>) INF * <span class=\"hljs-number\">520</span> * <span class=\"hljs-number\">1314</span>;\n\t\t\ttemp.a[<span class=\"hljs-number\">0</span>][cur1] = len[cur1];\n\t\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> cur2 = <span class=\"hljs-number\">1</span> ; cur2 &lt;= n ; ++ cur2)\n\t\t\t&#123;\n\t\t\t\t<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span>;\n\t\t\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">2</span> ; i &lt;= len[cur1] ; ++ i)\n\t\t\t\t&#123;\n\t\t\t\t\t<span class=\"hljs-keyword\">while</span>(j &amp;&amp; str[cur2][j + <span class=\"hljs-number\">1</span>] != str[cur1][i])\n\t\t\t\t\t\tj = ne[cur2][j];\n\t\t\t\t\t<span class=\"hljs-keyword\">if</span>(str[cur2][j + <span class=\"hljs-number\">1</span>] == str[cur1][i])\n\t\t\t\t\t\t++ j;\n\t\t\t\t\t<span class=\"hljs-keyword\">if</span>(i == len[cur1])\n\t\t\t\t\t\ttemp.a[cur1][cur2] = len[cur2] - j;\n\t\t\t\t&#125;\n\t\t\t&#125;\n\t\t&#125;\n\n\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span> ; i &lt;= n ; ++ i)\n\t\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span> ; j &lt;= n ; ++ j)\n\t\t\t\tans.a[i][j] = temp.a[i][j];\n\t\tm --;\n\t\t<span class=\"hljs-keyword\">while</span>(m)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span>(m &amp; <span class=\"hljs-number\">1</span>)\n\t\t\t\tans = ans * temp;\n\t\t\tm &gt;&gt;= <span class=\"hljs-number\">1</span>;\n\t\t\ttemp = temp * temp;\n\t\t&#125;\n\n\t\t<span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n\t\t\tres = <span class=\"hljs-built_in\">min</span>(res, ans.a[<span class=\"hljs-number\">0</span>][i]);\n\t\t<span class=\"hljs-built_in\">write</span>(res);\n\t&#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n\tSolve :: <span class=\"hljs-built_in\">solve</span>();\n\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<p>+++</p>\n<h1 id=\"終わりrainbow\"><a class=\"markdownIt-Anchor\" href=\"#終わりrainbow\"></a> [終わり]{.rainbow}</h1>\n<p>以后有可能会更新吧，谁知道呢</p>\n",
            "tags": [
                "学习笔记",
                "学习笔记"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/09/02/Noi2009-tree/",
            "url": "https://undead-fire-ace.github.io/2023/09/02/Noi2009-tree/",
            "title": "NOI2009 二叉查找树",
            "date_published": "2023-09-02T14:10:18.000Z",
            "content_html": "<p>一篇题解</p>\n<span id=\"more\"></span>\n<h1 id=\"noi2009-二叉查找树\"><a class=\"markdownIt-Anchor\" href=\"#noi2009-二叉查找树\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDE4NjQ=\">NOI2009 二叉查找树</span></h1>\n<h2 id=\"题目描述\"><a class=\"markdownIt-Anchor\" href=\"#题目描述\"></a> 题目描述</h2>\n<p>已知一棵特殊的二叉查找树。根据定义，该二叉查找树中每个结点的数据值都比它左儿子结点的数据值大，而比它右儿子结点的数据值小。</p>\n<p>另一方面，这棵查找树中每个结点都有一个权值，每个结点的权值都比它的儿子结点的权值要小。</p>\n<p>已知树中所有结点的数据值各不相同；所有结点的权值也各不相同。这时可得出这样一个有趣的结论：如果能够确定树中每个结点的数据值和权值，那么树的形态便可以唯一确定。因为这样的一棵树可以看成是按照权值从小到大顺序插入结点所得到的、按照数据值排序的二叉查找树。</p>\n<p>一个结点在树中的深度定义为它到树根的距离加 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>。因此树的根结点的深度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>。</p>\n<p>每个结点除了数据值和权值以外，还有一个访问频度。我们定义一个结点在树中的访问代价为它的访问频度乘以它在树中的深度。整棵树的访问代价定义为所有结点在树中的访问代价之和。</p>\n<p>现在给定每个结点的数据值、权值和访问频度，你可以根据需要修改某些结点的权值，但每次修改你会付出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 的额外修改代价。你可以把结点的权值改为任何实数，但是修改后所有结点的权值必须仍保持互不相同。现在你要解决的问题是，整棵树的访问代价与额外修改代价的和最小是多少？</p>\n<h2 id=\"输入格式\"><a class=\"markdownIt-Anchor\" href=\"#输入格式\"></a> 输入格式</h2>\n<p>输入文件中的第一行为两个正整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo separator=\"true\">,</mo><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">N,K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span>。其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 表示结点的个数，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 表示每次修改所需的额外修改代价。</p>\n<p>接下来的一行为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 个非负整数，表示每个结点的数据值。</p>\n<p>再接下来的一行为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 个非负整数，表示每个结点的权值。</p>\n<p>再接下来的一行为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 个非负整数，表示每个结点的访问频度。</p>\n<p>其中：所有的数据值、权值、访问频度均不超过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>4</mn><mo>×</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding=\"application/x-tex\">4 \\times 10^5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span></span></span>。</p>\n<h2 id=\"输出格式\"><a class=\"markdownIt-Anchor\" href=\"#输出格式\"></a> 输出格式</h2>\n<p>输出文件中仅一行为一个数，即你所能得到的整棵树的访问代价与额外修改代价之和的最小值。</p>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\"></a> 分析</h2>\n<p>首先读完这个题是有个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">dp</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{dp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.22222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">dp</span></span></span></span></span> 的冲动的，但是有了这个修改权值从而导致树进行了左旋和右旋使得我们无从下手，<s>那么我们熟练的打开题解(bushi</s>。我们再看一下这个树的结构，他说数据值小的再上面，那么我们直接从小到大排序一遍先把树的大体结构给整出来，我们继续想他这个修改操作，对于一个点，我们是可以将其点值修改成任意实数，既然这样的话，我们想要修改点直接取小数点后无数位就行，所有我们实际上是可以随便调整大小关系也就是父子关系，那么我们这个不能有相同权值的限制实际上就没有了。接着看我们怎么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">dp</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span></span></span></span> 啊，感觉还是比较难搞，我们再仔细想想这个树，<s>啪的一下很快啊</s>，我们发现这个树的中序遍历不管怎么变换时不会改变的，那么就来了，我们可以对这个中序遍历得到的序列进行 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">dp</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{dp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.22222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">dp</span></span></span></span></span> 了，那么现在局势就明朗多了，我们可以设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j][k]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span></span></span></span> 为在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 这个区间内的数构成了一棵树，且每个点的权值都大于等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 的花费的最小的代价，计 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">sum[i]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span></span></span></span> 为到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 的频度值的前缀和$。</p>\n<p>然后考虑转移，首先我们枚举到的点要满足他的点值是要大于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 的，因为这是我们这个式子的定义啊。如果当前的点不做调整，那么转移的式子就是</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><msub><mi>w</mi><mi>t</mi></msub><mo stretchy=\"false\">]</mo><mo>+</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><msub><mi>w</mi><mi>t</mi></msub><mo stretchy=\"false\">]</mo><mo>+</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j][k] = min(f[i][j][k], f[i][t - 1][w_t] + f[t + 1][j][w_t] + (sum[j] - sum[i - 1]))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<p>其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span> 为当前枚举到的点，至于为啥我们要加区间的频度和，待会说完所有的转移方程后一起说，我们如果是修改的话也是非常的好想到就是</p>\n<ul>\n<li><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo separator=\"true\">,</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><msub><mi>w</mi><mi>t</mi></msub><mo stretchy=\"false\">]</mo><mo>+</mo><mi>f</mi><mo stretchy=\"false\">[</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><msub><mi>w</mi><mi>t</mi></msub><mo stretchy=\"false\">]</mo><mo>+</mo><mi>k</mi><mo>+</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo>−</mo><mi>s</mi><mi>u</mi><mi>m</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">f[i][j][k] = min(f[i][j][k], f[i][t - 1][w_t] + f[t + 1][j][w_t] + k + (sum[j] - sum[i - 1]))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2805559999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">u</span><span class=\"mord mathnormal\">m</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span></li>\n</ul>\n<p>然后就是这个加频度的东西了，其实我们模拟下这个转移的过程，我们会发现我们是每个点多递归一层，那么他的频度值就会多贡献一次，然后我们每次是从小区间到大区间，如果之前一个点被计算过那么后面将其深度降低时会再加一次，那么我们的深度贡献实际上就可以被保证了，对于求区间和相信不用我多说，直接上前缀和即可。</p>\n<p>对了，初状态直接设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>k</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">f[i][i - 1][k] = 0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span>，剩下的是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>I</mi><mi>N</mi><mi>F</mi></mrow><annotation encoding=\"application/x-tex\">INF</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">F</span></span></span></span> 即可，答案即为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi><mo stretchy=\"false\">[</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>n</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mn>1</mn><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">f[1][n][1]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord\">1</span><span class=\"mclose\">]</span></span></span></span></p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">120</span>;\n\n    <span class=\"hljs-type\">int</span> n, K;\n    <span class=\"hljs-type\">int</span> a[N], f[N][N][N];\n    <span class=\"hljs-type\">int</span> sum[N];\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Node</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> val, w, fre;\n\n        <span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span> &lt; (<span class=\"hljs-type\">const</span> Node &amp; a) <span class=\"hljs-type\">const</span> &#123;<span class=\"hljs-keyword\">return</span> val &lt; a.val; &#125;\n    &#125; node[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(K);\n        <span class=\"hljs-built_in\">memset</span>(f, <span class=\"hljs-number\">0x3f</span>, <span class=\"hljs-built_in\">sizeof</span>(f));\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n            <span class=\"hljs-built_in\">read</span>(node[i].val);\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-type\">int</span> x;\n            <span class=\"hljs-built_in\">read</span>(x);\n            a[i] = node[i].w = x;\n        &#125;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n            <span class=\"hljs-built_in\">read</span>(node[i].fre);\n        std :: <span class=\"hljs-built_in\">sort</span>(a + <span class=\"hljs-number\">1</span>, a + n + <span class=\"hljs-number\">1</span>);\n        std :: <span class=\"hljs-built_in\">sort</span>(node + <span class=\"hljs-number\">1</span>, node + n + <span class=\"hljs-number\">1</span>);\n        \n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            node[i].w = std :: <span class=\"hljs-built_in\">lower_bound</span>(a + <span class=\"hljs-number\">1</span>, a + n + <span class=\"hljs-number\">1</span>, node[i].w) - a;\n            sum[i] = sum[i - <span class=\"hljs-number\">1</span>] + node[i].fre;\n        &#125;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n + <span class=\"hljs-number\">1</span> ; ++ i)\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> k = <span class=\"hljs-number\">1</span> ; k &lt;= n ; ++ k)\n                f[i][i - <span class=\"hljs-number\">1</span>][k] = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = n ; i &gt;= <span class=\"hljs-number\">1</span> ; -- i)\n        &#123;\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = i ; j &lt;= n ; ++ j)\n            &#123;\n                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> k = <span class=\"hljs-number\">1</span> ; k &lt;= n ; ++ k)\n                &#123;\n                    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> t = i ; t &lt;= j ; ++ t)\n                    &#123;\n                        <span class=\"hljs-keyword\">if</span>(node[t].w &gt;= k)\n                            f[i][j][k] = <span class=\"hljs-built_in\">min</span>(f[i][j][k], f[i][t - <span class=\"hljs-number\">1</span>][node[t].w] + f[t + <span class=\"hljs-number\">1</span>][j][node[t].w] + sum[j] - sum[i - <span class=\"hljs-number\">1</span>]);\n                        f[i][j][k] = <span class=\"hljs-built_in\">min</span>(f[i][j][k], f[i][t - <span class=\"hljs-number\">1</span>][k] + f[t + <span class=\"hljs-number\">1</span>][j][k] + K + sum[j] - sum[i - <span class=\"hljs-number\">1</span>]);\n                    &#125;\n                &#125;\n            &#125;\n        &#125;\n\n        <span class=\"hljs-built_in\">write</span>(f[<span class=\"hljs-number\">1</span>][n][<span class=\"hljs-number\">1</span>]);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n",
            "tags": [
                "动态规划",
                "区间dp",
                "题解",
                "题解",
                "动态规划",
                "区间dp"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/08/30/shanqi/",
            "url": "https://undead-fire-ace.github.io/2023/08/30/shanqi/",
            "title": "SDOI2008 山贼集团 题解",
            "date_published": "2023-08-30T10:16:51.000Z",
            "content_html": "<p>一篇为了纪念一个人而写的题解</p>\n<span id=\"more\"></span>\n<h1 id=\"sdoi2008-山贼集团\"><a class=\"markdownIt-Anchor\" href=\"#sdoi2008-山贼集团\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDI0NjU=\">SDOI2008 山贼集团</span></h1>\n<h2 id=\"题目描述\"><a class=\"markdownIt-Anchor\" href=\"#题目描述\"></a> 题目描述</h2>\n<p>某山贼集团在绿荫村拥有强大的势力。整个绿荫村由 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个连通的小村落组成，并且保证对于每两个小村落有且仅有一条简单路径相连。将小村落从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 至 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 编号，山贼集团的总部设在编号为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 的小村落中。</p>\n<p>山贼集团除了老大坐镇总部以外，其他的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> 个部门希望在村落的其他地方（洛谷注：其实也包括总部）建立分部。<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> 个分部可以在同一个小村落中建设，也可以分别建设在不同的小村落中，在不同的村落建设不同的分部需要花费不同的费用。</p>\n<p>每个分部到总部的路径称为这个部门的管辖范围，于是这 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> 个分部的管辖范围可能重叠，或者完全相同。当多个分部管辖同一个村落时，他们之间可能发生矛盾，从而损失一部分利益，也可能相互合作，从而获取一部分利益。</p>\n<p>请注意，如果相同的分部同时管辖多个村落，那么对于每个村落，都会计算一次收益损失/获取。</p>\n<p>现在请你编写一个程序，确定 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> 个分部的位置，使得山贼集团能够获得最大的收益。</p>\n<h2 id=\"输入格式\"><a class=\"markdownIt-Anchor\" href=\"#输入格式\"></a> 输入格式</h2>\n<p>输入的第一行有两个整数，分别代表村落数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 和山贼集团部门数量 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span>。</p>\n<p>第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 到第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 行，每行有两个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mo separator=\"true\">,</mo><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">x, y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span>，代表存在一条连接村落 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和村落 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的道路。</p>\n<p>第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n + 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 到第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">2n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">n</span></span></span></span> 行，每行 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> 个整数，第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>i</mi><mo>+</mo><mi>n</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(i + n)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span></span></span></span> 行的第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 个整数代表在第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个村落建设第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 个部门的花费 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">a_{i, j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>。</p>\n<p>第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(2n + 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 行有一个整数，代表集团间相互影响利益的信息条数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span>。</p>\n<p>第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mi>n</mi><mo>+</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(2n + 2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span> 行到第 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mn>2</mn><mi>n</mi><mo>+</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(2n + t + 1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span> 行，每行首先有一个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span>，若 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 为正，则表示会获得额外的收益，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 为负则表示会有损失。然后有一个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span>，代表涉及分部的数量。接下来有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span> 个整数，分别代表涉及的分部 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>。本条信息的含义为若这 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span> 个分部同时管辖某个小村落（可能同时存在其他分部管辖该村落），则会产生额外收益或损失，其数值大小为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∣</mi><mi>v</mi><mi mathvariant=\"normal\">∣</mi></mrow><annotation encoding=\"application/x-tex\">|v|</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord\">∣</span></span></span></span>。</p>\n<hr />\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\"></a> 分析</h2>\n<p>首先，我们来简化一下题意，给我一棵树，对于树上的每一个节点，可能被多种颜色覆盖，如果给一个点染上了色，则从该节点到根节点的路径上的所有点都会被染上这个颜色，同时每个节点都设置了一个权值，当且仅当该点的颜色的集合为给定的集合，同时给不同点的染不同的颜色的代价不同，要求出最大的收益，每个分部只能建造一次。</p>\n<p>我们肯定很快的就会有一个想要 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">dp</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{dp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.22222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">dp</span></span></span></span></span> 的冲动，我们又一看 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">p</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">p</span></span></span></span> 的数据范围，发现很小，同时我们想要获得权值需要满足一个集合，所以我们就会自然而然的产生一个想法，我们可以状压表示每个点的颜色状态，那么我们直接树上 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext mathvariant=\"monospace\">dp</mtext></mrow><annotation encoding=\"application/x-tex\">\\texttt{dp}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.22222em;\"></span><span class=\"mord text\"><span class=\"mord texttt\">dp</span></span></span></span></span>，枚举每个子节点的颜色的状态，然后合并。我们设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>s</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">dp[i][s]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">]</span></span></span></span> 为在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 号节点，其颜色状态为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi><mo stretchy=\"false\">[</mo><mi>s</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">val[s]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">]</span></span></span></span> 表示当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> 集合中的所有颜色染到一个点上的值，即当子树的颜色状态为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> 时对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 造成的影响。我们设新加入的子树的状态为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span>，加入前的状态为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span>，那么我们的转移方程为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>s</mi><mi mathvariant=\"normal\">∣</mi><mi>w</mi><mo stretchy=\"false\">]</mo><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy=\"false\">(</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>s</mi><mo stretchy=\"false\">]</mo><mo>+</mo><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>w</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">)</mo><mo>+</mo><mi>v</mi><mi>a</mi><mi>l</mi><mo stretchy=\"false\">[</mo><mi>s</mi><mi mathvariant=\"normal\">∣</mi><mi>w</mi><mo stretchy=\"false\">]</mo></mrow><annotation encoding=\"application/x-tex\">dp[i][s | w] = max(dp[i][s] + dp[j][w]) + val[s | w]</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">x</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">s</span><span class=\"mclose\">]</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mclose\">]</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mclose\">]</span></span></span></span> 。</p>\n<p>代码如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">100</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n, t, m;\n    <span class=\"hljs-type\">int</span> a[N], val[<span class=\"hljs-number\">1</span> &lt;&lt; <span class=\"hljs-number\">12</span>];\n    <span class=\"hljs-type\">int</span> h[N], dp[N][<span class=\"hljs-number\">1</span> &lt;&lt; <span class=\"hljs-number\">12</span>], idx;\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Edge</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> ne, v;\n    &#125; e[N &lt;&lt; <span class=\"hljs-number\">1</span>];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">add</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> v)</span>\n    </span>&#123;\n        e[++ idx].v = v, e[idx].ne = h[u], h[u] = idx;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">dp</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> fa)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = h[u] ; i ; i = e[i].ne)\n        &#123;\n            <span class=\"hljs-type\">int</span> v = e[i].v;\n            <span class=\"hljs-keyword\">if</span>(v == fa)\n                <span class=\"hljs-keyword\">continue</span>;\n            <span class=\"hljs-built_in\">dp</span>(v, u);\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = (<span class=\"hljs-number\">1</span> &lt;&lt; m) - <span class=\"hljs-number\">1</span> ; j ; -- j)   <span class=\"hljs-comment\">//枚举所有状态</span>\n                <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> k = j ; k ; k = (k - <span class=\"hljs-number\">1</span>) &amp; j)   <span class=\"hljs-comment\">//枚举子集</span>\n                    dp[u][j] = <span class=\"hljs-built_in\">max</span>(dp[u][j], dp[u][j ^ k] + dp[v][k]);\n        &#125;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = (<span class=\"hljs-number\">1</span> &lt;&lt; m) - <span class=\"hljs-number\">1</span> ; i ; -- i)  <span class=\"hljs-comment\">//每种状态加上路径的影响</span>\n            dp[u][i] += val[i];\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(m);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt; n ; ++ i)\n        &#123;\n            <span class=\"hljs-type\">int</span> u, v;\n            <span class=\"hljs-built_in\">read</span>(u), <span class=\"hljs-built_in\">read</span>(v);\n            <span class=\"hljs-built_in\">add</span>(u, v), <span class=\"hljs-built_in\">add</span>(v, u);\n        &#125;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span> ; j &lt;= m ; ++ j)\n                <span class=\"hljs-built_in\">read</span>(a[j]);\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span> ; j &lt; (<span class=\"hljs-number\">1</span> &lt;&lt; m) ; ++ j)    <span class=\"hljs-comment\">//在一开始就直接讲建造造成的影响减去</span>\n            &#123;\n                <span class=\"hljs-type\">int</span> lb = j &amp; -j;\n                <span class=\"hljs-type\">int</span> id = <span class=\"hljs-built_in\">log2</span>(lb) + <span class=\"hljs-number\">1.00001</span>;   <span class=\"hljs-comment\">//求最后一位1的位置</span>\n                dp[i][j] = dp[i][j ^ lb] - a[id];\n            &#125;\n        &#125;\n\n        <span class=\"hljs-built_in\">read</span>(t);\n        <span class=\"hljs-keyword\">while</span>(t -- )\n        &#123;\n            <span class=\"hljs-type\">int</span> v, cnt, sum = <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-built_in\">read</span>(v), <span class=\"hljs-built_in\">read</span>(cnt);\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span> ; j &lt;= cnt ; ++ j)\n            &#123;\n                <span class=\"hljs-type\">int</span> flag;\n                <span class=\"hljs-built_in\">read</span>(flag);\n                sum |= <span class=\"hljs-number\">1</span> &lt;&lt; (flag - <span class=\"hljs-number\">1</span>);\n            &#125;\n            \n            <span class=\"hljs-type\">int</span> mx = (<span class=\"hljs-number\">1</span> &lt;&lt; m) - <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-type\">int</span> tmp = sum ^ mx;\n            val[sum] += v;\n\n            <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> j = tmp ; j ; j = (j - <span class=\"hljs-number\">1</span>) &amp; tmp)   <span class=\"hljs-comment\">//预处理影响</span>\n                val[sum | j] += v;\n        &#125;\n        \n        <span class=\"hljs-built_in\">dp</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>);\n        <span class=\"hljs-built_in\">write</span>(dp[<span class=\"hljs-number\">1</span>][(<span class=\"hljs-number\">1</span> &lt;&lt; m) - <span class=\"hljs-number\">1</span>]);\n    &#125;   \n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<p>+++danger 无关紧要的东西<br />\n这道题写于2023.8.30，<s>没错就是赛马娘国服开服的那一天</s>，实际上没有做这道题没有任何特殊寓意，只是翻 dp 题的时候看到这个题目名的时候突然想起了一个人，然后才做这道题，反正不重要，无所谓了。（doge<br />\n+++</p>\n",
            "tags": [
                "题解",
                "动态规划",
                "题解",
                "动态规划"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/08/25/Fhq/",
            "url": "https://undead-fire-ace.github.io/2023/08/25/Fhq/",
            "title": "平衡树全家桶",
            "date_published": "2023-08-25T13:26:13.000Z",
            "content_html": "<p>学习笔记</p>\n<span id=\"more\"></span>\n<p>平衡树的种类很多，每种的平衡树的功能和效率也不尽相同，平时主要用的平衡树应该就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>r</mi><mi>e</mi><mi>a</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">treap</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span></span></span></span> 类的， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">splay</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> ，再带上替罪羊和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>p</mi><mi>b</mi><mi mathvariant=\"normal\">_</mi><mi>d</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">pb\\_ds</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.00444em;vertical-align:-0.31em;\"></span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">b</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">s</span></span></span></span> 也就差不多了，当然还有使用简便的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>e</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">set</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">t</span></span></span></span> （底层实现是红黑树，非常的快）。对于每种平衡树，他们都需要维护自身的平衡来保证复杂度。</p>\n<h1 id=\"treap族rainbow\"><a class=\"markdownIt-Anchor\" href=\"#treap族rainbow\"></a> [treap族]{.rainbow}</h1>\n<p>首先我们先看 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>r</mi><mi>e</mi><mi>a</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">treap</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span></span></span></span> 类的。</p>\n<h2 id=\"有旋treap\"><a class=\"markdownIt-Anchor\" href=\"#有旋treap\"></a> 有旋treap</h2>\n<h3 id=\"维护平衡的方式\"><a class=\"markdownIt-Anchor\" href=\"#维护平衡的方式\"></a> 维护平衡的方式</h3>\n<p>根据他的名字我们就知道他是通过旋转来维护平衡的，旋转分成左旋和右旋，同时为了防止特殊构造，我们普遍在写平衡树的时候，每个节点的键值是随机生成的。</p>\n<h3 id=\"旋转\"><a class=\"markdownIt-Anchor\" href=\"#旋转\"></a> 旋转</h3>\n<p>我们旋转的目的其实就是希望不改变树本身的结构，只改变每一层深度的节点的数量，以此来保证树高，那么我们的旋转分为左旋和右旋。左旋其实就是将某个点的右儿子给变成整棵树的根。右旋同理。</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">lrotate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> &amp;k)</span> \n</span>&#123;\n    <span class=\"hljs-type\">int</span> t = r[k];\n    r[k] = l[t];   <span class=\"hljs-comment\">//将儿子的左子树接到父亲的右子树上（因为我们是按照权值维护的平衡树）</span>\n    l[t] = k;    <span class=\"hljs-comment\">//将父亲设为左儿子</span>\n    size_[t] = size_[k];    <span class=\"hljs-comment\">//我们让右儿子继承之前为根的父亲的siz</span>\n    <span class=\"hljs-built_in\">pushup</span>(k);   <span class=\"hljs-comment\">//更新siz</span>\n    k = t;\n&#125;\n</code></pre>\n<h3 id=\"插入\"><a class=\"markdownIt-Anchor\" href=\"#插入\"></a> 插入</h3>\n<p>插入操作比较的常规，就直接按照权值递归的左右子树，然后插入完成后，如果不满足堆的性质就通过旋转来维护即可</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">insert</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> &amp;k, <span class=\"hljs-type\">int</span> x)</span> \n</span>&#123;\n    <span class=\"hljs-keyword\">if</span> (!k) \n    &#123;\n        sz++;\n        k = sz;\n        size_[k] = w[k] = <span class=\"hljs-number\">1</span>;\n        val[k] = x, rnd[k] = <span class=\"hljs-built_in\">rand</span>();\n      <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    size_[k]++;\n    <span class=\"hljs-keyword\">if</span> (val[k] == x) \n        w[k]++;\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (val[k] &lt; x) \n    &#123;\n        <span class=\"hljs-built_in\">insert</span>(r[k], x);\n        <span class=\"hljs-keyword\">if</span> (rnd[r[k]] &lt; rnd[k]) <span class=\"hljs-built_in\">lrotate</span>(k);  <span class=\"hljs-comment\">//插入后不满足堆的性质就旋转</span>\n    &#125; \n    <span class=\"hljs-keyword\">else</span> \n    &#123;\n        <span class=\"hljs-built_in\">insert</span>(l[k], x);\n        <span class=\"hljs-keyword\">if</span> (rnd[l[k]] &lt; rnd[k]) <span class=\"hljs-built_in\">rrotate</span>(k);\n    &#125;\n&#125;\n</code></pre>\n<h3 id=\"删除\"><a class=\"markdownIt-Anchor\" href=\"#删除\"></a> 删除</h3>\n<p>删除比插入要稍微复杂一些，有因为删除后涉及到儿子的更换问题，所有我们删去儿子的时候需要判断我们应该让谁当删去的点的父亲的哪个儿子，其实就是一个分类讨论。按照权值维护好结构后，还要通过旋转维护堆的性质。</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">del</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> &amp;k, <span class=\"hljs-type\">int</span> x)</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span> (!k)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;\n    <span class=\"hljs-keyword\">if</span> (val[k] == x)\n    &#123;\n        <span class=\"hljs-keyword\">if</span> (w[k] &gt; <span class=\"hljs-number\">1</span>)\n        &#123;\n            w[k]--;\n            size_[k]--;\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (l[k] == <span class=\"hljs-number\">0</span> || r[k] == <span class=\"hljs-number\">0</span>)\n        &#123;\n            k = l[k] + r[k];\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n        &#125;\n        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (rnd[l[k]] &lt; rnd[r[k]])\n        &#123;\n            <span class=\"hljs-built_in\">rrotate</span>(k);\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">del</span>(k, x);\n        &#125;\n        <span class=\"hljs-keyword\">else</span>\n        &#123;\n            <span class=\"hljs-built_in\">lrotate</span>(k);\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">del</span>(k, x);\n        &#125;\n    &#125;\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (val[k] &lt; x)\n    &#123;\n        <span class=\"hljs-type\">bool</span> succ = <span class=\"hljs-built_in\">del</span>(r[k], x);\n        <span class=\"hljs-keyword\">if</span> (succ)\n            size_[k]--;\n        <span class=\"hljs-keyword\">return</span> succ;\n    &#125;\n    <span class=\"hljs-keyword\">else</span>\n    &#123;\n        <span class=\"hljs-type\">bool</span> succ = <span class=\"hljs-built_in\">del</span>(l[k], x);\n        <span class=\"hljs-keyword\">if</span> (succ)\n            size_[k]--;\n        <span class=\"hljs-keyword\">return</span> succ;\n    &#125;\n&#125;\n</code></pre>\n<h3 id=\"查询\"><a class=\"markdownIt-Anchor\" href=\"#查询\"></a> 查询</h3>\n<h4 id=\"查询排名按值查序\"><a class=\"markdownIt-Anchor\" href=\"#查询排名按值查序\"></a> 查询排名（按值查序）</h4>\n<p>查询以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 为根的子树中，值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的排名，直接根据值的关系去递归求解即可</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">queryrank</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> k, <span class=\"hljs-type\">int</span> x)</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span> (!k)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">if</span> (val[k] == x)\n        <span class=\"hljs-keyword\">return</span> size_[l[k]] + <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (x &gt; val[k])   <span class=\"hljs-comment\">//递归右子树，同时加上左子树的贡献</span>\n        <span class=\"hljs-keyword\">return</span> size_[l[k]] + w[k] + <span class=\"hljs-built_in\">queryrank</span>(r[k], x);\n    <span class=\"hljs-keyword\">else</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">queryrank</span>(l[k], x);\n&#125;\n</code></pre>\n<h4 id=\"查询值按序查值\"><a class=\"markdownIt-Anchor\" href=\"#查询值按序查值\"></a> 查询值（按序查值）</h4>\n<p>那么这时，我们就不能通过值的关系递归求解，而是根据树的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">siz</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> 来递归，代码大体一样，但是要注意递归到右子树时要减去左子树的贡献，因为左子树中已经占据了那么多的排名</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">querynum</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> k, <span class=\"hljs-type\">int</span> x)</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span> (!k)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">if</span> (x &lt;= size_[l[k]])\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">querynum</span>(l[k], x);\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (x &gt; size_[l[k]] + w[k])\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">querynum</span>(r[k], x - size_[l[k]] - w[k]);\n    <span class=\"hljs-keyword\">else</span>\n        <span class=\"hljs-keyword\">return</span> val[k];\n&#125;\n</code></pre>\n<h4 id=\"求前驱第一个比它小的值\"><a class=\"markdownIt-Anchor\" href=\"#求前驱第一个比它小的值\"></a> 求前驱（第一个比它小的值）</h4>\n<p>根据定义我们就直接找，当前点比这个值小就去找右子树，如果右子树中的值大于该值，那么前驱即为当前点，递归求解即可</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">querypre</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> k, <span class=\"hljs-type\">int</span> x)</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span> (!k)\n        <span class=\"hljs-keyword\">return</span>;\n    <span class=\"hljs-keyword\">if</span> (val[k] &lt; x)\n        ans = k, <span class=\"hljs-built_in\">querypre</span>(r[k], x);\n    <span class=\"hljs-keyword\">else</span>\n        <span class=\"hljs-built_in\">querypre</span>(l[k], x);\n&#125;\n</code></pre>\n<h4 id=\"求后继第一个比它大的值\"><a class=\"markdownIt-Anchor\" href=\"#求后继第一个比它大的值\"></a> 求后继（第一个比它大的值）</h4>\n<p>同理，就直接放代码了</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">querysub</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> k, <span class=\"hljs-type\">int</span> x)</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span> (!k)\n        <span class=\"hljs-keyword\">return</span>;\n    <span class=\"hljs-keyword\">if</span> (val[k] &gt; x)\n        ans = k, <span class=\"hljs-built_in\">querysub</span>(l[k], x);\n    <span class=\"hljs-keyword\">else</span>\n        <span class=\"hljs-built_in\">querysub</span>(r[k], x);\n&#125;\n</code></pre>\n<p>至此为止无旋 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>r</mi><mi>e</mi><mi>a</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">treap</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span></span></span></span> 就结束了，功能还是非常全的，常数也不是很大。</p>\n<h2 id=\"无旋treap-fhq-treap-rainbow\"><a class=\"markdownIt-Anchor\" href=\"#无旋treap-fhq-treap-rainbow\"></a> [无旋treap (Fhq treap) !!!]{.rainbow}</h2>\n<p>这种平衡树是我最喜欢的，他的思路更好理解，常数也是非常的优秀，而且核心操作少，但是仅仅通过两个核心操作就可以实现许多功能。</p>\n<h3 id=\"维护平衡的方式-2\"><a class=\"markdownIt-Anchor\" href=\"#维护平衡的方式-2\"></a> 维护平衡的方式</h3>\n<p>既然他都叫无旋 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>r</mi><mi>e</mi><mi>a</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">treap</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span></span></span></span> 了，肯定不是通过旋转维护的平衡，而是通过分裂和合并来维护，那么这也就为他可持久化埋下了伏笔。</p>\n<h3 id=\"分裂splitrainbow\"><a class=\"markdownIt-Anchor\" href=\"#分裂splitrainbow\"></a> [分裂(Split)]{.rainbow}</h3>\n<h4 id=\"按照值的大小进行分裂rainbow\"><a class=\"markdownIt-Anchor\" href=\"#按照值的大小进行分裂rainbow\"></a> [按照值的大小进行分裂]{.rainbow}</h4>\n<p>我们传入分裂依据的值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">val</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> ，那么我们在执行完分裂的操作的时候是会得到两棵树，一颗树的所有值都小于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">val</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> ，另外一棵全都大于等于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi><mi>a</mi><mi>l</mi></mrow><annotation encoding=\"application/x-tex\">val</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span></span></span></span> 。</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">split_v</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> pos, <span class=\"hljs-type\">int</span> k, <span class=\"hljs-type\">int</span> &amp;l, <span class=\"hljs-type\">int</span> &amp;r)</span>  <span class=\"hljs-comment\">//l 和 r是我们分裂后得到的两个根</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span> (!pos)\n    &#123;\n        l = r = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">return</span> ;\n    &#125;\n    <span class=\"hljs-keyword\">else</span> \n    &#123;\n        <span class=\"hljs-keyword\">if</span> (tr[pos].val &lt;= k)\n            l = pos, <span class=\"hljs-built_in\">split_v</span>(tr[pos].r, k, tr[pos].r, r);\n        <span class=\"hljs-keyword\">else</span>\n            r = pos, <span class=\"hljs-built_in\">split_v</span>(tr[pos].l, k, l, tr[pos].l);\n    &#125;\n    <span class=\"hljs-built_in\">update</span>(pos);\n&#125;\n</code></pre>\n<h4 id=\"按照子树的大小进行分裂rainbow\"><a class=\"markdownIt-Anchor\" href=\"#按照子树的大小进行分裂rainbow\"></a> [按照子树的大小进行分裂]{.rainbow}</h4>\n<p>我们会得到两棵树（前提是整棵树足够大），然后一棵树是等于我们传入的参数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>i</mi><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">siz</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> ，另外一颗大小随意。</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">split_s</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> now, <span class=\"hljs-type\">int</span> k, <span class=\"hljs-type\">int</span> &amp;x, <span class=\"hljs-type\">int</span> &amp;y)</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span>(!now)\n    &#123;\n        x = y = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n    <span class=\"hljs-keyword\">if</span>(tr[tr[now].l].siz + <span class=\"hljs-number\">1</span> &lt;= k)\n    &#123;\n        x = now;\n        <span class=\"hljs-built_in\">split_s</span>(tr[now].r, k - tr[tr[now].l].siz - <span class=\"hljs-number\">1</span>, tr[x].r, y);\n        <span class=\"hljs-built_in\">update</span>(x);\n    &#125;\n    <span class=\"hljs-keyword\">else</span> \n    &#123;\n        y = now;\n        <span class=\"hljs-built_in\">split_s</span>(tr[now].l, k, y, tr[now].l);\n        <span class=\"hljs-built_in\">update</span>(y);\n    &#125;\n&#125;\n</code></pre>\n<h4 id=\"作用\"><a class=\"markdownIt-Anchor\" href=\"#作用\"></a> 作用</h4>\n<p>我们实现了上面两种形式的分裂那么有什么用呢？显然易见按值分裂时用来处理跟值有关的问题，比如求前驱后继啥的，按照子树分裂就是来处理排名啥的，当然这两种形式还有别的功能，这将会在 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>e</mi><mi>r</mi><mi>g</mi><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">merge</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathnormal\">e</span></span></span></span> 之后一起说。</p>\n<h3 id=\"合并mergerainbow\"><a class=\"markdownIt-Anchor\" href=\"#合并mergerainbow\"></a> [合并(merge)]{.rainbow}</h3>\n<p>合并就是将两棵树合并为一棵树，我们依旧要考虑树的平衡问题，但是我们会发现我们的树合并之后时保证平衡的，那么将两棵树合并的时候这两棵树也一定时平衡的，所以直接按照根节点的值的大小和堆的性质合并即可。</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">merge</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>   <span class=\"hljs-comment\">//这是返回根节点</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span>(!x || !y)  \n        <span class=\"hljs-keyword\">return</span> x | y;\n    <span class=\"hljs-keyword\">if</span>(tr[x].key &gt; tr[y].key) \n    &#123;\n        tr[x].r = <span class=\"hljs-built_in\">merge</span>(tr[x].r, y);\n        <span class=\"hljs-built_in\">update</span>(x);\n        <span class=\"hljs-keyword\">return</span> x;\n    &#125;\n\n    tr[y].l = <span class=\"hljs-built_in\">merge</span>(x, tr[y].l);\n    <span class=\"hljs-built_in\">update</span>(y);\n    <span class=\"hljs-keyword\">return</span> y;\n&#125;\n</code></pre>\n<h3 id=\"功能\"><a class=\"markdownIt-Anchor\" href=\"#功能\"></a> 功能</h3>\n<p>我们现在具备了合并和分裂两个核心操作，我们就可以搞更多的事情了。</p>\n<h4 id=\"插入rainbow\"><a class=\"markdownIt-Anchor\" href=\"#插入rainbow\"></a> [插入]{.rainbow}</h4>\n<p>插入操作也是可以分成两种类型的，一种是直接插入某个值，一个是在某个位置插入值，那么我们就直接分别按照对应形式分裂，最后再合并即可</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">insert_k</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> key)</span>   <span class=\"hljs-comment\">//插入一个值为key的数</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> x, y;\n    <span class=\"hljs-built_in\">split_v</span>(rt, key, x, y);\n    rt = <span class=\"hljs-built_in\">merge</span>(<span class=\"hljs-built_in\">merge</span>(x, <span class=\"hljs-built_in\">new_node</span>(key)), y);\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">inset_p</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> pos, <span class=\"hljs-type\">int</span> key)</span>   <span class=\"hljs-comment\">//在pos后插入一个数</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> x, y;\n    <span class=\"hljs-built_in\">split_s</span>(rt, pos, x, y);\n    rt = <span class=\"hljs-built_in\">merge</span>(<span class=\"hljs-built_in\">merge</span>(x, <span class=\"hljs-built_in\">new_node</span>(key)), y);\n&#125;\n</code></pre>\n<h4 id=\"删除rainbow\"><a class=\"markdownIt-Anchor\" href=\"#删除rainbow\"></a> [删除]{.rainbow}</h4>\n<p>有了插入当然还有删除操作，也是分两种，一个是直接删除某个值，一个是删除某个位置的值，也是根插入一个道理,当然也可以删除一个区间。</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">remove</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r)</span>   <span class=\"hljs-comment\">//删除一个区间</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> x, y, z;\n    <span class=\"hljs-built_in\">split_s</span>(rt, l - <span class=\"hljs-number\">1</span>, x, y), <span class=\"hljs-built_in\">split_s</span>(y, r - l + <span class=\"hljs-number\">1</span>, y, z);\n    rt = <span class=\"hljs-built_in\">merge</span>(x, z);\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">del</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> k)</span>   <span class=\"hljs-comment\">//删去一个数</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> x, y, z;\n    <span class=\"hljs-built_in\">split_v</span>(rt, k, x, y), <span class=\"hljs-built_in\">split_v</span>(y, k, y, z);\n    <span class=\"hljs-keyword\">if</span>(y)\n        y = <span class=\"hljs-built_in\">merge</span>(tr[y].l, tr[y].r);\n    rt = <span class=\"hljs-built_in\">merge</span>(<span class=\"hljs-built_in\">merge</span>(x, y), z);\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">remove_a</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> k)</span>   <span class=\"hljs-comment\">//删去所有值为k的数</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> x, y, z;\n    <span class=\"hljs-built_in\">split_v</span>(rt, k - <span class=\"hljs-number\">1</span>, x, y), <span class=\"hljs-built_in\">split_v</span>(y, k, y, z);\n    <span class=\"hljs-built_in\">merge</span>(x, z);\n&#125;\n</code></pre>\n<h4 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\"></a> 其他</h4>\n<p>还有各种查询，就按照需要什么区间就分裂啥区间，最后再对应操作即可，由于我们可以将一个区间分裂出来，那么我们做区间操作也就更加的方便。</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">get_k</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> k)</span>   <span class=\"hljs-comment\">//按值查序</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> dl, dr;\n    <span class=\"hljs-built_in\">split_v</span>(rt, k, dl, dr);\n    <span class=\"hljs-type\">int</span> rank = dl.siz + <span class=\"hljs-number\">1</span>;\n    rt = <span class=\"hljs-built_in\">merge</span>(dl, dr);\n    <span class=\"hljs-keyword\">return</span> rank;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">get_v</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> k)</span>  <span class=\"hljs-comment\">//按序查值</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> p = root;\n    <span class=\"hljs-keyword\">while</span>(p)\n    &#123;\n        <span class=\"hljs-keyword\">if</span>(tr[tr[p].l].siz + <span class=\"hljs-number\">1</span> == k)\n            <span class=\"hljs-keyword\">break</span>;\n        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(tr[tr[p].l].siz &gt;= k)\n            p = tr[p].l;\n        <span class=\"hljs-keyword\">else</span> \n        &#123;\n            k -= tr[tr[p].l].siz + <span class=\"hljs-number\">1</span>;\n            p = tr[p].r;\n        &#125;\n    &#125;\n    <span class=\"hljs-keyword\">return</span> tr[p].val\n&#125;\n</code></pre>\n<p>至此我们的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mi>r</mi><mi>e</mi><mi>a</mi><mi>p</mi></mrow><annotation encoding=\"application/x-tex\">treap</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">p</span></span></span></span> 家族就基本上讲完了</p>\n<h1 id=\"替罪羊树\"><a class=\"markdownIt-Anchor\" href=\"#替罪羊树\"></a> 替罪羊树</h1>\n<p>一种比较暴力的平衡树，为啥暴力呢？因为他的思想是不平衡就重构，但是这个不平衡是有忍耐度的，意思就是我们会设定一个系数，如果某个子树的系数超过设定的系数，就将这个子树给拆了重构，以此来维护平衡</p>\n<p>我们先构建一个权值平衡树，以及计算根节点的信息（将权值相同的点直接合并到一个点上）</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-type\">int</span> tot,             <span class=\"hljs-comment\">// 树中元素总数</span>\n    rt,              <span class=\"hljs-comment\">// 根节点，初值为 0 代表空树</span>\n    w[N],            <span class=\"hljs-comment\">// 点中的数据 / 权值</span>\n    l[N], r[N],      <span class=\"hljs-comment\">// 左右子树</span>\n    cnt[N],          <span class=\"hljs-comment\">// 本数据出现次数（为 0 代表已删除）</span>\n    s[N],            <span class=\"hljs-comment\">// 以本节点为根的子树大小（每个节点记 1 次）</span>\n    sz[N],           <span class=\"hljs-comment\">// 以本节点为根的子树大小（每个节点记 cnt[k] 次）</span>\n    del[N];          <span class=\"hljs-comment\">// 不计已删除节点的子树大小（每个节点记 1 次）</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">Cal</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> k)</span>   <span class=\"hljs-comment\">// 重新计算以 k 为根的子树大小</span>\n</span>&#123;\n    s[k] = s[l[k]] + s[r[k]] + <span class=\"hljs-number\">1</span>;\n    sz[k] = sz[l[k]] + sz[r[k]] + cnt[k];\n    del[k] = del[l[k]] + del[r[k]] + (cnt[k] != <span class=\"hljs-number\">0</span>);\n&#125;\n</code></pre>\n<h2 id=\"重构\"><a class=\"markdownIt-Anchor\" href=\"#重构\"></a> 重构</h2>\n<p>首先我们要设定一个系数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mi>l</mi><mi>p</mi><mi>h</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\">h</span><span class=\"mord mathnormal\">a</span></span></span></span> ，一般取 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0.7</mn></mrow><annotation encoding=\"application/x-tex\">0.7</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">7</span></span></span></span> 或者 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0.8</mn></mrow><annotation encoding=\"application/x-tex\">0.8</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord\">.</span><span class=\"mord\">8</span></span></span></span>。如果一个点的子节点占比大于设定的系数就直接重构。同时我们删除的时候也不全删，打个标记，但是我们会发现，如果我们删除的结点非常多的时候重构的复杂度也是非常高的，所以就删除的节点占比超过系数也重构.</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">can_rebuild</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> k)</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">return</span> wn[k] &amp;&amp; (alpha * s[k] &lt;= (<span class=\"hljs-type\">double</span>)<span class=\"hljs-built_in\">max</span>(s[l[k]], s[r[k]]) || (<span class=\"hljs-type\">double</span>)del[k] &lt;= alpha * s[k]);\n&#125;\n</code></pre>\n<p>然后就是具体的怎么重构了，分为两步，我们首先中序遍历一遍，然后再二分重建。</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">Rbu_dfs</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> &amp;top, <span class=\"hljs-type\">int</span> k)</span>\n</span>&#123;\n    <span class=\"hljs-comment\">// 中序遍历展开以 k 节点为根子树</span>\n    <span class=\"hljs-keyword\">if</span> (!k)\n        <span class=\"hljs-keyword\">return</span>;\n    <span class=\"hljs-built_in\">Rbu_dfs</span>(top, l[k]);\n    <span class=\"hljs-keyword\">if</span> (wn[k])\n        stk[top++] = k;\n    <span class=\"hljs-comment\">// 若当前节点已删除则不保留</span>\n    <span class=\"hljs-built_in\">Rbu_dfs</span>(top, r[k]);\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">Rbu_Build</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r)</span>   <span class=\"hljs-comment\">//重建</span>\n</span>&#123;\n    <span class=\"hljs-comment\">// 将 stk[] 数组内 [l, r) 区间重建成树，返回根节点</span>\n    <span class=\"hljs-type\">int</span> mid = l + r &gt;&gt; <span class=\"hljs-number\">1</span>; <span class=\"hljs-comment\">// 选取中间为根使其平衡</span>\n    <span class=\"hljs-keyword\">if</span> (l &gt;= r)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    lc[stk[mid]] = <span class=\"hljs-built_in\">Rbu_Build</span>(l, mid);\n    rc[stk[mid]] = <span class=\"hljs-built_in\">Rbu_Build</span>(mid + <span class=\"hljs-number\">1</span>, r); <span class=\"hljs-comment\">// 建左右子树</span>\n    <span class=\"hljs-built_in\">Calc</span>(stk[mid]);\n    <span class=\"hljs-keyword\">return</span> stk[mid];\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">Rbu</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> &amp;k)</span>\n</span>&#123;\n    <span class=\"hljs-comment\">// 重构节点 k 的全过程</span>\n    <span class=\"hljs-type\">int</span> top = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-built_in\">Rbu_dfs</span>(top, k);\n    k = <span class=\"hljs-built_in\">Rbu_Build</span>(<span class=\"hljs-number\">0</span>, top);\n&#125;\n</code></pre>\n<h2 id=\"插入-删除\"><a class=\"markdownIt-Anchor\" href=\"#插入-删除\"></a> 插入 &amp; 删除</h2>\n<p>跟普通的线段树同理，即到了空节点直接新建，然后再 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>n</mi><mi>t</mi><mo>+</mo><mo>+</mo></mrow><annotation encoding=\"application/x-tex\">cnt++</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span></span></span></span> 就行。删除同理，区别是到了空节点不操作，然后 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi><mi>n</mi><mi>t</mi><mo>−</mo><mo>−</mo></mrow><annotation encoding=\"application/x-tex\">cnt--</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span></span></span></span> ，插入或者是删除后，如果有需要重构的点就重构</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">insert</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> &amp;k, <span class=\"hljs-type\">int</span> p)</span>\n</span>&#123;\n    <span class=\"hljs-comment\">// 在以 k 为根的子树内添加权值为 p 节点</span>\n    <span class=\"hljs-keyword\">if</span> (!k)\n    &#123;\n        k = ++cnt;\n        <span class=\"hljs-keyword\">if</span> (!rt)\n            rt = <span class=\"hljs-number\">1</span>;\n        w[k] = p;\n        l[k] = rc[k] = <span class=\"hljs-number\">0</span>;\n        cnt[k] = s[k] = sz[k] = sd[k] = <span class=\"hljs-number\">1</span>;\n    &#125;\n    <span class=\"hljs-keyword\">else</span>\n    &#123;\n        <span class=\"hljs-keyword\">if</span> (w[k] == p)\n            cnt[k]++;\n        <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (w[k] &lt; p)\n            <span class=\"hljs-built_in\">insert</span>(rc[k], p);\n        <span class=\"hljs-keyword\">else</span>\n            <span class=\"hljs-built_in\">insert</span>(l[k], p);\n        <span class=\"hljs-built_in\">Calc</span>(k);\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">can_rebuild</span>(k))\n            <span class=\"hljs-built_in\">Rbu</span>(k);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">del</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> &amp;k, <span class=\"hljs-type\">int</span> p)</span>\n</span>&#123;\n    <span class=\"hljs-comment\">// 从以 k 为根子树移除权值为 p 节点</span>\n    <span class=\"hljs-keyword\">if</span> (!k)\n        <span class=\"hljs-keyword\">return</span>;\n    <span class=\"hljs-keyword\">else</span>\n    &#123;\n        <span class=\"hljs-keyword\">if</span> (w[k] == p)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (cnt[k])\n                cnt[k]--;\n        &#125;\n        <span class=\"hljs-keyword\">else</span>\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (w[k] &lt; p)\n                <span class=\"hljs-built_in\">del</span>(rc[k], p);\n            <span class=\"hljs-keyword\">else</span>\n                <span class=\"hljs-built_in\">del</span>(l[k], p);\n        &#125;\n        <span class=\"hljs-built_in\">Calc</span>(k);\n        <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">can_rebuild</span>(k))\n            <span class=\"hljs-built_in\">Rbu</span>(k);\n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"其他-2\"><a class=\"markdownIt-Anchor\" href=\"#其他-2\"></a> 其他</h2>\n<p>求前驱后继，排名，值之类的操作跟普通平衡树一样，这里就直接放代码了</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">Upper_bound</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> k, <span class=\"hljs-type\">int</span> p)</span>\n</span>&#123;\n    <span class=\"hljs-comment\">// 在以 k 为根子树中，大于 p 的最小数的名次</span>\n    <span class=\"hljs-keyword\">if</span> (!k)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (w[k] == p &amp;&amp; cnt[k])\n        <span class=\"hljs-keyword\">return</span> sz[l[k]] + <span class=\"hljs-number\">1</span> + cnt[k];\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (p &lt; w[k])\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Upper_bound</span>(l[k], p);\n    <span class=\"hljs-keyword\">else</span>\n        <span class=\"hljs-keyword\">return</span> sz[l[k]] + cnt[k] + <span class=\"hljs-built_in\">Upper_bound</span>(r[k], p);\n&#125;\n\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">Lower_bound</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> k, <span class=\"hljs-type\">int</span> p)</span>    <span class=\"hljs-comment\">//查某个数的排名直接 lower_boun(rt, x) + 1即可</span>\n</span>&#123;\n  <span class=\"hljs-keyword\">if</span> (!k)\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (w[k] == p &amp;&amp; cnt[k])\n    <span class=\"hljs-keyword\">return</span> sz[l[k]];\n  <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (w[k] &lt; p)\n    <span class=\"hljs-keyword\">return</span> sz[l[k]] + cnt[k] + <span class=\"hljs-built_in\">Lower_bound</span>(r[k], p);\n  <span class=\"hljs-keyword\">else</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Lower_bound</span>(lc[k], p);\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">query_w_by_pos</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> k, <span class=\"hljs-type\">int</span> p)</span>\n</span>&#123;\n    <span class=\"hljs-comment\">// 以 k 为根的子树中，名次为 p 的权值</span>\n    <span class=\"hljs-keyword\">if</span> (!k)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (sz[l[k]] &lt; p &amp;&amp; p &lt;= sz[l[k]] + cnt[k])\n        <span class=\"hljs-keyword\">return</span> w[k];\n    <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (sz[l[k]] + cnt[k] &lt; p)\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">query_w_by_pos</span>(rc[k], p - sz[l[k]] - cnt[k]);\n    <span class=\"hljs-keyword\">else</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">query_w_by_pos</span>(l[k], p);\n&#125;\n</code></pre>\n<h1 id=\"splay\"><a class=\"markdownIt-Anchor\" href=\"#splay\"></a> Splay</h1>\n<p>最后就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">splay</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 了，为啥把他放最后？因为个人觉得不是很好理解，而且他还有一个非常重要的应用就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>C</mi><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">LCT</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> ，也就是用来解决动态树问题，可能占的篇幅比较大，所以就放在最后。我们先看一些 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">splay</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的基本操作。</p>\n<h2 id=\"rotate\"><a class=\"markdownIt-Anchor\" href=\"#rotate\"></a> Rotate</h2>\n<p>这个操作就是将一个节点的深度变低一层，原来我们是需要左旋和右旋，但是经过不断的迭代，左旋和右旋合并成了一个操作，就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>R</mi><mi>o</mi><mi>t</mi><mi>a</mi><mi>t</mi><mi>e</mi></mrow><annotation encoding=\"application/x-tex\">Rotate</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">e</span></span></span></span> 。</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">rotate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> y = tr[x].fa;   <span class=\"hljs-comment\">//取出父节点</span>\n    <span class=\"hljs-type\">int</span> z = tr[y].fa; \n    <span class=\"hljs-type\">int</span> k = tr[y].s[<span class=\"hljs-number\">1</span>] == x;     <span class=\"hljs-comment\">//k = 0表示x是y的左儿子；k = 1表示x是y的右儿子</span>\n\n    tr[z].s[tr[z].s[<span class=\"hljs-number\">1</span>] == y] = x, tr[x].fa = z;    <span class=\"hljs-comment\">//将当前点变成z的左儿子或者是右儿子</span>\n    tr[y].s[k] = tr[x].s[k ^ <span class=\"hljs-number\">1</span>],tr[tr[x].s[k ^ <span class=\"hljs-number\">1</span>]].fa = y;\n    tr[x].s[k ^ <span class=\"hljs-number\">1</span>] = y,tr[y].fa = x;\n\n    <span class=\"hljs-built_in\">pushup</span>(y), <span class=\"hljs-built_in\">pushup</span>(x);\n&#125;\n</code></pre>\n<h2 id=\"splay-2\"><a class=\"markdownIt-Anchor\" href=\"#splay-2\"></a> Splay</h2>\n<p>将节点旋转到根，我们为什么要将一个节点旋转到根呢？目的有两个，一个是有时操作需要，另外一个就是根据期望来算，我们对一个点操作后，如果需要经常查询和使用一个数，那么把它旋转到根节点，这样下次访问它就只需查一次就找到了。</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">splay</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x,<span class=\"hljs-type\">int</span> k)</span>      <span class=\"hljs-comment\">//将点x旋转至点k下面   splay(x,0):将x旋转到根</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">while</span>(tr[x].p != k)\n    &#123;\n        <span class=\"hljs-type\">int</span> y = tr[x].p, z = tr[y].p;\n        <span class=\"hljs-keyword\">if</span>(z != k)\n        &#123;\n            <span class=\"hljs-keyword\">if</span>((tr[y].s[<span class=\"hljs-number\">1</span>] == x) ^ (tr[z].s[<span class=\"hljs-number\">1</span>] == y)) <span class=\"hljs-comment\">//如果不是一条链就正常转</span>\n                <span class=\"hljs-built_in\">rotate</span>(x);\n            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-built_in\">rotate</span>(y);   <span class=\"hljs-comment\">//是一条链我们需要将其链的结构改变</span>\n        &#125;    \n        <span class=\"hljs-built_in\">rotate</span>(x);\n    &#125;\n\n    <span class=\"hljs-keyword\">if</span>(!k) root = x;\n&#125;\n</code></pre>\n<h2 id=\"插入-2\"><a class=\"markdownIt-Anchor\" href=\"#插入-2\"></a> 插入</h2>\n<p>这个也比较好说，类比 [treap]{.rainbow} ，我们应该能很自然的想到我们可以直接按照权值关系递归插入，实现起来也不难。</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Tree</span>\n&#123;\n    <span class=\"hljs-type\">int</span> s[<span class=\"hljs-number\">2</span>];\n    <span class=\"hljs-type\">int</span> fa, v;   <span class=\"hljs-comment\">//fa：父节点  v：编号</span>\n    <span class=\"hljs-type\">int</span> siz, cnt;   <span class=\"hljs-comment\">//siz：子树大小  cnt：当前位置的数出现次数</span>\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">init</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> _v,<span class=\"hljs-type\">int</span> _p)</span>   <span class=\"hljs-comment\">//初始化函数</span>\n    </span>&#123;\n        v = _v,p = _p;\n        siz = <span class=\"hljs-number\">1</span>, cnt = <span class=\"hljs-number\">1</span>;\n    &#125;\n&#125;tr[N];\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">insert</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> v)</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> u = root,p = <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">while</span>(u) \n        p = u,u = tr[u].s[v &gt; tr[u].v];   <span class=\"hljs-comment\">//根据值的关系递归左右子树</span>\n\n    u = ++ idx;\n    <span class=\"hljs-keyword\">if</span>(p)\n        tr[p].s[v &gt; tr[p].v] = u;\n    tr[u].<span class=\"hljs-built_in\">init</span>(v,p);\n\n    <span class=\"hljs-built_in\">splay</span>(u,<span class=\"hljs-number\">0</span>);    <span class=\"hljs-comment\">//记得旋转到根，来保证复杂度</span>\n&#125;\n</code></pre>\n<h2 id=\"查询-2\"><a class=\"markdownIt-Anchor\" href=\"#查询-2\"></a> 查询</h2>\n<h3 id=\"按值查序\"><a class=\"markdownIt-Anchor\" href=\"#按值查序\"></a> 按值查序</h3>\n<p>其实说了那么多应该能想到，我们直接递归左右区间，递归到右子树的时候再加上左子树的贡献即可</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">get_k</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> res = <span class=\"hljs-number\">0</span>, pos = rt;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-literal\">true</span>)\n    &#123;\n        <span class=\"hljs-keyword\">if</span>(x &lt; tr[pos].v)\n            pos = tr[pos].s[<span class=\"hljs-number\">0</span>];\n        <span class=\"hljs-keyword\">else</span> \n        &#123;\n            res += tr[pos].siz;\n            <span class=\"hljs-keyword\">if</span>(x == tr[pos].v)\n            &#123;\n                <span class=\"hljs-built_in\">splay</span>(pos);\n                <span class=\"hljs-keyword\">return</span> res + <span class=\"hljs-number\">1</span>;\n            &#125;\n            res += tr[u].cnt\n            pos = tr[u].s[<span class=\"hljs-number\">1</span>];\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n<h3 id=\"按序查值\"><a class=\"markdownIt-Anchor\" href=\"#按序查值\"></a> 按序查值</h3>\n<p>同理就直接放代码了</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">get_v</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> pos = rt;\n    <span class=\"hljs-keyword\">while</span>(<span class=\"hljs-literal\">true</span>)\n    &#123;\n        <span class=\"hljs-keyword\">if</span>(tr[pos].s[<span class=\"hljs-number\">0</span>] &amp;&amp; k &lt;= tr[tr[pos].s[<span class=\"hljs-number\">0</span>]].siz)\n            pos = tr[u].s[<span class=\"hljs-number\">0</span>];\n        <span class=\"hljs-keyword\">else</span> \n        &#123;\n            k -= tr[pos].cnt + tr[tr[pos].s[<span class=\"hljs-number\">0</span>]].siz;\n            <span class=\"hljs-keyword\">if</span>(k &lt;= <span class=\"hljs-number\">0</span>)\n            &#123;\n                <span class=\"hljs-built_in\">splay</span>(pos);\n                <span class=\"hljs-keyword\">return</span> tr[pos].v;\n            &#125;\n            pos = tr[pos].v;\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n<h1 id=\"lctrainbow\"><a class=\"markdownIt-Anchor\" href=\"#lctrainbow\"></a> [LCT]{.rainbow}</h1>\n<p>终于到了这个大家伙了，这个东西的函数是真的多啊，但是每个函数的实现感觉还是比较好理解的。首先我们对于一个树，我们的剖分方式其实之前是学过两种的，有重链剖分和长链剖分，这里 [LCT]{.rainbow} 的剖分方式就是实链剖分，剖分后，我们得到的树是由若干的实边和虚边的组成的这也就导致它有一些性质。</p>\n<p>+++danger 性质</p>\n<ul>\n<li>对于这棵树每一条实链，我们是通过一颗 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">splay</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 维护的， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">splay</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的中序遍历就是我们所维护的路径</li>\n<li>然后对于每棵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">splay</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> ，我们是通过前驱和后继来维护序列，即我们一条实链中的每个点是只一个父亲和最多一个儿子</li>\n<li>对于两个实链，他们是通过虚边来连接的，所以是一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">splay</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的根的父亲为另一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">splay</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 中的一个点，同时对于虚边，是父亲不认儿子，但是儿子认父亲，也就是我们常说的认父不认子<br />\n+++</li>\n</ul>\n<p>然后就是我们的若干操作了。</p>\n<h2 id=\"accessrainbow\"><a class=\"markdownIt-Anchor\" href=\"#accessrainbow\"></a> [access]{.rainbow}</h2>\n<p>这个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mi>c</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">access</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">s</span></span></span></span> 函数的功能就是把从根到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的路径都变成实边，同时 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 变成 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">splay</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的根节点。</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">access</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>    <span class=\"hljs-comment\">//把从根到 x 的路径都变成实边，同时 x 变成 splay 的根节点</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> z = x;\n    <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> y = <span class=\"hljs-number\">0</span> ; x ; y = x, x = tr[x].fa)   <span class=\"hljs-comment\">//一直跳父亲</span>\n    &#123;\n        <span class=\"hljs-built_in\">splay</span>(x);    <span class=\"hljs-comment\">//我们先将 x 转到根节点</span>\n        tr[x].s[<span class=\"hljs-number\">1</span>] = y;    <span class=\"hljs-comment\">//因为按照中序遍历，x是最后一个节点，因此直接让y变成 x 的后继即可</span>\n        <span class=\"hljs-built_in\">pushup</span>(x);\n    &#125;\n    <span class=\"hljs-built_in\">splay</span>(z);\n&#125;\n</code></pre>\n<h2 id=\"makeroot\"><a class=\"markdownIt-Anchor\" href=\"#makeroot\"></a> makeroot</h2>\n<p>即将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 变成原树的根</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushrev</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n</span>&#123;\n    <span class=\"hljs-built_in\">swap</span>(tr[x].s[<span class=\"hljs-number\">0</span>], tr[x].s[<span class=\"hljs-number\">1</span>]);\n    tr[x].rev ^= <span class=\"hljs-number\">1</span>;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">makeroot</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n</span>&#123;\n    <span class=\"hljs-built_in\">access</span>(x);   <span class=\"hljs-comment\">//建边</span>\n    <span class=\"hljs-built_in\">pushrev</span>(x);    <span class=\"hljs-comment\">//然后翻转路径,因为翻转路径实际上是不会影响遍历的</span>\n&#125;\n</code></pre>\n<h2 id=\"findroot\"><a class=\"markdownIt-Anchor\" href=\"#findroot\"></a> findroot</h2>\n<p>找到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 在原树中的根节点，然后将原树的根节点转到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">splay</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的的根节点</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">findroot</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>    <span class=\"hljs-comment\">//找到 x 在原树中的根节点，然后将原树的根节点转到splay的的根节点</span>\n</span>&#123;\n    <span class=\"hljs-built_in\">access</span>(x);\n    <span class=\"hljs-keyword\">while</span>(tr[x].s[<span class=\"hljs-number\">0</span>])  <span class=\"hljs-comment\">//建完实边之后，那么他就成为了根节点，此时一直跳前驱就能找到父亲</span>\n        <span class=\"hljs-built_in\">pushdown</span>(x), x = tr[x].s[<span class=\"hljs-number\">0</span>];   \n    <span class=\"hljs-built_in\">splay</span>(x);\n    <span class=\"hljs-keyword\">return</span> x;\n&#125;\n</code></pre>\n<h2 id=\"split\"><a class=\"markdownIt-Anchor\" href=\"#split\"></a> split</h2>\n<p>这个函数得和 [Fhq]{.rainbow} 中的 [split]{.rainbow} 区分开，这里的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">split</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span></span></span></span> 是给 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 之间的点建一条路径，然后根节点为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 。但是这仅仅是定义，在实际应用上我们通常认为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">split</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span></span></span></span> 是将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的路径给提取出来，提取出来后这个路径也是一颗 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">splay</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> ，那么我们得到了一棵这样的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">splay</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 就更方便我们对链上的信息进行维护。</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">split</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>\n</span>&#123;\n    <span class=\"hljs-built_in\">makeroot</span>(x);  <span class=\"hljs-comment\">//让 x 变成根</span>\n    <span class=\"hljs-built_in\">access</span>(y);   <span class=\"hljs-comment\">//然后给 y 和根建路径即可，其实就等于跟 x 建边</span>\n&#125;\n</code></pre>\n<h2 id=\"link\"><a class=\"markdownIt-Anchor\" href=\"#link\"></a> link</h2>\n<p>这个函数应该是能猜出他是啥功能就是如果 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 不连通，那么就连一条边</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">link</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>    <span class=\"hljs-comment\">//如果 x 和 y 不连通，那么就连一条边</span>\n</span>&#123;\n    <span class=\"hljs-built_in\">makeroot</span>(x);\n    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">findroot</span>(y) != x)\n        tr[x].fa = y;\n&#125;\n</code></pre>\n<h2 id=\"cut\"><a class=\"markdownIt-Anchor\" href=\"#cut\"></a> cut</h2>\n<p>相当于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>i</mi><mi>n</mi><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">link</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 的逆操作</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">cut</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>      <span class=\"hljs-comment\">//如果 x 和 y 之间有边就删</span>\n</span>&#123;\n    <span class=\"hljs-built_in\">makeroot</span>(x);\n    <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">findroot</span>(y) == x &amp;&amp; tr[y].fa == x &amp;&amp; !tr[y].s[<span class=\"hljs-number\">0</span>])\n    &#123;\n        tr[x].s[<span class=\"hljs-number\">1</span>] = tr[y].fa = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-built_in\">pushup</span>(x);\n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"rotate-splay\"><a class=\"markdownIt-Anchor\" href=\"#rotate-splay\"></a> rotate &amp; splay</h2>\n<p>这里还是说一下吧，由于我们的这两个函数中都涉及到父子关系的改变，但是我们如果在更改过程中涉及到虚边和根节点之类的得特判，代码大体相同</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">rotate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>   \n</span>&#123;\n    <span class=\"hljs-type\">int</span> y = tr[x].fa, z = tr[y].fa;\n    <span class=\"hljs-type\">int</span> k = tr[y].s[<span class=\"hljs-number\">1</span>] == x;\n    <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-built_in\">is_root</span>(y)) \n        tr[z].s[tr[z].s[<span class=\"hljs-number\">1</span>] == y] = x;\n    tr[x].fa = z;\n    tr[y].s[k] = tr[x].s[k ^ <span class=\"hljs-number\">1</span>], tr[tr[x].s[k ^ <span class=\"hljs-number\">1</span>]].fa = y;\n    tr[x].s[k ^ <span class=\"hljs-number\">1</span>] = y, tr[y].fa = x;\n    <span class=\"hljs-built_in\">pushup</span>(y), <span class=\"hljs-built_in\">pushup</span>(x);\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">splay</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>     <span class=\"hljs-comment\">//正常的splay操作，但是在改变父子关系时要注意虚边的影响</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> top = <span class=\"hljs-number\">0</span>, r = x;\n    stk[++ top] = r;     <span class=\"hljs-comment\">//下放懒标记时，因为操作时从下往上做，所以要从下开始释放懒标记</span>\n    <span class=\"hljs-keyword\">while</span>(!<span class=\"hljs-built_in\">is_root</span>(r))\n        stk[++ top] = r = tr[r].fa;\n    <span class=\"hljs-keyword\">while</span>(top)\n        <span class=\"hljs-built_in\">pushdown</span>(stk[top --]);\n    <span class=\"hljs-keyword\">while</span>(!<span class=\"hljs-built_in\">is_root</span>(x))\n    &#123;\n        <span class=\"hljs-type\">int</span> y = tr[x].fa, z = tr[y].fa;\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-built_in\">is_root</span>(y))\n        &#123;\n            <span class=\"hljs-keyword\">if</span>((tr[y].s[<span class=\"hljs-number\">1</span>] == x) ^ (tr[z].s[<span class=\"hljs-number\">1</span>] == y)) \n                <span class=\"hljs-built_in\">rotate</span>(x);\n            <span class=\"hljs-keyword\">else</span> \n                <span class=\"hljs-built_in\">rotate</span>(y);\n        &#125;\n        <span class=\"hljs-built_in\">rotate</span>(x);\n    &#125;\n&#125;\n</code></pre>\n<p>终于！[LCT]{.rainbow} 的所有基本函数就都写完了，其实看着代码，还是比较好理解的，虽然多但是都挺短的，真要背也是比较好背。</p>\n<h1 id=\"知識ポイントは終わりましたrainbow\"><a class=\"markdownIt-Anchor\" href=\"#知識ポイントは終わりましたrainbow\"></a> [知識ポイントは終わりました]{.rainbow}</h1>\n<p>除了 [LCT]{.rainbow} ，大家应该是做了许多的题了，那么这里就讲几道 [LCT]{.rainbow} 的例题来趁热打铁。</p>\n<h1 id=\"例题rainbow\"><a class=\"markdownIt-Anchor\" href=\"#例题rainbow\"></a> [例题]{.rainbow}</h1>\n<h2 id=\"sdoi2008-洞穴勘测\"><a class=\"markdownIt-Anchor\" href=\"#sdoi2008-洞穴勘测\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDIxNDc=\">SDOI2008 洞穴勘测</span></h2>\n<h3 id=\"题目描述\"><a class=\"markdownIt-Anchor\" href=\"#题目描述\"></a> 题目描述</h3>\n<p>辉辉有一台监测仪器可以实时将通道的每一次改变状况在辉辉手边的终端机上显示：</p>\n<p>如果监测到洞穴u和洞穴v之间出现了一条通道，终端机上会显示一条指令 <code>Connect u v</code></p>\n<p>如果监测到洞穴u和洞穴v之间的通道被毁，终端机上会显示一条指令 <code>Destroy u v</code></p>\n<p>经过长期的艰苦卓绝的手工推算，辉辉发现一个奇怪的现象：无论通道怎么改变，任意时刻任意两个洞穴之间至多只有一条路径。</p>\n<p>因而，辉辉坚信这是由于某种本质规律的支配导致的。因而，辉辉更加夜以继日地坚守在终端机之前，试图通过通道的改变情况来研究这条本质规律。 然而，终于有一天，辉辉在堆积成山的演算纸中崩溃了……他把终端机往地面一砸（终端机也足够坚固无法破坏），转而求助于你，说道：“你老兄把这程序写写吧”。</p>\n<p>辉辉希望能随时通过终端机发出指令 <code>Query u v</code>，向监测仪询问此时洞穴u和洞穴v是否连通。现在你要为他编写程序回答每一次询问。 已知在第一条指令显示之前，JSZX洞穴群中没有任何通道存在。</p>\n<h3 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\"></a> 分析</h3>\n<p>读完题干后我们就会立刻反应过来，这就是一个板子啊，维护树的连通性也算是一个题型吧，这个连边操作和删边操作太经典了，然后对于维护是否联通直接看一下是否同属于一颗 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>S</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">Splay</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 即可，这个我们可以直接看一下是否时同一个根节点即可</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-keyword\">namespace</span> LCT\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> stk[N];\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Tree</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> s[<span class=\"hljs-number\">2</span>], fa;\n        <span class=\"hljs-type\">int</span> rev;\n    &#125; tr[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushrev</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">swap</span>(tr[x].s[<span class=\"hljs-number\">0</span>], tr[x].s[<span class=\"hljs-number\">1</span>]);\n        tr[x].rev ^= <span class=\"hljs-number\">1</span>;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushdown</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(tr[x].rev)\n        &#123;\n            <span class=\"hljs-built_in\">pushrev</span>(tr[x].s[<span class=\"hljs-number\">0</span>]), <span class=\"hljs-built_in\">pushrev</span>(tr[x].s[<span class=\"hljs-number\">1</span>]);\n            tr[x].rev = <span class=\"hljs-number\">0</span>;\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">is_root</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> (tr[tr[x].fa].s[<span class=\"hljs-number\">0</span>] != x &amp;&amp; tr[tr[x].fa].s[<span class=\"hljs-number\">1</span>] != x);   \n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">rotate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> y = tr[x].fa, z = tr[y].fa;\n        <span class=\"hljs-type\">int</span> k = tr[y].s[<span class=\"hljs-number\">1</span>] == x;\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-built_in\">is_root</span>(y))\n            tr[z].s[tr[z].s[<span class=\"hljs-number\">1</span>] == y] = x;\n        tr[x].fa = z;\n        tr[y].s[k] = tr[x].s[k ^ <span class=\"hljs-number\">1</span>], tr[tr[x].s[k ^ <span class=\"hljs-number\">1</span>]].fa = y;\n        tr[x].s[k ^ <span class=\"hljs-number\">1</span>] = y, tr[y].fa = x;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">splay</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> top = <span class=\"hljs-number\">0</span>, r = x;\n        stk[++ top] = r;\n        <span class=\"hljs-keyword\">while</span>(!<span class=\"hljs-built_in\">is_root</span>(r))\n            stk[++ top] = r = tr[r].fa;\n        <span class=\"hljs-keyword\">while</span>(top)\n            <span class=\"hljs-built_in\">pushdown</span>(stk[top --]);\n        <span class=\"hljs-keyword\">while</span>(!<span class=\"hljs-built_in\">is_root</span>(x))\n        &#123;\n            <span class=\"hljs-type\">int</span> y = tr[x].fa, z = tr[y].fa;\n            <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-built_in\">is_root</span>(y))\n            &#123;\n                <span class=\"hljs-keyword\">if</span>((tr[z].s[<span class=\"hljs-number\">1</span>] == y) ^ (tr[y].s[<span class=\"hljs-number\">1</span>] == x))\n                    <span class=\"hljs-built_in\">rotate</span>(x);\n                <span class=\"hljs-keyword\">else</span> \n                    <span class=\"hljs-built_in\">rotate</span>(y);\n            &#125;\n            <span class=\"hljs-built_in\">rotate</span>(x);\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">access</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> z = x;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> y = <span class=\"hljs-number\">0</span> ; x ; y = x, x = tr[x].fa)\n        &#123;\n            <span class=\"hljs-built_in\">splay</span>(x);\n            tr[x].s[<span class=\"hljs-number\">1</span>] = y;\n        &#125;\n        <span class=\"hljs-built_in\">splay</span>(z);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">makeroot</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">access</span>(x);\n        <span class=\"hljs-built_in\">pushrev</span>(x);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">findroot</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;   \n        <span class=\"hljs-built_in\">access</span>(x);\n        <span class=\"hljs-keyword\">while</span>(tr[x].s[<span class=\"hljs-number\">0</span>])\n            <span class=\"hljs-built_in\">pushdown</span>(x), x = tr[x].s[<span class=\"hljs-number\">0</span>];\n        <span class=\"hljs-built_in\">splay</span>(x);\n        <span class=\"hljs-keyword\">return</span> x;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">link</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">makeroot</span>(x);\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">findroot</span>(y) != x)\n            tr[x].fa = y;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">cut</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">makeroot</span>(x);\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">findroot</span>(y) == x &amp;&amp; tr[y].fa == x &amp;&amp; !tr[y].s[<span class=\"hljs-number\">0</span>])\n            tr[x].s[<span class=\"hljs-number\">1</span>] = tr[y].fa = <span class=\"hljs-number\">0</span>;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> LCT;\n\n    <span class=\"hljs-type\">int</span> n, m;\n    <span class=\"hljs-type\">char</span> op[<span class=\"hljs-number\">20</span>];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(m);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= m ; ++ i)\n        &#123;\n            <span class=\"hljs-type\">int</span> u, v;\n            <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%s&quot;</span>, op);\n            <span class=\"hljs-built_in\">read</span>(u), <span class=\"hljs-built_in\">read</span>(v);\n            <span class=\"hljs-keyword\">if</span>(*op == <span class=\"hljs-string\">&#x27;C&#x27;</span>)\n                <span class=\"hljs-built_in\">link</span>(u, v);\n            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(*op == <span class=\"hljs-string\">&#x27;D&#x27;</span>)\n                <span class=\"hljs-built_in\">cut</span>(u, v);\n            <span class=\"hljs-keyword\">else</span> \n            &#123;\n                <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">findroot</span>(u) == <span class=\"hljs-built_in\">findroot</span>(v))\n                    <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;Yes&quot;</span>);\n                <span class=\"hljs-keyword\">else</span> \n                    <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;No&quot;</span>);\n            &#125;\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n<h2 id=\"国家集训队-tree-ii\"><a class=\"markdownIt-Anchor\" href=\"#国家集训队-tree-ii\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDE1MDE=\">国家集训队 Tree II</span></h2>\n<h3 id=\"题目描述-2\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-2\"></a> 题目描述</h3>\n<p>一棵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个点的树，每个点的初始权值为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>。<br />\n对于这棵树有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> 个操作，每个操作为以下四种操作之一：</p>\n<ul>\n<li><code>+ u v c</code>：将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 的路径上的点的权值都加上自然数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span>；</li>\n<li><code>- u1 v1 u2 v2</code>：将树中原有的边 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>u</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>v</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(u_1,v_1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 删除，加入一条新边 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>u</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>v</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(u_2,v_2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">u</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>，保证操作完之后仍然是一棵树；</li>\n<li><code>* u v c</code>：将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 的路径上的点的权值都乘上自然数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">c</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span></span></span></span>；</li>\n<li><code>/ u v</code>：询问 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi></mrow><annotation encoding=\"application/x-tex\">u</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">u</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 的路径上的点的权值和，将答案对 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>51061</mn></mrow><annotation encoding=\"application/x-tex\">51061</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">5</span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">6</span><span class=\"mord\">1</span></span></span></span> 取模。</li>\n</ul>\n<h3 id=\"输入格式\"><a class=\"markdownIt-Anchor\" href=\"#输入格式\"></a> 输入格式</h3>\n<p>第一行两个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo separator=\"true\">,</mo><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">n,q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span>。</p>\n<p>接下来 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">n-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 行每行两个正整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mo separator=\"true\">,</mo><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">u,v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span>，描述这棵树的每条边。</p>\n<p>接下来 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>q</mi></mrow><annotation encoding=\"application/x-tex\">q</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">q</span></span></span></span> 行，每行描述一个操作。</p>\n<h3 id=\"输出格式\"><a class=\"markdownIt-Anchor\" href=\"#输出格式\"></a> 输出格式</h3>\n<p>对于每个询问操作，输出一行一个整数表示答案。</p>\n<h3 id=\"分析-2\"><a class=\"markdownIt-Anchor\" href=\"#分析-2\"></a> 分析</h3>\n<p>首先这个题考察的是 [LCT]{.rainbow} 维护树链信息，其实也比较的板子，而且非常锻炼码力和细节，首先断边和加边的基本操作就不用再说了，我们这里看一下我们如何对一条路径的信息进行维护，我们是有一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">split</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span></span></span></span> 函数的，它的作用就是将一段路径给分离出来，然后我们还是知道分离出来后的根的，所以这就非常方便我们进行操作了，分离出来后我们直接进行按照 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>l</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">splay</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的维护方式维护即可，注意乘法和加法在下放时候的优先级。</p>\n<p>代码如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> LCT\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> int long long</span>\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>, mod = <span class=\"hljs-number\">51061</span>;\n\n    <span class=\"hljs-type\">int</span> n, q;\n    <span class=\"hljs-type\">int</span> stk[N];\n    <span class=\"hljs-type\">char</span> op[<span class=\"hljs-number\">2</span>];\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Tree</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> s[<span class=\"hljs-number\">2</span>], v, siz, fa;\n        <span class=\"hljs-type\">int</span> sum, add, mul, rev;\n    &#125; tr[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushup</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        tr[x].siz = tr[tr[x].s[<span class=\"hljs-number\">0</span>]].siz + tr[tr[x].s[<span class=\"hljs-number\">1</span>]].siz + <span class=\"hljs-number\">1</span>;\n        tr[x].sum = tr[tr[x].s[<span class=\"hljs-number\">0</span>]].v + tr[tr[x].s[<span class=\"hljs-number\">1</span>]].v + tr[x].v % mod;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushrev</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">swap</span>(tr[x].s[<span class=\"hljs-number\">0</span>], tr[x].s[<span class=\"hljs-number\">1</span>]);\n        tr[x].rev ^= <span class=\"hljs-number\">1</span>;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushdown</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;   \n        <span class=\"hljs-keyword\">if</span>(tr[x].mul != <span class=\"hljs-number\">1</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span>(tr[x].s[<span class=\"hljs-number\">0</span>])\n            &#123;\n                tr[tr[x].s[<span class=\"hljs-number\">0</span>]].v = tr[tr[x].s[<span class=\"hljs-number\">0</span>]].v * tr[x].mul % mod;\n                tr[tr[x].s[<span class=\"hljs-number\">0</span>]].mul = tr[tr[x].s[<span class=\"hljs-number\">0</span>]].mul * tr[x].mul % mod;\n                tr[tr[x].s[<span class=\"hljs-number\">0</span>]].add = tr[tr[x].s[<span class=\"hljs-number\">0</span>]].add * tr[x].mul % mod;\n                tr[tr[x].s[<span class=\"hljs-number\">0</span>]].sum = tr[tr[x].s[<span class=\"hljs-number\">0</span>]].sum * tr[x].mul % mod;\n            &#125;\n\n            <span class=\"hljs-keyword\">if</span>(tr[x].s[<span class=\"hljs-number\">1</span>])\n            &#123;\n                tr[tr[x].s[<span class=\"hljs-number\">1</span>]].v = tr[tr[x].s[<span class=\"hljs-number\">1</span>]].v * tr[x].mul % mod;\n                tr[tr[x].s[<span class=\"hljs-number\">1</span>]].mul = tr[tr[x].s[<span class=\"hljs-number\">1</span>]].mul * tr[x].mul % mod;\n                tr[tr[x].s[<span class=\"hljs-number\">1</span>]].add = tr[tr[x].s[<span class=\"hljs-number\">1</span>]].add * tr[x].mul % mod;\n                tr[tr[x].s[<span class=\"hljs-number\">1</span>]].sum = tr[tr[x].s[<span class=\"hljs-number\">1</span>]].sum * tr[x].mul % mod;\n            &#125;\n\n            tr[x].mul = <span class=\"hljs-number\">1</span>;\n        &#125;\n\n        <span class=\"hljs-keyword\">if</span>(tr[x].add)\n        &#123;\n            <span class=\"hljs-keyword\">if</span>(tr[x].s[<span class=\"hljs-number\">0</span>])\n            &#123;\n                tr[tr[x].s[<span class=\"hljs-number\">0</span>]].v = tr[tr[x].s[<span class=\"hljs-number\">0</span>]].v + tr[x].add % mod;\n                tr[tr[x].s[<span class=\"hljs-number\">0</span>]].add = tr[tr[x].s[<span class=\"hljs-number\">0</span>]].add + tr[x].add % mod;\n                tr[tr[x].s[<span class=\"hljs-number\">0</span>]].sum = (tr[tr[x].s[<span class=\"hljs-number\">0</span>]].sum + tr[tr[x].s[<span class=\"hljs-number\">0</span>]].siz * tr[x].add % mod) % mod;\n            &#125;\n\n            <span class=\"hljs-keyword\">if</span>(tr[x].s[<span class=\"hljs-number\">1</span>])\n            &#123;\n                tr[tr[x].s[<span class=\"hljs-number\">1</span>]].v = tr[tr[x].s[<span class=\"hljs-number\">1</span>]].v + tr[x].add % mod;\n                tr[tr[x].s[<span class=\"hljs-number\">1</span>]].add = tr[tr[x].s[<span class=\"hljs-number\">1</span>]].add + tr[x].add % mod;\n                tr[tr[x].s[<span class=\"hljs-number\">1</span>]].sum = (tr[tr[x].s[<span class=\"hljs-number\">1</span>]].sum + tr[tr[x].s[<span class=\"hljs-number\">1</span>]].siz * tr[x].add % mod) % mod;\n            &#125;\n\n            tr[x].add = <span class=\"hljs-number\">0</span>;\n        &#125;\n\n        <span class=\"hljs-keyword\">if</span>(tr[x].rev)\n        &#123;\n            <span class=\"hljs-built_in\">pushrev</span>(tr[x].s[<span class=\"hljs-number\">0</span>]), <span class=\"hljs-built_in\">pushrev</span>(tr[x].s[<span class=\"hljs-number\">1</span>]);\n            tr[x].rev = <span class=\"hljs-number\">0</span>;\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">is_root</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> (tr[tr[x].fa].s[<span class=\"hljs-number\">0</span>] != x &amp;&amp; tr[tr[x].fa].s[<span class=\"hljs-number\">1</span>] != x);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">rotate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> y = tr[x].fa, z = tr[y].fa;\n        <span class=\"hljs-type\">int</span> k = tr[y].s[<span class=\"hljs-number\">1</span>] == x;\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-built_in\">is_root</span>(y))\n            tr[z].s[tr[z].s[<span class=\"hljs-number\">1</span>] == y] = x;\n        tr[x].fa = z;\n        tr[y].s[k] = tr[x].s[k ^ <span class=\"hljs-number\">1</span>], tr[tr[x].s[k ^ <span class=\"hljs-number\">1</span>]].fa = y;\n        tr[x].s[k ^ <span class=\"hljs-number\">1</span>] = y, tr[y].fa = x;\n        <span class=\"hljs-built_in\">pushup</span>(y), <span class=\"hljs-built_in\">pushup</span>(x);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">splay</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> top = <span class=\"hljs-number\">0</span>, r = x;\n        stk[++ top] = r;\n        <span class=\"hljs-keyword\">while</span>(!<span class=\"hljs-built_in\">is_root</span>(r))\n            stk[++ top] = r = tr[r].fa;\n        <span class=\"hljs-keyword\">while</span>(top)\n            <span class=\"hljs-built_in\">pushdown</span>(stk[top --]);\n        <span class=\"hljs-keyword\">while</span>(!<span class=\"hljs-built_in\">is_root</span>(x))\n        &#123;\n            <span class=\"hljs-type\">int</span> y = tr[x].fa, z = tr[y].fa;\n            <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-built_in\">is_root</span>(y))\n            &#123;\n                <span class=\"hljs-keyword\">if</span>((tr[z].s[<span class=\"hljs-number\">1</span>] == y) ^ (tr[y].s[<span class=\"hljs-number\">1</span>] == x))\n                    <span class=\"hljs-built_in\">rotate</span>(x);\n                <span class=\"hljs-keyword\">else</span> \n                    <span class=\"hljs-built_in\">rotate</span>(y);\n            &#125;\n            <span class=\"hljs-built_in\">rotate</span>(x);\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">access</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> z = x;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> y = <span class=\"hljs-number\">0</span> ; x ; y = x, x = tr[x].fa)\n        &#123;\n            <span class=\"hljs-built_in\">splay</span>(x);\n            tr[x].s[<span class=\"hljs-number\">1</span>] = y;\n            <span class=\"hljs-built_in\">pushup</span>(x);\n        &#125;\n        <span class=\"hljs-built_in\">splay</span>(z);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">makeroot</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">access</span>(x);\n        <span class=\"hljs-built_in\">pushrev</span>(x);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">findroot</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">access</span>(x);\n        <span class=\"hljs-keyword\">while</span>(tr[x].s[<span class=\"hljs-number\">0</span>])\n            <span class=\"hljs-built_in\">splay</span>(x), x = tr[x].s[<span class=\"hljs-number\">0</span>];\n        <span class=\"hljs-built_in\">splay</span>(x);\n        <span class=\"hljs-keyword\">return</span> x;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">link</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">makeroot</span>(x);\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">findroot</span>(y) != x)\n            tr[x].fa = y;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">cut</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">makeroot</span>(x);\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">findroot</span>(y) == x &amp;&amp; tr[y].fa == x &amp;&amp; !tr[y].s[<span class=\"hljs-number\">0</span>])\n        &#123;\n            tr[x].s[<span class=\"hljs-number\">1</span>] = tr[y].fa = <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-built_in\">pushup</span>(x);\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">split</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">makeroot</span>(x);\n        <span class=\"hljs-built_in\">access</span>(y);\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> LCT;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(q);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n            tr[i].v = tr[i].mul = tr[i].siz = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt; n ; ++ i)\n        &#123;\n            <span class=\"hljs-type\">int</span> u, v;\n            <span class=\"hljs-built_in\">read</span>(u), <span class=\"hljs-built_in\">read</span>(v);\n            <span class=\"hljs-built_in\">link</span>(u, v);\n        &#125;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= q ; ++ i)\n        &#123;\n            <span class=\"hljs-built_in\">scanf</span>(<span class=\"hljs-string\">&quot;%s&quot;</span>, op);\n            <span class=\"hljs-keyword\">if</span>(*op == <span class=\"hljs-string\">&#x27;+&#x27;</span>)\n            &#123;\n                <span class=\"hljs-type\">int</span> u, v, c;\n                <span class=\"hljs-built_in\">read</span>(u), <span class=\"hljs-built_in\">read</span>(v), <span class=\"hljs-built_in\">read</span>(c);\n                <span class=\"hljs-built_in\">split</span>(u, v);\n                \n                tr[v].v = tr[v].v + c % mod;\n                tr[v].add = tr[v].add + c % mod;\n                tr[v].sum = (tr[v].sum + c * tr[v].siz % mod) % mod;\n                <span class=\"hljs-built_in\">pushup</span>(v);\n            &#125;\n            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(*op == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n            &#123;\n                <span class=\"hljs-type\">int</span> u1, v1, u2, v2;\n                <span class=\"hljs-built_in\">read</span>(u1), <span class=\"hljs-built_in\">read</span>(v1), <span class=\"hljs-built_in\">read</span>(u2), <span class=\"hljs-built_in\">read</span>(v2);\n                <span class=\"hljs-built_in\">cut</span>(u1, v1), <span class=\"hljs-built_in\">link</span>(u2, v2);\n            &#125;\n            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(*op == <span class=\"hljs-string\">&#x27;*&#x27;</span>)\n            &#123;\n                <span class=\"hljs-type\">int</span> u, v, c;\n                <span class=\"hljs-built_in\">read</span>(u), <span class=\"hljs-built_in\">read</span>(v), <span class=\"hljs-built_in\">read</span>(c);\n                <span class=\"hljs-built_in\">split</span>(u, v);\n\n                tr[v].sum = tr[v].sum * c % mod;\n                tr[v].v = tr[v].v * c % mod;\n                tr[v].mul = tr[v].mul * c % mod;\n                <span class=\"hljs-built_in\">pushup</span>(v);\n            &#125;\n            <span class=\"hljs-keyword\">else</span> \n            &#123;\n                <span class=\"hljs-type\">int</span> u, v;\n                <span class=\"hljs-built_in\">read</span>(u), <span class=\"hljs-built_in\">read</span>(v);\n                <span class=\"hljs-built_in\">split</span>(u, v);\n\n                <span class=\"hljs-built_in\">write</span>(tr[v].sum % mod), <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;&quot;</span>);\n            &#125;\n        &#125;\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    <span class=\"hljs-comment\">// freopen(&quot;test.in&quot;, &quot;r&quot;, stdin);</span>\n    <span class=\"hljs-comment\">// freopen(&quot;test.out&quot;, &quot;w&quot;, stdout);</span>\n\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<h2 id=\"最小差值生成树\"><a class=\"markdownIt-Anchor\" href=\"#最小差值生成树\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDQyMzQ=\">最小差值生成树</span></h2>\n<h3 id=\"题目描述-3\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-3\"></a> 题目描述</h3>\n<p>给定一个点标号从 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 的、有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 条边的无向图，求边权最大值与最小值的差值最小的生成树。图可能存在自环。</p>\n<h3 id=\"输入格式-2\"><a class=\"markdownIt-Anchor\" href=\"#输入格式-2\"></a> 输入格式</h3>\n<p>第一行有两个整数，表示图的点数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 和边数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span>。</p>\n<p>接下来 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 行，每行三个整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mo separator=\"true\">,</mo><mi>v</mi><mo separator=\"true\">,</mo><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">u, v, w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span>，表示存在一条连接 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>u</mi><mo separator=\"true\">,</mo><mi>v</mi></mrow><annotation encoding=\"application/x-tex\">u, v</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">u</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">v</span></span></span></span> 长度为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>w</mi></mrow><annotation encoding=\"application/x-tex\">w</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span></span></span></span> 的边。</p>\n<h3 id=\"输出格式-2\"><a class=\"markdownIt-Anchor\" href=\"#输出格式-2\"></a> 输出格式</h3>\n<p>输出一行一个整数，表示答案。</p>\n<hr />\n<h3 id=\"分析-3\"><a class=\"markdownIt-Anchor\" href=\"#分析-3\"></a> 分析</h3>\n<p>这是讲的最后一道例题了，应该至此 [LCT]{.rainbow} 的所有题型应该是都涉及到了，这个考察的是 [LCT]{.rainbow} 维护边权，这里不得不要提一个小技巧了，对于一般的树上问题，如果是静态的，我们处理边权的手段往往都是将边权下放到这条边中深度更深的点上，但是一旦整棵树动了起来，我们维护边权的时候就要将一条边拆成一个点，那么我们只需让该点连接这两个点。对于这个题我们仍可以贪心的求，当我们出现了一条返租边时，我们将最小的边删去加入这个更大的边一定是更优的，因为当我们的最大值一定的时候，最小值更大是一定符合最优解的。</p>\n<p>代码实现如下</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> LCT\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>, INF = <span class=\"hljs-number\">0x3f3f3f3f</span>;\n\n    <span class=\"hljs-type\">int</span> n, m, cnt;\n    <span class=\"hljs-type\">int</span> stk[N];\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Tree</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> s[<span class=\"hljs-number\">2</span>], id;\n        <span class=\"hljs-type\">int</span> rev, fa;\n    &#125; tr[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushup</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u)</span>\n    </span>&#123;\n        tr[u].id = u;\n        <span class=\"hljs-keyword\">if</span>(tr[tr[u].s[<span class=\"hljs-number\">0</span>]].id &gt; n &amp;&amp; (tr[u].id &lt;= n || tr[u].id &gt; tr[tr[u].s[<span class=\"hljs-number\">0</span>]].id))\n            tr[u].id = tr[tr[u].s[<span class=\"hljs-number\">0</span>]].id;\n        <span class=\"hljs-keyword\">if</span>(tr[tr[u].s[<span class=\"hljs-number\">1</span>]].id &gt; n &amp;&amp; (tr[u].id &lt;= n || tr[u].id &gt; tr[tr[u].s[<span class=\"hljs-number\">1</span>]].id))\n            tr[u].id = tr[tr[u].s[<span class=\"hljs-number\">1</span>]].id;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushrev</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">swap</span>(tr[x].s[<span class=\"hljs-number\">0</span>], tr[x].s[<span class=\"hljs-number\">1</span>]);\n        tr[x].rev ^= <span class=\"hljs-number\">1</span>;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushdown</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(tr[x].rev)\n        &#123;\n            <span class=\"hljs-built_in\">pushrev</span>(tr[x].s[<span class=\"hljs-number\">0</span>]), <span class=\"hljs-built_in\">pushrev</span>(tr[x].s[<span class=\"hljs-number\">1</span>]);\n            tr[x].rev = <span class=\"hljs-number\">0</span>;\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">is_root</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> (tr[tr[x].fa].s[<span class=\"hljs-number\">0</span>] != x &amp;&amp; tr[tr[x].fa].s[<span class=\"hljs-number\">1</span>] != x);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">rotate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> y = tr[x].fa, z = tr[y].fa;\n        <span class=\"hljs-type\">int</span> k = tr[y].s[<span class=\"hljs-number\">1</span>] == x;\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-built_in\">is_root</span>(y))\n            tr[z].s[tr[z].s[<span class=\"hljs-number\">1</span>] == y] = x;\n        tr[x].fa = z;\n        tr[y].s[k] = tr[x].s[k ^ <span class=\"hljs-number\">1</span>], tr[tr[x].s[k ^ <span class=\"hljs-number\">1</span>]].fa = y;\n        tr[x].s[k ^ <span class=\"hljs-number\">1</span>] = y, tr[y].fa = x;\n        <span class=\"hljs-built_in\">pushup</span>(y), <span class=\"hljs-built_in\">pushup</span>(x);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">splay</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> top = <span class=\"hljs-number\">0</span>, r = x;\n        stk[++ top] = r;\n        <span class=\"hljs-keyword\">while</span>(!<span class=\"hljs-built_in\">is_root</span>(r))\n            stk[++ top] = r = tr[r].fa;\n        <span class=\"hljs-keyword\">while</span>(top)\n            <span class=\"hljs-built_in\">pushdown</span>(stk[top --]);\n        <span class=\"hljs-keyword\">while</span>(!<span class=\"hljs-built_in\">is_root</span>(x))\n        &#123;\n            <span class=\"hljs-type\">int</span> y = tr[x].fa, z = tr[y].fa;\n            <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-built_in\">is_root</span>(y))\n            &#123;\n                <span class=\"hljs-keyword\">if</span>((tr[z].s[<span class=\"hljs-number\">1</span>] == y) ^ (tr[y].s[<span class=\"hljs-number\">1</span>] == x))\n                    <span class=\"hljs-built_in\">rotate</span>(x);\n                <span class=\"hljs-keyword\">else</span> \n                    <span class=\"hljs-built_in\">rotate</span>(y);\n            &#125;\n            <span class=\"hljs-built_in\">rotate</span>(x);\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">access</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> z = x;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> y = <span class=\"hljs-number\">0</span> ; x ; y = x, x = tr[x].fa)\n        &#123;\n            <span class=\"hljs-built_in\">splay</span>(x);\n            tr[x].s[<span class=\"hljs-number\">1</span>] = y;\n            <span class=\"hljs-built_in\">pushup</span>(x);\n        &#125;\n        <span class=\"hljs-built_in\">splay</span>(z);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">makeroot</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">access</span>(x);\n        <span class=\"hljs-built_in\">pushrev</span>(x);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">findroot</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">access</span>(x);\n        <span class=\"hljs-keyword\">while</span>(tr[x].s[<span class=\"hljs-number\">0</span>])\n            <span class=\"hljs-built_in\">pushdown</span>(x), x = tr[x].s[<span class=\"hljs-number\">0</span>];\n        <span class=\"hljs-built_in\">splay</span>(x);\n        <span class=\"hljs-keyword\">return</span> x;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">split</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">makeroot</span>(x);\n        <span class=\"hljs-built_in\">access</span>(y);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">link</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">makeroot</span>(x);\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">findroot</span>(y) != x)\n            tr[x].fa = y;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">cut</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">makeroot</span>(x);\n        <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">findroot</span>(y) == x &amp;&amp; tr[y].fa == x &amp;&amp; !tr[y].s[<span class=\"hljs-number\">0</span>])\n        &#123;\n            tr[x].s[<span class=\"hljs-number\">1</span>] = tr[y].fa = <span class=\"hljs-number\">0</span>;\n            <span class=\"hljs-built_in\">pushup</span>(x);\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">check</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x, <span class=\"hljs-type\">int</span> y)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">makeroot</span>(x);\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">findroot</span>(y) != x;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> LCT;\n\n    <span class=\"hljs-type\">int</span> sum, ans, pos, tot;\n    <span class=\"hljs-type\">bool</span> st[N];\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Edge</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> u, v, w;\n\n        <span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span> &lt; (<span class=\"hljs-type\">const</span> Edge &amp;a) <span class=\"hljs-type\">const</span> &#123;<span class=\"hljs-keyword\">return</span> w &lt; a.w;&#125;\n    &#125; e[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(m);\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= m ; ++ i)\n        &#123;\n            <span class=\"hljs-type\">int</span> u, v, w;\n            <span class=\"hljs-built_in\">read</span>(u), <span class=\"hljs-built_in\">read</span>(v), <span class=\"hljs-built_in\">read</span>(w);\n            e[i] = &#123;u, v, w&#125;;\n        &#125;\n\n        cnt = n, sum = <span class=\"hljs-number\">1</span>, ans = INF;\n        std :: <span class=\"hljs-built_in\">sort</span>(e + <span class=\"hljs-number\">1</span>, e + m + <span class=\"hljs-number\">1</span>);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= m ; ++ i)\n        &#123;\n            ++ cnt;\n            <span class=\"hljs-type\">int</span> x = e[i].u, y = e[i].v;\n            <span class=\"hljs-keyword\">if</span>(x == y)\n            &#123;\n                st[i] = <span class=\"hljs-literal\">true</span>;\n                <span class=\"hljs-keyword\">continue</span>;\n            &#125;\n\n            <span class=\"hljs-keyword\">if</span>(<span class=\"hljs-built_in\">check</span>(x, y))\n                <span class=\"hljs-built_in\">link</span>(x, cnt), <span class=\"hljs-built_in\">link</span>(cnt, y), ++ tot;\n            <span class=\"hljs-keyword\">else</span>\n            &#123;\n                <span class=\"hljs-built_in\">split</span>(x, y);\n                pos = tr[y].id;\n                st[pos - n] = <span class=\"hljs-literal\">true</span>, <span class=\"hljs-built_in\">splay</span>(pos);\n\n                tr[tr[pos].s[<span class=\"hljs-number\">0</span>]].fa = tr[tr[pos].s[<span class=\"hljs-number\">1</span>]].fa = <span class=\"hljs-number\">0</span>;\n                <span class=\"hljs-built_in\">link</span>(x, cnt), <span class=\"hljs-built_in\">link</span>(cnt, y);\n            &#125;\n\n            <span class=\"hljs-keyword\">while</span>(st[sum] &amp;&amp; sum &lt;= i)\n                ++ sum;\n            <span class=\"hljs-keyword\">if</span>(tot &gt;= n - <span class=\"hljs-number\">1</span>)\n                ans = <span class=\"hljs-built_in\">min</span>(ans, e[i].w - e[sum].w);\n        &#125;\n\n        <span class=\"hljs-built_in\">write</span>(ans);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<h2 id=\"sdoi2017-树点涂色\"><a class=\"markdownIt-Anchor\" href=\"#sdoi2017-树点涂色\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDM3MDM=\">SDOI2017 树点涂色</span></h2>\n<h3 id=\"题目描述-4\"><a class=\"markdownIt-Anchor\" href=\"#题目描述-4\"></a> 题目描述</h3>\n<p>Bob 有一棵 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个点的有根树，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 号点是根节点。Bob 在每个点上涂了颜色，并且每个点上的颜色不同。</p>\n<p>定义一条路径的权值是：这条路径上的点（包括起点和终点）共有多少种不同的颜色。</p>\n<p>Bob可能会进行这几种操作：</p>\n<ul>\n<li>\n<p><code>1 x</code> 表示把点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 到根节点的路径上所有的点染上一种没有用过的新颜色。</p>\n</li>\n<li>\n<p><code>2 x y</code> 求 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的路径的权值。</p>\n</li>\n<li>\n<p><code>3 x</code> 在以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 为根的子树中选择一个点，使得这个点到根节点的路径权值最大，求最大权值。</p>\n</li>\n</ul>\n<p>Bob一共会进行 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span></span></span></span> 次操作</p>\n<hr />\n<h3 id=\"分析-4\"><a class=\"markdownIt-Anchor\" href=\"#分析-4\"></a> 分析</h3>\n<p>再补充一道题，<s>应wjy的要求，我把这道题也放在LCT里讲讲，虽然没必要拿LCT</s>。首先按我们看看这道题都有哪些操作，对于第一个操作，我们楞的一看，往 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 到根节点的路径上加一个颜色，我们很容易就能想到 [LCT]{.rainbow} 中的 [access]{.rainbow} 操作，那么一个比较 naive 的想法就是直接修改一下 [access]{.rainbow} 的细节即可。然后我们看第二个操作，求权值，这不好求吗，我们直接看一下这条路径上有多少虚边即可，对于第三个操作我们可以直接求出 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>f</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">dfs</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">s</span></span></span></span> 序，用线段树维护一下区间最值。</p>\n<p>然后我们看一下我们刚才说的 [access]{.rainbow} 函数应该怎么改，实际上，我们对于这道题我们要求的是虚边的个数，那么我们在 [access]{.rainbow} 的过程中是如果有实边就先将他变成虚边，然后将另一条边建成实边，对于原有的实边，我们造成的贡献就是将他的子树内所有的经过的虚边数量减一，对于新加入的，贡献就自然是加一，然后这道题其实就没啥了。</p>\n<p>下面是代码实现</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Segment\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n, m;\n    <span class=\"hljs-type\">int</span> dep[N], siz[N], son[N], top[N], id[N];\n    <span class=\"hljs-type\">int</span> dfn[N], h[N], fa[N], timestamp, idx;\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Edge</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> ne, v;\n    &#125; e[N];\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">TREE</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> l, r;\n        <span class=\"hljs-type\">int</span> mx, tag;\n    &#125; Tr[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">add</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> v)</span>\n    </span>&#123;\n        e[++ idx].v = v, e[idx].ne = h[u], h[u] = idx;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">dfs1</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> fath)</span>\n    </span>&#123;\n        fa[u] = fath, siz[u] = <span class=\"hljs-number\">1</span>;\n        dep[u] = dep[fath] + <span class=\"hljs-number\">1</span>;\n        \n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = h[u] ; i ; i = e[i].ne)\n        &#123;\n            <span class=\"hljs-type\">int</span> v = e[i].v;\n            <span class=\"hljs-keyword\">if</span>(v == fath)\n                <span class=\"hljs-keyword\">continue</span>;\n            <span class=\"hljs-built_in\">dfs1</span>(v, u);\n            siz[u] += siz[v];\n            <span class=\"hljs-keyword\">if</span>(siz[v] &gt; siz[son[u]])\n                son[u] = v;\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">dfs2</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> tp)</span>\n    </span>&#123;\n        dfn[u] = ++ timestamp;\n        top[u] = tp, id[timestamp] = u;\n        <span class=\"hljs-keyword\">if</span>(son[u])\n            <span class=\"hljs-built_in\">dfs2</span>(son[u], tp);\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = h[u] ; i ; i = e[i].ne)\n        &#123;\n            <span class=\"hljs-type\">int</span> v = e[i].v;\n            <span class=\"hljs-keyword\">if</span>(v == fa[u] || v == son[u])\n                <span class=\"hljs-keyword\">continue</span>;\n            <span class=\"hljs-built_in\">dfs2</span>(v, v);\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">Pushup</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u)</span>\n    </span>&#123;\n        Tr[u].mx = <span class=\"hljs-built_in\">max</span>(Tr[u &lt;&lt; <span class=\"hljs-number\">1</span>].mx, Tr[u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>].mx);\n    &#125;    \n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">Pushdown</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(Tr[u].tag)\n        &#123;\n            Tr[u &lt;&lt; <span class=\"hljs-number\">1</span>].tag += Tr[u].tag;\n            Tr[u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>].tag += Tr[u].tag;\n            \n            Tr[u &lt;&lt; <span class=\"hljs-number\">1</span>].mx += Tr[u].tag;\n            Tr[u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>].mx += Tr[u].tag;\n            Tr[u].tag = <span class=\"hljs-number\">0</span>;\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">build</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r)</span>\n    </span>&#123;\n        Tr[u].l = l, Tr[u].r = r;\n        <span class=\"hljs-keyword\">if</span>(l == r)\n        &#123;\n            Tr[u].mx = dep[id[l]];\n            <span class=\"hljs-keyword\">return</span>;\n        &#125;\n\n        <span class=\"hljs-type\">int</span> mid = l + r &gt;&gt; <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-built_in\">build</span>(u &lt;&lt; <span class=\"hljs-number\">1</span>, l, mid), <span class=\"hljs-built_in\">build</span>(u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>, mid + <span class=\"hljs-number\">1</span>, r);\n        <span class=\"hljs-built_in\">Pushup</span>(u);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">modify</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r, <span class=\"hljs-type\">int</span> w)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(l &lt;= Tr[u].l &amp;&amp; r &gt;= Tr[u].r)\n        &#123;\n            Tr[u].tag += w;\n            Tr[u].mx += w;\n            <span class=\"hljs-keyword\">return</span> ;\n        &#125;\n        <span class=\"hljs-built_in\">Pushdown</span>(u);\n        <span class=\"hljs-type\">int</span> mid = Tr[u].l + Tr[u].r &gt;&gt; <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">if</span>(l &lt;= mid)\n            <span class=\"hljs-built_in\">modify</span>(u &lt;&lt; <span class=\"hljs-number\">1</span>, l, r, w);\n        <span class=\"hljs-keyword\">if</span>(r &gt; mid)\n            <span class=\"hljs-built_in\">modify</span>(u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>, l, r, w);\n        <span class=\"hljs-built_in\">Pushup</span>(u);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">query</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(l &lt;= Tr[u].l &amp;&amp; r &gt;= Tr[u].r)\n            <span class=\"hljs-keyword\">return</span> Tr[u].mx;\n        <span class=\"hljs-built_in\">Pushdown</span>(u);\n        <span class=\"hljs-type\">int</span> mid = Tr[u].l + Tr[u].r &gt;&gt; <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">int</span> res = <span class=\"hljs-number\">-1</span>;\n        <span class=\"hljs-keyword\">if</span>(l &lt;= mid)\n            res = <span class=\"hljs-built_in\">max</span>(res, <span class=\"hljs-built_in\">query</span>(u &lt;&lt; <span class=\"hljs-number\">1</span>, l, r));\n        <span class=\"hljs-keyword\">if</span>(r &gt; mid)\n            res = <span class=\"hljs-built_in\">max</span>(res, <span class=\"hljs-built_in\">query</span>(u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>, l, r));\n        <span class=\"hljs-keyword\">return</span> res;\n    &#125;\n    \n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">get_lca</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> v)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">while</span>(top[u] != top[v])\n        &#123;\n            <span class=\"hljs-keyword\">if</span>(dep[top[u]] &lt; dep[top[v]])\n                v = fa[top[v]];\n            <span class=\"hljs-keyword\">else</span> \n                u = fa[top[u]];\n        &#125;\n\n        <span class=\"hljs-keyword\">return</span> dep[u] &lt; dep[v] ? u : v;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> LCT\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> Segment;\n\n    <span class=\"hljs-type\">int</span> stk[N];\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Splay</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> s[<span class=\"hljs-number\">2</span>], rev;\n        <span class=\"hljs-type\">int</span> fa;\n    &#125; tr[N];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushrev</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u)</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">swap</span>(tr[u].s[<span class=\"hljs-number\">0</span>], tr[u].s[<span class=\"hljs-number\">1</span>]);\n        tr[u].rev ^= <span class=\"hljs-number\">1</span>;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushdown</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(tr[u].rev)\n        &#123;\n            <span class=\"hljs-built_in\">pushrev</span>(tr[u].s[<span class=\"hljs-number\">0</span>]), <span class=\"hljs-built_in\">pushrev</span>(tr[u].s[<span class=\"hljs-number\">1</span>]);\n            tr[u].rev = <span class=\"hljs-number\">0</span>;\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">isroot</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> (tr[tr[x].fa].s[<span class=\"hljs-number\">0</span>] != x &amp;&amp; tr[tr[x].fa].s[<span class=\"hljs-number\">1</span>] != x);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">rotate</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> y = tr[x].fa, z = tr[y].fa;\n        <span class=\"hljs-type\">int</span> k = tr[y].s[<span class=\"hljs-number\">1</span>] == x;\n        <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-built_in\">isroot</span>(y))\n            tr[z].s[tr[z].s[<span class=\"hljs-number\">1</span>] == y] = x;\n        tr[x].fa = z;\n        tr[y].s[k] = tr[x].s[k ^ <span class=\"hljs-number\">1</span>], tr[tr[x].s[k ^ <span class=\"hljs-number\">1</span>]].fa = y;\n        tr[x].s[k ^ <span class=\"hljs-number\">1</span>] = y, tr[y].fa = x;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">splay</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> top = <span class=\"hljs-number\">0</span>, r = x;\n        stk[++ top] = r;\n        <span class=\"hljs-keyword\">while</span>(!<span class=\"hljs-built_in\">isroot</span>(r))\n            stk[++ top] = r = tr[r].fa;\n        <span class=\"hljs-keyword\">while</span>(top)\n            <span class=\"hljs-built_in\">pushdown</span>(stk[top --]);\n        <span class=\"hljs-keyword\">while</span>(!<span class=\"hljs-built_in\">isroot</span>(x))\n        &#123;\n            <span class=\"hljs-type\">int</span> y = tr[x].fa, z = tr[y].fa;\n            <span class=\"hljs-keyword\">if</span>(!<span class=\"hljs-built_in\">isroot</span>(y))\n            &#123;\n                <span class=\"hljs-keyword\">if</span>((tr[y].s[<span class=\"hljs-number\">1</span>] == x) ^ (tr[z].s[<span class=\"hljs-number\">1</span>] == y))\n                    <span class=\"hljs-built_in\">rotate</span>(x);\n                <span class=\"hljs-keyword\">else</span> \n                    <span class=\"hljs-built_in\">rotate</span>(y);\n            &#125;\n            <span class=\"hljs-built_in\">rotate</span>(x);\n        &#125;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">findroot</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">while</span>(tr[x].s[<span class=\"hljs-number\">0</span>])\n            x = tr[x].s[<span class=\"hljs-number\">0</span>];\n        <span class=\"hljs-keyword\">return</span> x;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">access</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> z = x;\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> y = <span class=\"hljs-number\">0</span> ; x ; y = x, x = tr[x].fa)\n        &#123;\n            <span class=\"hljs-built_in\">splay</span>(x);\n            <span class=\"hljs-keyword\">if</span>(tr[x].s[<span class=\"hljs-number\">1</span>])\n            &#123;\n                <span class=\"hljs-type\">int</span> temp = <span class=\"hljs-built_in\">findroot</span>(tr[x].s[<span class=\"hljs-number\">1</span>]);\n                <span class=\"hljs-built_in\">modify</span>(<span class=\"hljs-number\">1</span>, dfn[temp], dfn[temp] + siz[temp] - <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>);\n            &#125;\n\n            <span class=\"hljs-keyword\">if</span>(tr[x].s[<span class=\"hljs-number\">1</span>] = y)\n            &#123;\n                <span class=\"hljs-type\">int</span> temp = <span class=\"hljs-built_in\">findroot</span>(tr[x].s[<span class=\"hljs-number\">1</span>]);\n                <span class=\"hljs-built_in\">modify</span>(<span class=\"hljs-number\">1</span>, dfn[temp], dfn[temp] + siz[temp] - <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">-1</span>);\n            &#125;\n        &#125;\n        <span class=\"hljs-built_in\">splay</span>(z);\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> LCT;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(m);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt; n ; ++ i)\n        &#123;\n            <span class=\"hljs-type\">int</span> u, v;\n            <span class=\"hljs-built_in\">read</span>(u), <span class=\"hljs-built_in\">read</span>(v);\n            <span class=\"hljs-built_in\">add</span>(u, v), <span class=\"hljs-built_in\">add</span>(v, u);\n        &#125;\n\n        <span class=\"hljs-built_in\">dfs1</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>),  <span class=\"hljs-built_in\">dfs2</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>);\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)   <span class=\"hljs-comment\">//一定要记得初始化 splay 中的每个节点父亲</span>\n            tr[i].fa = fa[i];\n        <span class=\"hljs-built_in\">build</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, n);\n\n        <span class=\"hljs-keyword\">while</span>(m -- )\n        &#123;\n            <span class=\"hljs-type\">int</span> op, x;\n            <span class=\"hljs-built_in\">read</span>(op), <span class=\"hljs-built_in\">read</span>(x);\n            <span class=\"hljs-keyword\">if</span>(op == <span class=\"hljs-number\">1</span>)\n                <span class=\"hljs-built_in\">access</span>(x);\n            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(op == <span class=\"hljs-number\">2</span>)\n            &#123;\n                <span class=\"hljs-type\">int</span> y, lca, ans;\n                <span class=\"hljs-built_in\">read</span>(y);\n                lca = <span class=\"hljs-built_in\">get_lca</span>(x, y);\n                ans = <span class=\"hljs-built_in\">query</span>(<span class=\"hljs-number\">1</span>, dfn[x], dfn[x]) + <span class=\"hljs-built_in\">query</span>(<span class=\"hljs-number\">1</span>, dfn[y], dfn[y]) - <span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">query</span>(<span class=\"hljs-number\">1</span>, dfn[lca], dfn[lca]) + <span class=\"hljs-number\">1</span>;\n                <span class=\"hljs-built_in\">write</span>(ans), <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;&quot;</span>);\n            &#125;\n            <span class=\"hljs-keyword\">else</span> \n            &#123;\n                <span class=\"hljs-built_in\">write</span>(<span class=\"hljs-built_in\">query</span>(<span class=\"hljs-number\">1</span>, dfn[x], dfn[x] + siz[x] - <span class=\"hljs-number\">1</span>));\n                <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;&quot;</span>);\n            &#125;\n        &#125;\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<h1 id=\"エピローグrainbow\"><a class=\"markdownIt-Anchor\" href=\"#エピローグrainbow\"></a> [エピローグ]{.rainbow}</h1>\n<p>那么到这里常用平衡树和技巧啥的就都结束了，其实平衡树理解了原理之后学起来应该是比较简单的吧 [/kel]{.rainbow} 。剩下的就是练题了。</p>\n<p>+++success 题单</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3RyYWluaW5nLzM2Nzg0MyNwcm9ibGVtcw==\">LCT</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3RyYWluaW5nLzM2ODUyMCNpbmZvcm1hdGlvbg==\">平衡树</span><br />\n+++</li>\n</ul>\n",
            "tags": [
                "笔记",
                "数据结构",
                "平衡树",
                "数据结构",
                "笔记",
                "平衡树"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/08/23/scan-line/",
            "url": "https://undead-fire-ace.github.io/2023/08/23/scan-line/",
            "title": "扫描线",
            "date_published": "2023-08-23T13:50:30.000Z",
            "content_html": "<p>学习笔记</p>\n<span id=\"more\"></span>\n<p>如果在一个平面上给我们若干个图形求面积并，这一看就是个计算几何问题，感觉不太能用数据结构来维护，但是当这些图形都是矩形，那么问题就变的简单了，为什么，因为一旦是一堆矩形，那么对于这些相交的矩形，我们是可以将其分成若干的块的。这里为了更加形象化的理解，就借用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>o</mi><mi>i</mi><mo>−</mo><mi>w</mi><mi>i</mi><mi>k</mi><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">oi-wiki</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathnormal\">i</span></span></span></span> 上的图来帮助理解一下。</p>\n<p><img data-src=\"https://oi-wiki.org/geometry/images/scanning.svg\" alt=\"\" /></p>\n<p>如图所示，这一整块矩形的集合被重新分成了若干块规则的矩形，但我们知道了其具体的坐标的时候，我们会发现我们想要维护矩形的底是非常好维护的，那么除了底，我们就只需要维护一下高即可。</p>\n<p>那么为了解决这种问题，我们是可以将这个红线引入到代码中，这个红线就是我们所说的扫描线，当我们处理这个矩形的时候考虑一个矩形的下底造成的贡献的是一直到了他的上底，我们不妨将一个矩形给拆成两条有距离的线段，下底为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span><span class=\"mord\">1</span></span></span></span> ，上底为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span> ，此外我们可以记录一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 表示当前线段所在的纵坐标。那么扔到一个结构体里就是这样。</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Line</span>\n&#123;\n    <span class=\"hljs-type\">int</span> x1, x2;   <span class=\"hljs-comment\">//线段的左右端点</span>\n    <span class=\"hljs-type\">int</span> y;  <span class=\"hljs-comment\">//纵坐标</span>\n\n    <span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span> &lt; (<span class=\"hljs-type\">const</span> Line &amp;a) <span class=\"hljs-type\">const</span> &#123;<span class=\"hljs-keyword\">return</span> y &lt; a.y;&#125;    <span class=\"hljs-comment\">//重载小于符号</span>\n&#125; line[N];\n</code></pre>\n<p>那么我们现在就只需将上面的那个线排序后再挨个进行线段树的区间修改即可。那么我们来看下模板题。</p>\n<hr />\n<h1 id=\"扫描线\"><a class=\"markdownIt-Anchor\" href=\"#扫描线\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDU0OTA=\">扫描线</span></h1>\n<h2 id=\"题目描述\"><a class=\"markdownIt-Anchor\" href=\"#题目描述\"></a> 题目描述</h2>\n<p>求 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个四边平行于坐标轴的矩形的面积并。</p>\n<h2 id=\"输入格式\"><a class=\"markdownIt-Anchor\" href=\"#输入格式\"></a> 输入格式</h2>\n<p>第一行一个正整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>。</p>\n<p>接下来 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 行每行四个非负整数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>2</mn></msub></mrow><annotation encoding=\"application/x-tex\">x_1, y_1, x_2, y_2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，表示一个矩形的四个端点坐标为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy=\"false\">)</mo><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator=\"true\">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(x_1, y_1),(x_1, y_2),(x_2, y_2),(x_2, y_1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<h2 id=\"输出格式\"><a class=\"markdownIt-Anchor\" href=\"#输出格式\"></a> 输出格式</h2>\n<p>一行一个正整数，表示 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> 个矩形的并集覆盖的总面积。</p>\n<h2 id=\"提示\"><a class=\"markdownIt-Anchor\" href=\"#提示\"></a> 提示</h2>\n<p>对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>20</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">20\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">2</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><mn>1000</mn></mrow><annotation encoding=\"application/x-tex\">1 \\le n \\le 1000</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">0</span></span></span></span>。<br />\n对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>100</mn><mi mathvariant=\"normal\">%</mi></mrow><annotation encoding=\"application/x-tex\">100\\%</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.80556em;vertical-align:-0.05556em;\"></span><span class=\"mord\">1</span><span class=\"mord\">0</span><span class=\"mord\">0</span><span class=\"mord\">%</span></span></span></span> 的数据，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>n</mi><mo>≤</mo><msup><mn>10</mn><mn>5</mn></msup></mrow><annotation encoding=\"application/x-tex\">1 \\le n \\le {10}^5</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7719400000000001em;vertical-align:-0.13597em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.848448em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.848448em;\"><span style=\"top:-3.09734em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">5</span></span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><msub><mi>x</mi><mn>1</mn></msub><mo>&lt;</mo><msub><mi>x</mi><mn>2</mn></msub><mo>≤</mo><msup><mn>10</mn><mn>9</mn></msup></mrow><annotation encoding=\"application/x-tex\">0 \\le x_1 &lt; x_2 \\le {10}^9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6891em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7859700000000001em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.848448em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.848448em;\"><span style=\"top:-3.09734em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">9</span></span></span></span></span></span></span></span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>≤</mo><msub><mi>y</mi><mn>1</mn></msub><mo>&lt;</mo><msub><mi>y</mi><mn>2</mn></msub><mo>≤</mo><msup><mn>10</mn><mn>9</mn></msup></mrow><annotation encoding=\"application/x-tex\">0 \\le y_1 &lt; y_2 \\le {10}^9</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.78041em;vertical-align:-0.13597em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7335400000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.848448em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mord\">0</span></span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.848448em;\"><span style=\"top:-3.09734em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">9</span></span></span></span></span></span></span></span></span></span></span>。</p>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\"></a> 分析</h2>\n<p>我们这里先重点看一下数据范围，对于这道题来说，他的横坐标很大，纵坐标很大，但是矩形数量很少，那么我们会很自然的想到对坐标进行离散化。但是在离散化的时候就会出些问题，我们看下面一组数据。</p>\n<p><img data-src=\"https://cdn.luogu.com.cn/upload/image_hosting/udt7jkp1.png\" alt=\"\" /></p>\n<p>在这个线段树中我们虽然是分成左右儿子分别处理，但是我们会发现二号节点和三号节点的左右端点是不相连的，但是在图上这可能是相连的，那么我们为了让坐标连续起来，我们可以对所有节点的右儿子进行一个向右的偏移，那么偏移后我们就会发现此时左右子树连续起来了，但是我们左右节点分别掌管的区域还是偏移前的，因此在进行修改操作的时候要再把偏移量减回来。然后剩下的就是最基本的线段树的操作了，具体细节可以看代码。</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n        <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n            x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Segment_Tree\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> int long long</span>\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>;\n\n    <span class=\"hljs-type\">int</span> n, ans;\n    <span class=\"hljs-type\">int</span> X[N];\n\n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Line</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> x1, x2, y;\n        <span class=\"hljs-type\">int</span> tag;\n\n        <span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span> &lt; (<span class=\"hljs-type\">const</span> Line &amp;a) <span class=\"hljs-type\">const</span> &#123;<span class=\"hljs-keyword\">return</span> y &lt; a.y;&#125;\n    &#125; line[N];\n     \n    <span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Tree</span>\n    &#123;\n        <span class=\"hljs-type\">int</span> l, r, cnt, len;\n    &#125; tr[N &lt;&lt; <span class=\"hljs-number\">1</span>];\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">pushup</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> l = tr[u].l, r = tr[u].r;\n        <span class=\"hljs-keyword\">if</span>(tr[u].cnt)            <span class=\"hljs-comment\">//对于区间是连续的直接用右端点减去左端点</span>\n            tr[u].len = X[r + <span class=\"hljs-number\">1</span>] - X[l];\n        <span class=\"hljs-keyword\">else</span>     <span class=\"hljs-comment\">//不连续的我们则将左右儿子的长度进行加和</span>\n            tr[u].len = tr[u &lt;&lt; <span class=\"hljs-number\">1</span>].len + tr[u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>].len; \n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">modify</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r, <span class=\"hljs-type\">int</span> tag)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span>(l &lt;= tr[u].l &amp;&amp; r &gt;= tr[u].r)\n        &#123;\n            tr[u].cnt += tag;\n            <span class=\"hljs-built_in\">pushup</span>(u);\n            <span class=\"hljs-keyword\">return</span> ;\n        &#125;\n        <span class=\"hljs-type\">int</span> mid = tr[u].l + tr[u].r &gt;&gt; <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-keyword\">if</span>(l &lt;= mid)\n            <span class=\"hljs-built_in\">modify</span>(u &lt;&lt; <span class=\"hljs-number\">1</span>, l, r, tag);\n        <span class=\"hljs-keyword\">if</span>(r &gt; mid)\n            <span class=\"hljs-built_in\">modify</span>(u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>, l, r, tag);\n        <span class=\"hljs-built_in\">pushup</span>(u);\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">build</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> l, <span class=\"hljs-type\">int</span> r)</span>\n    </span>&#123;\n        tr[u].l = l, tr[u].r = r;\n        <span class=\"hljs-keyword\">if</span>(l == r)\n            <span class=\"hljs-keyword\">return</span> ;\n        <span class=\"hljs-type\">int</span> mid = l + r &gt;&gt; <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-built_in\">build</span>(u &lt;&lt; <span class=\"hljs-number\">1</span>, l, mid), <span class=\"hljs-built_in\">build</span>(u &lt;&lt; <span class=\"hljs-number\">1</span> | <span class=\"hljs-number\">1</span>, mid + <span class=\"hljs-number\">1</span>, r);\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> Segment_Tree;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        <span class=\"hljs-built_in\">read</span>(n);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= n ; ++ i)\n        &#123;\n            <span class=\"hljs-type\">int</span> X1, X2, Y1, Y2;\n            <span class=\"hljs-built_in\">read</span>(X1), <span class=\"hljs-built_in\">read</span>(Y1), <span class=\"hljs-built_in\">read</span>(X2), <span class=\"hljs-built_in\">read</span>(Y2);\n            line[i] = &#123;X1, X2, Y1, <span class=\"hljs-number\">1</span>&#125;;    <span class=\"hljs-comment\">//下底</span>\n            line[i + n] = &#123;X1, X2, Y2, <span class=\"hljs-number\">-1</span>&#125;;    <span class=\"hljs-comment\">//上底</span>\n            X[i] = X1, X[n + i] = X2;   <span class=\"hljs-comment\">//将点扔进用于离散化的数组中</span>\n        &#125;\n\n        n &lt;&lt;= <span class=\"hljs-number\">1</span>;\n        std :: <span class=\"hljs-built_in\">sort</span>(line + <span class=\"hljs-number\">1</span>, line + n + <span class=\"hljs-number\">1</span>);\n        std :: <span class=\"hljs-built_in\">sort</span>(X + <span class=\"hljs-number\">1</span>, X + n + <span class=\"hljs-number\">1</span>);\n        <span class=\"hljs-type\">int</span> Uni = std :: <span class=\"hljs-built_in\">unique</span>(X + <span class=\"hljs-number\">1</span>, X + n + <span class=\"hljs-number\">1</span>) - X - <span class=\"hljs-number\">1</span>;    <span class=\"hljs-comment\">//去重</span>\n        <span class=\"hljs-built_in\">build</span>(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, Uni - <span class=\"hljs-number\">1</span>);\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt; n ; ++ i)\n        &#123;\n            <span class=\"hljs-type\">int</span> l = std :: <span class=\"hljs-built_in\">lower_bound</span>(X + <span class=\"hljs-number\">1</span>, X + Uni + <span class=\"hljs-number\">1</span>, line[i].x1) - X;\n            <span class=\"hljs-type\">int</span> r = std :: <span class=\"hljs-built_in\">lower_bound</span>(X + <span class=\"hljs-number\">1</span>, X + Uni + <span class=\"hljs-number\">1</span>, line[i].x2) - X;\n            <span class=\"hljs-built_in\">modify</span>(<span class=\"hljs-number\">1</span>, l, r - <span class=\"hljs-number\">1</span>, line[i].tag);    <span class=\"hljs-comment\">//记得我们是偏移过右坐标了</span>\n            ans += tr[<span class=\"hljs-number\">1</span>].len * (line[i + <span class=\"hljs-number\">1</span>].y - line[i].y);\n        &#125;\n\n        <span class=\"hljs-built_in\">write</span>(ans);\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">signed</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve :: <span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<h1 id=\"最后还有一道例题\"><a class=\"markdownIt-Anchor\" href=\"#最后还有一道例题\"></a> 最后还有一道<a href=\"https://undead-fire-ace.github.io/2023/08/22/windows-star/\">例题</a></h1>\n",
            "tags": [
                "笔记",
                "数据结构",
                "线段树",
                "数据结构",
                "笔记",
                "线段树"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/08/22/unbalanced/",
            "url": "https://undead-fire-ace.github.io/2023/08/22/unbalanced/",
            "title": "AGC045B 01 Unbalanced 题解",
            "date_published": "2023-08-22T03:33:10.000Z",
            "content_html": "<p>一篇题解</p>\n<span id=\"more\"></span>\n<h1 id=\"agc045b-01-unbalanced\"><a class=\"markdownIt-Anchor\" href=\"#agc045b-01-unbalanced\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vQVRfYWdjMDQ1X2I=\">[AGC045B] 01 Unbalanced</span></h1>\n<h2 id=\"题意\"><a class=\"markdownIt-Anchor\" href=\"#题意\"></a> 题意：</h2>\n<p>给定一个字符串，其中 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">?</mo></mrow><annotation encoding=\"application/x-tex\">?</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mclose\">?</span></span></span></span> 可以替换成 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 或 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>。让最小化 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 的数量差。</p>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\"></a> 分析：</h2>\n<p>一般对于最小化最大值的题，往往都可以用二分去做，（<s>但是这道题的二分的 check 函数我不会写</s>），那么就想一想有没有什么平替，我们可以想到贪心和 dp 也是可以解决类似的问题的，我们可以考虑因为是跟个数有关且只有两个不同的数，那么我们就可以将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn></mrow><annotation encoding=\"application/x-tex\">0</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">0</span></span></span></span> 看成是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span>，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">+1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">+</span><span class=\"mord\">1</span></span></span></span>，然后就转换成了最小化最大的累积和与最小的累积和的差值。先可以设，在累计和最大值不超过 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">limit</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span></span></span></span> 时，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">f_{limit}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> 为最大累计和的最小值，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span> 为最小累计和的最大值，那么我们的答案就是求 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>min</mi><mo>⁡</mo><mrow><mo fence=\"true\">{</mo><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mo>−</mo><msub><mi>f</mi><mrow><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi></mrow></msub><mo fence=\"true\">}</mo></mrow><mo stretchy=\"false\">(</mo><mi>g</mi><mo>≤</mo><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\min \\left\\{limit - f_{limit}\\right\\}(g\\leq limit)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">min</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p>然后我们需要去求 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>，对于求 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi></mrow><annotation encoding=\"application/x-tex\">g</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span></span></span></span>，我们可以贪心的去求解，在一开始我们先将所以的问号都设置成 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span>，然后在检查一遍，如果累计和不超过我们的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">limit</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span></span></span></span> 的话，就将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">-1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span> 变成 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span>。</p>\n<p>那么这样贪心为什么是正确的呢？</p>\n<p>当 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">limit</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span></span></span></span> 增加 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span> 时，最多只有一个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">?</mo></mrow><annotation encoding=\"application/x-tex\">?</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mclose\">?</span></span></span></span> 发生变换，所以 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>f</mi><mrow><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>≤</mo><msub><mi>f</mi><mrow><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi></mrow></msub><mo>+</mo><mn>2</mn></mrow><annotation encoding=\"application/x-tex\">f_{limit+2}\\leq f_{limit}+2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">2</span></span></span></span>，那么 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mo>−</mo><msub><mi>f</mi><mrow><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mo>+</mo><mn>2</mn></mrow></msub><mo>≤</mo><mo stretchy=\"false\">(</mo><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mo>+</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>−</mo><mo stretchy=\"false\">(</mo><msub><mi>f</mi><mrow><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi></mrow></msub><mo>+</mo><mn>2</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">limit-f_{limit+2}\\leq (limit+2)-(f_{limit}+2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.902771em;vertical-align:-0.208331em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span></span></span></span>，那么我们最终的答案为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>min</mi><mo>⁡</mo><mrow><mo fence=\"true\">{</mo><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mo>−</mo><msub><mi>f</mi><mrow><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi></mrow></msub><mo fence=\"true\">}</mo></mrow><mo>≤</mo><mi>min</mi><mo>⁡</mo><mrow><mo fence=\"true\">{</mo><mo stretchy=\"false\">(</mo><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mo>+</mo><mn>2</mn><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi>f</mi><mrow><mi>l</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>t</mi><mo>+</mo><mn>2</mn></mrow></msub><mo fence=\"true\">}</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\min \\left\\{limit-f_{limit} \\right\\} \\leq \\min \\left\\{ (limit+2)-f_{limit+2} \\right\\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">min</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">t</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">min</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"minner\"><span class=\"mopen delimcenter\" style=\"top:0em;\">{</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">2</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361079999999999em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">m</span><span class=\"mord mathnormal mtight\">i</span><span class=\"mord mathnormal mtight\">t</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">2</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.208331em;\"><span></span></span></span></span></span></span><span class=\"mclose delimcenter\" style=\"top:0em;\">}</span></span></span></span></span>。</p>\n<p>那么正确性保证了，最后的答案也就是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>min</mi><mo>⁡</mo><mo stretchy=\"false\">(</mo><mi>g</mi><mo>−</mo><msub><mi>f</mi><mi>g</mi></msub><mo separator=\"true\">,</mo><mo stretchy=\"false\">(</mo><mi>g</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>−</mo><msub><mi>f</mi><mrow><mi>g</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\min(g-f_{g},(g+1)-f_{g+1})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">min</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15139200000000003em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">g</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.036108em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.301108em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03588em;\">g</span><span class=\"mbin mtight\">+</span><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>。</p>\n<p>代码实现起来也是比较容易的，一些细节也在代码中标注了。</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-keyword\">namespace</span> read_write   <span class=\"hljs-comment\">//快读快写可以忽略</span>\n&#123;\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(T &amp;x)</span>\n    </span>&#123;\n        x = <span class=\"hljs-number\">0</span>;\n        T f = <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n        <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n                f = <span class=\"hljs-number\">-1</span>;\n            ch = <span class=\"hljs-built_in\">getchar</span>();\n        &#125;\n            <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n                x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n        x *= f;\n        <span class=\"hljs-keyword\">return</span>;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(T x)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n        &#123;\n            x = -x;\n            <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n        &#125;\n        <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n            <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n        <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">max</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? x : y;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\">T <span class=\"hljs-title\">min</span><span class=\"hljs-params\">(T x, T y)</span>\n    </span>&#123;\n        <span class=\"hljs-keyword\">return</span> x &gt; y ? y : x;\n    &#125;\n\n    <span class=\"hljs-keyword\">template</span> &lt;<span class=\"hljs-keyword\">typename</span> T&gt;\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">swap</span><span class=\"hljs-params\">(T &amp;a, T &amp;b)</span>\n    </span>&#123;\n        T tem = b;\n        b = a;\n        a = tem;\n    &#125;\n&#125;\n\n<span class=\"hljs-keyword\">namespace</span> Solve\n&#123;\n    <span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> read_write;\n\n    <span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>;\n\n    std::string a;\n    <span class=\"hljs-type\">int</span> sum[N];   <span class=\"hljs-comment\">//记录后缀中1的个数(与0抵消之后的个数)</span>\n    <span class=\"hljs-type\">int</span> len;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">calc</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> limit)</span>\n    </span>&#123;\n        <span class=\"hljs-type\">int</span> cnt, mn;\n        cnt = mn = <span class=\"hljs-number\">0</span>;\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span> ; i &lt;= len ; ++ i)\n        &#123;\n            <span class=\"hljs-keyword\">if</span>(a[i] == <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n                cnt --;\n            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span>(a[i] == <span class=\"hljs-string\">&#x27;1&#x27;</span>)\n                cnt ++ ;\n            <span class=\"hljs-keyword\">else</span> \n            &#123;\n                <span class=\"hljs-keyword\">if</span>(cnt + sum[i + <span class=\"hljs-number\">1</span>] + <span class=\"hljs-number\">1</span> &lt;= limit)\n                    cnt ++;\n                <span class=\"hljs-keyword\">else</span> \n                    cnt --;\n            &#125;\n\n            mn = <span class=\"hljs-built_in\">min</span>(mn, cnt);    <span class=\"hljs-comment\">//计算f[g]</span>\n        &#125;\n\n        <span class=\"hljs-keyword\">return</span> limit - mn;\n    &#125;\n\n    <span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">solve</span><span class=\"hljs-params\">()</span>\n    </span>&#123;\n        std::cin &gt;&gt; a;\n        len = a.<span class=\"hljs-built_in\">size</span>();\n        a = <span class=\"hljs-string\">&#x27; &#x27;</span> + a;   <span class=\"hljs-comment\">//在字符串前加个空格，调整下标（个人习惯</span>\n\n        <span class=\"hljs-keyword\">for</span>(<span class=\"hljs-type\">int</span> i = len ; i &gt;= <span class=\"hljs-number\">1</span> ; -- i)\n            sum[i] = <span class=\"hljs-built_in\">max</span>(<span class=\"hljs-number\">0</span>, sum[i + <span class=\"hljs-number\">1</span>] + (a[i] == <span class=\"hljs-string\">&#x27;1&#x27;</span> ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">-1</span>));   <span class=\"hljs-comment\">//在计算1的个数时也将 &#x27;?&#x27; 看成是0</span>\n        <span class=\"hljs-built_in\">write</span>(<span class=\"hljs-built_in\">min</span>(<span class=\"hljs-built_in\">calc</span>(sum[<span class=\"hljs-number\">1</span>]), <span class=\"hljs-built_in\">calc</span>(sum[<span class=\"hljs-number\">1</span>] + <span class=\"hljs-number\">1</span>)));   <span class=\"hljs-comment\">//加1为了防止sum[1]为0时，出些奇怪的错误</span>\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    Solve::<span class=\"hljs-built_in\">solve</span>();\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n",
            "tags": [
                "题解",
                "贪心",
                "思维题",
                "题解",
                "贪心",
                "思维题"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/08/22/magic-forest/",
            "url": "https://undead-fire-ace.github.io/2023/08/22/magic-forest/",
            "title": "NOI2014 魔法森林",
            "date_published": "2023-08-22T03:31:39.000Z",
            "content_html": "<p>一篇题解</p>\n<span id=\"more\"></span>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDIzODc=\">题目传送门</span></p>\n<h1 id=\"简要题意\"><a class=\"markdownIt-Anchor\" href=\"#简要题意\"></a> 简要题意：</h1>\n<p>给定一些无向边，每条边有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 两个权值，要求判断能否到达终点 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span> ，能到达，就输出路径的最小的值，定义路径的最小值为这条路径上 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 的最大值之和。</p>\n<h1 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\"></a> 分析：</h1>\n<p>这道题正解好像是LCT，<s>但是我不会LCT啊</s>。所以就只能用一些自己会的算法了。</p>\n<p>首先我们先主观臆断一下，发现如果我们先将 路径按照 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 的值的大小去排个序，然后再挨个加边，我们就每次加边都更新一下。因为题干说了会出现重边和自环，按照我们的思路，我们要保证 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 尽可能小，出现重边很好处理，就保留小的即可，那么如果是出现了环呢？我们实际上是不需要环的，因此我们就需要考虑删去哪一条边呢？因为环中删掉一条边，连通性是不变的，那么就删去 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 值最大的边即可。那么总体的思路就是先将边按照 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">a</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span> 排序，然后从小到大拓展，连边的时候边的权值为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> ， 然后跑一边 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>f</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">spfa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">a</span></span></span></span> ，如果每次更新 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> ，最后再和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mi>n</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">ans</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">s</span></span></span></span> 求一下最小值即可。</p>\n<p>聪明的你肯定会发现在处理环的时候，为什么能保证删掉最大的边一定能保证不会影响最优解，因为如果当前保留一个较大的可能会少加一个更大的。</p>\n<p>那么这种思路的正确性如何保证 ？？？</p>\n<p>我们将 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi></mrow><annotation encoding=\"application/x-tex\">b</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span></span></span></span> 最大的那条边删去，连通性不变，那么就将这个删去的边替换成环中的剩下的边，这样会使走这个删去的边的解变的更小，所以并不会影响最优解。</p>\n<p>那么我们就可以开心的动态加边，然后跑 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>f</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">spfa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">a</span></span></span></span> 了 ， <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi><mi>p</mi><mi>f</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">spfa</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">p</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathnormal\">a</span></span></span></span> 比 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>L</mi><mi>C</mi><mi>T</mi></mrow><annotation encoding=\"application/x-tex\">LCT</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span></span></span></span> 好写又好调而且还快。多是一件美事啊！！！</p>\n<p>下面是代码，目前是洛谷最优解 (2023年6月5日10点03分)</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;queue&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;\n\n<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">50005</span>, M = <span class=\"hljs-number\">100005</span>, INF = <span class=\"hljs-number\">0x3f3f3f3f</span>;\n\n<span class=\"hljs-type\">int</span> n, m, d[N], hh, tt, q[N], ans = INF;\n<span class=\"hljs-type\">int</span> head[N], idx;\n<span class=\"hljs-type\">bool</span> vis[N];\n\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Edge</span>    <span class=\"hljs-comment\">//树的边（最小生成树的结构体）</span>\n&#123;\n    <span class=\"hljs-type\">int</span> u, v, a, b;\n    <span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span>&lt;(<span class=\"hljs-type\">const</span> Edge &amp;z) <span class=\"hljs-type\">const</span>\n    &#123;\n        <span class=\"hljs-keyword\">return</span> a &lt; z.a;\n    &#125;\n&#125; g[M];\n\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">E</span>\n&#123;\n    <span class=\"hljs-type\">int</span> next, v, w;\n&#125; e[M &lt;&lt; <span class=\"hljs-number\">1</span>];\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">add</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> v, <span class=\"hljs-type\">int</span> w)</span>\n</span>&#123;\n    e[++idx] = (E)&#123;head[u], v, w&#125;;\n    head[u] = idx;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">int</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> x = <span class=\"hljs-number\">0</span>, f = <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n    <span class=\"hljs-keyword\">while</span>(ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n    &#123;\n        <span class=\"hljs-keyword\">if</span>(ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n            f = <span class=\"hljs-number\">-1</span>;\n        ch = <span class=\"hljs-built_in\">getchar</span>();\n    &#125;\n    <span class=\"hljs-keyword\">while</span>(ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n        x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n    <span class=\"hljs-keyword\">return</span> x * f;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span>(x &lt; <span class=\"hljs-number\">0</span>)\n    &#123;\n        x = -x;\n        <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n    &#125;\n    <span class=\"hljs-keyword\">if</span>(x &gt; <span class=\"hljs-number\">9</span>)\n        <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n    <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">spfa</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">while</span> (hh != tt)\n    &#123;\n        <span class=\"hljs-type\">int</span> u = q[hh++];\n        vis[u] = <span class=\"hljs-literal\">false</span>;\n        <span class=\"hljs-keyword\">if</span> (hh == N)   <span class=\"hljs-comment\">//证明跑完了所有边</span>\n            hh = <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> i = head[u]; i; i = e[i].next)\n        &#123;\n            <span class=\"hljs-type\">int</span> v = e[i].v;\n            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">max</span>(e[i].w, d[u]) &lt; d[v])\n            &#123;\n                d[v] = <span class=\"hljs-built_in\">max</span>(e[i].w, d[u]);\n                <span class=\"hljs-keyword\">if</span> (!vis[v])\n                &#123;\n                    q[tt++] = v, vis[v] = <span class=\"hljs-literal\">true</span>;\n                    <span class=\"hljs-keyword\">if</span> (tt == N)\n                        tt = <span class=\"hljs-number\">0</span>;\n                &#125;\n            &#125;\n        &#125;\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    <span class=\"hljs-built_in\">memset</span>(d, <span class=\"hljs-number\">0x3f</span>, <span class=\"hljs-built_in\">sizeof</span> (d));\n    d[<span class=\"hljs-number\">1</span>] = <span class=\"hljs-number\">0</span>;\n    n = <span class=\"hljs-built_in\">read</span>(), m = <span class=\"hljs-built_in\">read</span>();\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= m; i++)\n    &#123;\n        g[i].u = <span class=\"hljs-built_in\">read</span>();\n        g[i].v = <span class=\"hljs-built_in\">read</span>();\n        g[i].a = <span class=\"hljs-built_in\">read</span>();\n        g[i].b = <span class=\"hljs-built_in\">read</span>();\n    &#125;\n\n    <span class=\"hljs-built_in\">sort</span>(g + <span class=\"hljs-number\">1</span>, g + <span class=\"hljs-number\">1</span> + m);  <span class=\"hljs-comment\">//按照a的大小排序</span>\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= m; i++)\n    &#123;\n        <span class=\"hljs-built_in\">add</span>(g[i].u, g[i].v, g[i].b);\n        <span class=\"hljs-built_in\">add</span>(g[i].v, g[i].u, g[i].b);\n        \n        hh = <span class=\"hljs-number\">0</span>, tt = <span class=\"hljs-number\">2</span>;\n        q[<span class=\"hljs-number\">0</span>] = g[i].u, q[<span class=\"hljs-number\">1</span>] = g[i].v;\n        vis[q[<span class=\"hljs-number\">0</span>]] = vis[q[<span class=\"hljs-number\">1</span>]] = <span class=\"hljs-literal\">true</span>;\n        <span class=\"hljs-built_in\">spfa</span>();\n        \n        <span class=\"hljs-keyword\">if</span> (d[n] != INF)\n            ans = <span class=\"hljs-built_in\">min</span>(ans, g[i].a + d[n]);\n    &#125;\n\n    <span class=\"hljs-keyword\">if</span> (ans == INF)\n        <span class=\"hljs-built_in\">puts</span>(<span class=\"hljs-string\">&quot;-1&quot;</span>);\n    <span class=\"hljs-keyword\">else</span>\n        <span class=\"hljs-built_in\">write</span>(ans);\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n",
            "tags": [
                "题解",
                "图论",
                "题解",
                "图论"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/08/22/plan-plane/",
            "url": "https://undead-fire-ace.github.io/2023/08/22/plan-plane/",
            "title": "国家集训队 航班安排",
            "date_published": "2023-08-22T03:30:28.000Z",
            "content_html": "<p>一篇题解</p>\n<span id=\"more\"></span>\n<h1 id=\"p4452-国家集训队航班安排\"><a class=\"markdownIt-Anchor\" href=\"#p4452-国家集训队航班安排\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDQ0NTI=\">P4452 [国家集训队]航班安排</span></h1>\n<p>首先我们这道题直接读题就可以知道就是一个裸的求最小费用最大流，然后我们考虑如何建图，因为网络流的难点就是判断网络流和建图。</p>\n<p>对于每个飞机场，一开始我们是否能去到，因为去不了的也不会对我们的答案做出贡献，这一步也好判断，我们只需要看一下每个机场要求的S是否小于等于从起点到那个机场的距离即可。</p>\n<p>上面的是建立出发时的图，然后我们考虑飞机场之间的转移。设当前飞机场为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> ， 要判断是否连边的飞机场为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> ，这也非常好想，我们只需要判断 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> 加上 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">x</span></span></span></span> 到 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的时间是否小于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>y</mi></mrow><annotation encoding=\"application/x-tex\">y</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span></span></span></span> 的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">s</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span></span></span></span> 即可。</p>\n<p>最后我们考虑一下一个方案是否能够返回。因为我们一定是结束时间小的往结束时间大的飞，因此只需要判断每个飞机场是否 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">t</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">t</span></span></span></span>  加上从这个飞机场到出发点的时间是否小于这一天的终止时间点即可。</p>\n<p>下面是代码实现，由于我用的是PD，就只大概知道一下思想就行，你们也没太大的必要学，毕竟普通的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi>c</mi></mrow><annotation encoding=\"application/x-tex\">dinic</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">c</span></span></span></span> 就可以过了，而且更好调</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstdio&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;queue&gt;</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;\n\n<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">210</span>, M = <span class=\"hljs-number\">1e6</span> + <span class=\"hljs-number\">10</span>, INF = <span class=\"hljs-number\">0x3f3f3f3f</span>;\n\n<span class=\"hljs-type\">int</span> n, m, k, T, s, t, s1;\n<span class=\"hljs-type\">int</span> maxf, minc, idx;\n<span class=\"hljs-type\">int</span> tim[N][N];\n<span class=\"hljs-type\">int</span> dist[M], h[M];\n<span class=\"hljs-type\">int</span> flo[N][N];\n<span class=\"hljs-type\">int</span> cnt = <span class=\"hljs-number\">1</span>, he[M];\n<span class=\"hljs-type\">bool</span> st[M];\n\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">edge</span>\n&#123;\n    <span class=\"hljs-type\">int</span> ne, f, c, v;\n&#125; e[M];\n\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">mypair</span>\n&#123;\n    <span class=\"hljs-type\">int</span> dis, id;\n    <span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span>&lt;(<span class=\"hljs-type\">const</span> mypair &amp;a) <span class=\"hljs-type\">const</span> &#123; <span class=\"hljs-keyword\">return</span> dis &gt; a.dis;&#125;;\n    <span class=\"hljs-built_in\">mypair</span>(<span class=\"hljs-type\">int</span> w, <span class=\"hljs-type\">int</span> x)\n    &#123;\n        dis = w, id = x;\n    &#125;\n&#125;;\n\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">node</span>\n&#123;\n    <span class=\"hljs-type\">int</span> e, v;\n&#125; p[M];\n\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">dot</span>\n&#123;\n    <span class=\"hljs-type\">int</span> a, b, c, s, t;\n&#125; q[M];\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> &amp;a)</span>\n</span>&#123;\n    <span class=\"hljs-type\">int</span> x = <span class=\"hljs-number\">0</span>, f = <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n    <span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n    &#123;\n\n        <span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n            f = <span class=\"hljs-number\">-1</span>;\n        ch = <span class=\"hljs-built_in\">getchar</span>();\n    &#125;\n    <span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n        x = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n    a = x * f;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">write</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> x)</span>\n</span>&#123;\n    <span class=\"hljs-keyword\">if</span> (x &lt; <span class=\"hljs-number\">0</span>)\n    &#123;\n        x = -x;\n        <span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;-&#x27;</span>);\n    &#125;\n\n    <span class=\"hljs-keyword\">if</span> (x &gt; <span class=\"hljs-number\">9</span>)\n        <span class=\"hljs-built_in\">write</span>(x / <span class=\"hljs-number\">10</span>);\n    <span class=\"hljs-built_in\">putchar</span>(x % <span class=\"hljs-number\">10</span> + <span class=\"hljs-string\">&#x27;0&#x27;</span>);\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">add</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> v, <span class=\"hljs-type\">int</span> f, <span class=\"hljs-type\">int</span> c)</span>\n</span>&#123;\n    e[++cnt].v = v, e[cnt].f = f, e[cnt].c = c, e[cnt].ne = he[u], he[u] = cnt;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">adds</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> u, <span class=\"hljs-type\">int</span> v, <span class=\"hljs-type\">int</span> w, <span class=\"hljs-type\">int</span> x)</span>\n</span>&#123;\n    <span class=\"hljs-built_in\">add</span>(u, v, w, -x), <span class=\"hljs-built_in\">add</span>(v, u, <span class=\"hljs-number\">0</span>, x);\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">bool</span> <span class=\"hljs-title\">dijkstra</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    priority_queue&lt;mypair&gt; q;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= t; i++)\n        dist[i] = INF;\n    <span class=\"hljs-built_in\">memset</span>(st, <span class=\"hljs-literal\">false</span>, <span class=\"hljs-built_in\">sizeof</span>(st));\n    q.<span class=\"hljs-built_in\">push</span>(<span class=\"hljs-built_in\">mypair</span>(<span class=\"hljs-number\">0</span>, s));\n    dist[s] = <span class=\"hljs-number\">0</span>;\n\n    <span class=\"hljs-keyword\">while</span> (!q.<span class=\"hljs-built_in\">empty</span>())\n    &#123;\n        <span class=\"hljs-type\">int</span> u = q.<span class=\"hljs-built_in\">top</span>().id;\n        q.<span class=\"hljs-built_in\">pop</span>();\n        <span class=\"hljs-keyword\">if</span> (st[u])\n            <span class=\"hljs-keyword\">continue</span>;\n        st[u] = <span class=\"hljs-literal\">true</span>;\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = he[u]; i; i = e[i].ne)\n        &#123;\n            <span class=\"hljs-type\">int</span> v = e[i].v, nc = e[i].c + h[u] - h[v];\n            <span class=\"hljs-keyword\">if</span> (e[i].f &amp;&amp; dist[v] &gt; dist[u] + nc)\n            &#123;\n                dist[v] = dist[u] + nc;\n                p[v].v = u;\n                p[v].e = i;\n\n                <span class=\"hljs-keyword\">if</span> (!st[v])\n                    q.<span class=\"hljs-built_in\">push</span>(<span class=\"hljs-built_in\">mypair</span>(dist[v], v));\n            &#125;\n        &#125;\n    &#125;\n    <span class=\"hljs-keyword\">return</span> dist[t] != INF;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">spfa</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    queue&lt;<span class=\"hljs-type\">int</span>&gt; q;\n    <span class=\"hljs-built_in\">memset</span>(h, <span class=\"hljs-number\">0x3f</span>, <span class=\"hljs-built_in\">sizeof</span>(h));\n    h[s] = <span class=\"hljs-number\">0</span>;\n    q.<span class=\"hljs-built_in\">push</span>(s), st[s] = <span class=\"hljs-literal\">true</span>;\n\n    <span class=\"hljs-keyword\">while</span> (!q.<span class=\"hljs-built_in\">empty</span>())\n    &#123;\n        <span class=\"hljs-type\">int</span> u = q.<span class=\"hljs-built_in\">front</span>();\n        q.<span class=\"hljs-built_in\">pop</span>();\n        st[u] = <span class=\"hljs-literal\">false</span>;\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = he[u]; i; i = e[i].ne)\n        &#123;\n            <span class=\"hljs-type\">int</span> v = e[i].v;\n            <span class=\"hljs-keyword\">if</span> (h[v] &gt; h[u] + e[i].c &amp;&amp; e[i].f)\n            &#123;\n                h[v] = h[u] + e[i].c;\n                <span class=\"hljs-keyword\">if</span> (!st[v])\n                &#123;\n                    q.<span class=\"hljs-built_in\">push</span>(v);\n                    st[v] = <span class=\"hljs-literal\">true</span>;\n                &#125;\n            &#125;\n        &#125;\n    &#125;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n    <span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(m), <span class=\"hljs-built_in\">read</span>(k), <span class=\"hljs-built_in\">read</span>(T);\n\n    s = <span class=\"hljs-number\">2</span> * m + <span class=\"hljs-number\">1</span>, t = s + <span class=\"hljs-number\">2</span>;\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= n; i++)\n    &#123;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt;= n; j++)\n            <span class=\"hljs-built_in\">read</span>(tim[i][j]);\n    &#125;\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= n; i++)\n    &#123;\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt;= n; j++)\n            <span class=\"hljs-built_in\">read</span>(flo[i][j]);\n    &#125;\n\n    <span class=\"hljs-built_in\">add</span>(s, s + <span class=\"hljs-number\">1</span>, k, <span class=\"hljs-number\">0</span>);\n    <span class=\"hljs-built_in\">add</span>(s + <span class=\"hljs-number\">1</span>, s, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>);\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= m; i++)\n    &#123;\n        <span class=\"hljs-built_in\">read</span>(q[i].a), <span class=\"hljs-built_in\">read</span>(q[i].b), <span class=\"hljs-built_in\">read</span>(q[i].s), <span class=\"hljs-built_in\">read</span>(q[i].t), <span class=\"hljs-built_in\">read</span>(q[i].c);\n        q[i].a++, q[i].b++;\n\n        <span class=\"hljs-built_in\">adds</span>(i, i + m, <span class=\"hljs-number\">1</span>, q[i].c);\n        <span class=\"hljs-keyword\">if</span> (tim[<span class=\"hljs-number\">1</span>][q[i].a] &lt;= q[i].s)\n            <span class=\"hljs-built_in\">adds</span>(s + <span class=\"hljs-number\">1</span>, i, <span class=\"hljs-number\">1</span>, -flo[<span class=\"hljs-number\">1</span>][q[i].a]);\n        <span class=\"hljs-keyword\">if</span> (q[i].t + tim[q[i].b][<span class=\"hljs-number\">1</span>] &lt;= T)\n            <span class=\"hljs-built_in\">adds</span>(i + m, t, <span class=\"hljs-number\">1</span>, -flo[q[i].b][<span class=\"hljs-number\">1</span>]);\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt; i; j++)\n        &#123;\n            <span class=\"hljs-keyword\">if</span> (q[i].t + tim[q[i].b][q[j].a] &lt;= q[j].s)\n                <span class=\"hljs-built_in\">adds</span>(i + m, j, <span class=\"hljs-number\">1</span>, -flo[q[i].b][q[j].a]);\n            <span class=\"hljs-keyword\">if</span> (q[j].t + tim[q[j].b][q[i].a] &lt;= q[i].s)\n                <span class=\"hljs-built_in\">adds</span>(j + m, i, <span class=\"hljs-number\">1</span>, -flo[q[j].b][q[i].a]);\n        &#125;\n    &#125;\n\n    <span class=\"hljs-built_in\">spfa</span>();\n\n    <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-built_in\">dijkstra</span>())\n    &#123;\n        <span class=\"hljs-type\">int</span> minf = INF;\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= t; i++)\n            h[i] += dist[i];\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = t; i != s; i = p[i].v)\n            minf = <span class=\"hljs-built_in\">min</span>(minf, e[p[i].e].f);\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">register</span> <span class=\"hljs-type\">int</span> i = t; i != s; i = p[i].v)\n        &#123;\n            e[p[i].e].f -= minf;\n            e[p[i].e ^ <span class=\"hljs-number\">1</span>].f += minf;\n        &#125;\n\n        maxf += minf;\n        minc += minf * h[t];\n    &#125;\n\n    <span class=\"hljs-built_in\">write</span>(-minc);\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n",
            "tags": [
                "题解",
                "网络流",
                "费用流",
                "题解",
                "网络流",
                "费用流"
            ]
        },
        {
            "id": "https://undead-fire-ace.github.io/2023/08/22/shoi-dance/",
            "url": "https://undead-fire-ace.github.io/2023/08/22/shoi-dance/",
            "title": "SHOI2009 舞会 题解",
            "date_published": "2023-08-22T03:29:08.000Z",
            "content_html": "<p>一篇题解</p>\n<span id=\"more\"></span>\n<h1 id=\"题目传送门\"><a class=\"markdownIt-Anchor\" href=\"#题目传送门\"></a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubHVvZ3UuY29tLmNuL3Byb2JsZW0vUDIxNTk=\">题目传送门</span></h1>\n<h1 id=\"简要题意\"><a class=\"markdownIt-Anchor\" href=\"#简要题意\"></a> 简要题意：</h1>\n<p>问这给定的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">n</span></span></span></span>  对舞伴中只有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 对女伴比男伴高的方案数</p>\n<h1 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\"></a> 分析：</h1>\n<p>先浅浅的看一下题干，要求组合数但是没有给 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>m</mi><mi>o</mi><mi>d</mi></mrow><annotation encoding=\"application/x-tex\">mod</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">m</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">d</span></span></span></span> 而且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>K</mi></mrow><annotation encoding=\"application/x-tex\">K</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span></span></span></span> 达到了200，这必然会爆掉，然后就可以得出一个显然易见结论，要写高精度（<s><strong>不想写开溜</strong></s>）。</p>\n<p>先浅挂一下高精度的板子,因为有些人可能就懒得写了（doge。下面挂的是重载运算符的板子，可以省去函数名的重复敲击</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Int</span>     <span class=\"hljs-comment\">//高精度的板子就先不说了</span>\n&#123;\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> max_size (501)</span>\n\t<span class=\"hljs-type\">int</span> val[max_size];\n\t<span class=\"hljs-type\">int</span> len;\n\t<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> base = <span class=\"hljs-number\">10</span>;\n\t<span class=\"hljs-built_in\">Int</span>(<span class=\"hljs-type\">int</span> _val = <span class=\"hljs-number\">0</span>)\n\t&#123;\n\t\tlen = <span class=\"hljs-number\">1</span>;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; max_size; i++)\n\t\t\tval[i] = <span class=\"hljs-number\">0</span>;\n\t\t*<span class=\"hljs-keyword\">this</span> = _val;\n\t&#125;\n\t<span class=\"hljs-built_in\">Int</span>(<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> s[max_size]) &#123; <span class=\"hljs-built_in\">init</span>(s); &#125;\n\t<span class=\"hljs-built_in\">Int</span>(<span class=\"hljs-type\">char</span> s[max_size]) &#123; <span class=\"hljs-built_in\">init</span>(s); &#125;\n\t<span class=\"hljs-type\">int</span> &amp;<span class=\"hljs-keyword\">operator</span>[](<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> id) &#123; <span class=\"hljs-keyword\">return</span> val[id]; &#125;\n\t<span class=\"hljs-type\">void</span> <span class=\"hljs-keyword\">operator</span>=(<span class=\"hljs-type\">int</span> _val)\n\t&#123;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt;= len; i++)\n\t\t\tval[i] = <span class=\"hljs-number\">0</span>;\n\t\tlen = <span class=\"hljs-number\">0</span>;\n\t\t<span class=\"hljs-keyword\">while</span> (_val)\n\t\t\tval[++len] = _val % <span class=\"hljs-number\">10</span>, _val /= <span class=\"hljs-number\">10</span>;\n\t&#125;\n\t<span class=\"hljs-type\">void</span> <span class=\"hljs-keyword\">operator</span>=(Int pos)\n\t&#123;\n\t\t*<span class=\"hljs-keyword\">this</span> = <span class=\"hljs-number\">0</span>;\n\t\tlen = pos.len;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= len; i++)\n\t\t\tval[i] = pos.val[i];\n\t&#125;\n\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">carry_bit</span><span class=\"hljs-params\">()</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= len; i++)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span> (val[i] &gt; <span class=\"hljs-number\">9</span>)\n\t\t\t&#123;\n\t\t\t\tval[i + <span class=\"hljs-number\">1</span>] += val[i] / <span class=\"hljs-number\">10</span>;\n\t\t\t\tval[i] %= <span class=\"hljs-number\">10</span>;\n\t\t\t\t<span class=\"hljs-keyword\">if</span> (i == len)\n\t\t\t\t\tlen++;\n\t\t\t&#125;\n\t\t&#125;\n\t&#125;\n\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">eat_zero</span><span class=\"hljs-params\">()</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-keyword\">for</span> (; !val[len] &amp;&amp; len &gt; <span class=\"hljs-number\">1</span>; len--)\n\t\t\t;\n\t\t<span class=\"hljs-keyword\">if</span> (!len)\n\t\t\tlen = <span class=\"hljs-number\">0</span>, val[len] = <span class=\"hljs-number\">0</span>;\n\t&#125;\n\tInt <span class=\"hljs-keyword\">operator</span>+(<span class=\"hljs-type\">int</span> _val)\n\t&#123;\n\t\tInt now = *<span class=\"hljs-keyword\">this</span>;\n\t\tnow[<span class=\"hljs-number\">1</span>] += _val;\n\t\tnow.<span class=\"hljs-built_in\">carry_bit</span>();\n\t\t<span class=\"hljs-keyword\">return</span> now;\n\t&#125;\n\tInt <span class=\"hljs-keyword\">operator</span>+(Int _val)\n\t&#123;\n\t\tInt now = *<span class=\"hljs-keyword\">this</span>;\n\t\tnow.len = <span class=\"hljs-built_in\">max</span>(now.len, _val.len);\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= _val.len; i++)\n\t\t\tnow[i] += _val[i];\n\t\tnow.<span class=\"hljs-built_in\">carry_bit</span>();\n\t\t<span class=\"hljs-keyword\">return</span> now;\n\t&#125;\n\tInt <span class=\"hljs-keyword\">operator</span>*(<span class=\"hljs-type\">int</span> _val)\n\t&#123;\n\t\tInt now = *<span class=\"hljs-keyword\">this</span>;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= len; i++)\n\t\t\tnow[i] *= _val;\n\t\tnow.<span class=\"hljs-built_in\">carry_bit</span>();\n\t\t<span class=\"hljs-keyword\">return</span> now;\n\t&#125;\n\tInt <span class=\"hljs-keyword\">operator</span>*(Int _val)\n\t&#123;\n\t\tInt now;\n\t\tnow.len = len + _val.len - <span class=\"hljs-number\">1</span>;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= now.len; i++)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt;= _val.len; j++)\n\t\t\t&#123;\n\t\t\t\tnow[i + j - <span class=\"hljs-number\">1</span>] += val[i] * _val[j];\n\t\t\t&#125;\n\t\t&#125;\n\t\tnow.<span class=\"hljs-built_in\">eat_zero</span>();\n\t\tnow.<span class=\"hljs-built_in\">carry_bit</span>();\n\t\t<span class=\"hljs-keyword\">return</span> now;\n\t&#125;\n\tInt <span class=\"hljs-keyword\">operator</span>/(<span class=\"hljs-type\">int</span> _val)\n\t&#123;\n\t\tInt now = *<span class=\"hljs-keyword\">this</span>;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = len; i &gt;= <span class=\"hljs-number\">1</span>; i--)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span> (i)\n\t\t\t\tnow[i - <span class=\"hljs-number\">1</span>] += base * (now[i] % _val);\n\t\t\tnow[i] /= _val;\n\t\t&#125;\n\t\tnow.<span class=\"hljs-built_in\">eat_zero</span>();\n\t\t<span class=\"hljs-keyword\">return</span> now;\n\t&#125;\n\t<span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span>&lt;(Int _val) <span class=\"hljs-type\">const</span>\n\t&#123;\n\t\t<span class=\"hljs-keyword\">if</span> (len != _val.len)\n\t\t\t<span class=\"hljs-keyword\">return</span> len &lt; _val.len;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = len; i &gt;= <span class=\"hljs-number\">1</span>; i--)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span> (val[i] != _val[i])\n\t\t\t\t<span class=\"hljs-keyword\">return</span> val[i] &lt; _val[i];\n\t\t&#125;\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n\t&#125;\n\t<span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span>==(Int _val) <span class=\"hljs-type\">const</span>\n\t&#123;\n\t\t<span class=\"hljs-keyword\">if</span> (len != _val.len)\n\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = len; i &gt;= <span class=\"hljs-number\">1</span>; i--)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span> (val[i] != _val[i])\n\t\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n\t\t&#125;\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n\t&#125;\n\t<span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span>&gt;(Int _val) <span class=\"hljs-type\">const</span>\n\t&#123;\n\t\t<span class=\"hljs-keyword\">if</span> (len != _val.len)\n\t\t\t<span class=\"hljs-keyword\">return</span> len &gt; _val.len;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = len; i &gt;= <span class=\"hljs-number\">1</span>; i--)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span> (val[i] != _val[i])\n\t\t\t\t<span class=\"hljs-keyword\">return</span> val[i] &gt; _val[i];\n\t\t&#125;\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n\t&#125;\n\t<span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span>&lt;=(Int _val) <span class=\"hljs-type\">const</span> &#123; <span class=\"hljs-keyword\">return</span> !(*<span class=\"hljs-keyword\">this</span> &gt; _val); &#125;\n\t<span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span>&gt;=(Int _val) <span class=\"hljs-type\">const</span> &#123; <span class=\"hljs-keyword\">return</span> !(*<span class=\"hljs-keyword\">this</span> &lt; _val); &#125;\n\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">init</span><span class=\"hljs-params\">(<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> s[max_size])</span>\n\t</span>&#123;\n\t\tlen = <span class=\"hljs-number\">0</span>;\n\t\t<span class=\"hljs-type\">int</span> begin = <span class=\"hljs-number\">0</span>;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; s[i] &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; s[i] &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>; i++)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span> (!begin &amp;&amp; s[i] == <span class=\"hljs-number\">48</span>)\n\t\t\t\t<span class=\"hljs-keyword\">continue</span>;\n\t\t\t<span class=\"hljs-keyword\">if</span> (!begin)\n\t\t\t&#123;\n\t\t\t\tbegin = i;\n\t\t\t&#125;\n\t\t\tlen++;\n\t\t&#125;\n\t\t<span class=\"hljs-keyword\">if</span> (!begin)\n\t\t&#123;\n\t\t\tlen = <span class=\"hljs-number\">0</span>, val[<span class=\"hljs-number\">1</span>] = <span class=\"hljs-number\">0</span>;\n\t\t\t<span class=\"hljs-keyword\">return</span>;\n\t\t&#125;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= len; i++)\n\t\t&#123;\n\t\t\tval[i] = s[len - i + begin] - <span class=\"hljs-number\">48</span>;\n\t\t&#125;\n\t&#125;\n\t<span class=\"hljs-type\">void</span> <span class=\"hljs-keyword\">operator</span>=(<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> s[max_size]) &#123; <span class=\"hljs-keyword\">this</span>-&gt;<span class=\"hljs-built_in\">init</span>(s); &#125;\n\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">print</span><span class=\"hljs-params\">()</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-built_in\">eat_zero</span>();\n\t\t<span class=\"hljs-keyword\">if</span> (!len)\n\t\t\t<span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-number\">48</span>);\n\t\t<span class=\"hljs-keyword\">else</span>\n\t\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = len; i &gt;= <span class=\"hljs-number\">1</span>; i--)\n\t\t\t\t<span class=\"hljs-built_in\">putchar</span>(val[i] + <span class=\"hljs-number\">48</span>);\n\t\t<span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;\\n&#x27;</span>);\n\t&#125;\n&#125;;\n</code></pre>\n<p>然后又想，高精度是个 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 复杂度的算法，这就必然不能用 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">(n^3)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">3</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 的状态转移方程了。因此我们先对男生和女生分别排序，どうしてですか？因为我们发现排序后会有单调性就更有利于我们的状态转移，然后设 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">dp(i,j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span></span> 为前 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 个男生和女生已经两两匹配总共有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 对符合题意的方案数。那么最终的答案就应该是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>k</mi></msubsup><mi>d</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>i</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">\\sum_{i = 0}^{k}dp(n,i)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2887179999999998em;vertical-align:-0.29971000000000003em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.9890079999999999em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">0</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">)</span></span></span></span> 。</p>\n<p>接下来就要考虑怎么转移状态了，假如当前的女生的身高小于等于男生的身高：</p>\n<h2 id=\"当前女生不高于男生\"><a class=\"markdownIt-Anchor\" href=\"#当前女生不高于男生\"></a> 当前女生不高于男生:</h2>\n<h3 id=\"1这个女生不使-j-增加\"><a class=\"markdownIt-Anchor\" href=\"#1这个女生不使-j-增加\"></a> ①：这个女生不使 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 增加。</h3>\n<p>然后将这个女生放在身高大于等于她的那个男生的位置，就会形成一个新的不会影响<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span>的数量的方案。</p>\n<p>我们可以从当前位置向前扫一遍就可以得到符合 这种情况的位置的个数，暂且设个数为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 。我们也可以将当前女生放到任意原来就是女生更高的位置。由于女生身高已经过排序，交换后“原来就是女生更高的位置”仍然是女生更高，而当前位置也仍然是男生不矮于女生。</p>\n<p>因为我们枚举的时候是从小到大枚举的,更换位置是将更高的放在前面，而这样的女生在换过来之后就一定是小于当前的男生的，显而易见，这样的位置有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 个。</p>\n<p>并且 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 不会重叠，因为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>位置的部分满足男生比女生高。所以，对于 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">(</mo><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">dp(i,j)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">)</span></span></span></span> 共有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo>+</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">j+k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 个位置使 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 不增加</p>\n<h3 id=\"2这个女生使-j-增加\"><a class=\"markdownIt-Anchor\" href=\"#2这个女生使-j-增加\"></a> ②:这个女生使 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 增加.</h3>\n<p>因为刚才已经求出了不会使 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 增加的位置数，那么用总数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 减去上面的个数就是能使 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 增加的个数</p>\n<p>然后这种情况下的递推方程为:</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mtext> </mtext><mo>=</mo><mtext> </mtext><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mtext> </mtext><mo>×</mo><mtext> </mtext><mo stretchy=\"false\">(</mo><mi>j</mi><mtext> </mtext><mo>+</mo><mtext> </mtext><mi>k</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mo>+</mo><mtext> </mtext><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mtext> </mtext><mo>−</mo><mtext> </mtext><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mtext> </mtext><mo>−</mo><mtext> </mtext><mn>1</mn><mo stretchy=\"false\">]</mo><mtext> </mtext><mo>×</mo><mtext> </mtext><mo stretchy=\"false\">(</mo><mi>i</mi><mo>−</mo><mi>k</mi><mo>−</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">dp[i][j]\\ = \\ dp[i - 1][j] \\ \\times \\ (j \\ + \\ k ) \\ + \\ dp[i \\ - \\ 1][j \\ - \\ 1]\\ \\times \\  (i-k-j-1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>第一类的情况解决掉了，接下来看第二类情况。</p>\n<h2 id=\"当前的女生比男生高\"><a class=\"markdownIt-Anchor\" href=\"#当前的女生比男生高\"></a> 当前的女生比男生高：</h2>\n<h3 id=\"1当前女生不使-j-增加\"><a class=\"markdownIt-Anchor\" href=\"#1当前女生不使-j-增加\"></a> ①：当前女生不使 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 增加。</h3>\n<p>这个时候无论将她放在哪里都会形成一组女生比男生高的组合，因为此时的女生一定高于当前所枚举的所有男生。我们现在考虑她不影响 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的位置有哪些，然后可以轻松地发现其实将她放在一个之前就是女生比男生高的位置同时那个位置的女生不高于当前位置的男生。</p>\n<p>女生高于男生的位置数就是已经求出来的 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> ，然后再扫一遍得出有多少女生高于当前男生，计个数为 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 个，那么满足不影响 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 的位置数就是有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo>−</mo><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">j - k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 个。</p>\n<h3 id=\"2当前女生使-j-增加\"><a class=\"markdownIt-Anchor\" href=\"#2当前女生使-j-增加\"></a> ②：当前女生使 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span> 增加</h3>\n<p>同理第一大类的这种情况，总数 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 减去上面的方案数就行。</p>\n<p>那么我们也就得出了这类情况的转移方程：</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mtext> </mtext><mo>=</mo><mtext> </mtext><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo stretchy=\"false\">]</mo><mtext> </mtext><mo>×</mo><mtext> </mtext><mo stretchy=\"false\">(</mo><mi>j</mi><mo>−</mo><mi>k</mi><mo stretchy=\"false\">)</mo><mtext> </mtext><mo>+</mo><mtext> </mtext><mi>d</mi><mi>p</mi><mo stretchy=\"false\">[</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mo stretchy=\"false\">[</mo><mi>j</mi><mo>−</mo><mn>1</mn><mo stretchy=\"false\">]</mo><mtext> </mtext><mo>×</mo><mtext> </mtext><mo stretchy=\"false\">(</mo><mi>i</mi><mo>−</mo><mi>j</mi><mo>+</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">dp[i][j] \\ = \\ dp[i - 1][j] \\ \\times\\ (j-k) \\ + \\ dp[i-1][j-1] \\ \\times \\ (i-j+k+1)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mclose\">]</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">p</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mopen\">[</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">]</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">×</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>最后的最后，因为我们发现转移过程只与 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 和 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i - 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 有关系，因此可以用滚动数组来优化空间，（其实这道题的数据规模不用滚动数组优化空间也行，而且会跑到更快，但是还是要学一下这种思想的）具体代码实现方式会在下面的代码中说明</p>\n<pre class=\"highlight\"><code class=\"cpp\"><span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;cstring&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;iostream&gt;</span></span>\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">include</span> <span class=\"hljs-string\">&lt;algorithm&gt;</span></span>\n\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> lv_WXT register     <span class=\"hljs-comment\">//无关紧要的define，忽略就行(doge</span></span>\n\n<span class=\"hljs-keyword\">using</span> <span class=\"hljs-keyword\">namespace</span> std;\n\n<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> N = <span class=\"hljs-number\">200</span> + <span class=\"hljs-number\">10</span>;\n\n<span class=\"hljs-type\">int</span> n, jk;\n<span class=\"hljs-type\">int</span> m[N], w[N];\n\n<span class=\"hljs-keyword\">struct</span> <span class=\"hljs-title class_\">Int</span>     <span class=\"hljs-comment\">//高精度的板子就先不说了</span>\n&#123;\n<span class=\"hljs-meta\">#<span class=\"hljs-keyword\">define</span> max_size (501)</span>\n\t<span class=\"hljs-type\">int</span> val[max_size];\n\t<span class=\"hljs-type\">int</span> len;\n\t<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> base = <span class=\"hljs-number\">10</span>;\n\t<span class=\"hljs-built_in\">Int</span>(<span class=\"hljs-type\">int</span> _val = <span class=\"hljs-number\">0</span>)\n\t&#123;\n\t\tlen = <span class=\"hljs-number\">1</span>;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt; max_size; i++)\n\t\t\tval[i] = <span class=\"hljs-number\">0</span>;\n\t\t*<span class=\"hljs-keyword\">this</span> = _val;\n\t&#125;\n\t<span class=\"hljs-built_in\">Int</span>(<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> s[max_size]) &#123; <span class=\"hljs-built_in\">init</span>(s); &#125;\n\t<span class=\"hljs-built_in\">Int</span>(<span class=\"hljs-type\">char</span> s[max_size]) &#123; <span class=\"hljs-built_in\">init</span>(s); &#125;\n\t<span class=\"hljs-type\">int</span> &amp;<span class=\"hljs-keyword\">operator</span>[](<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">int</span> id) &#123; <span class=\"hljs-keyword\">return</span> val[id]; &#125;\n\t<span class=\"hljs-type\">void</span> <span class=\"hljs-keyword\">operator</span>=(<span class=\"hljs-type\">int</span> _val)\n\t&#123;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span>; i &lt;= len; i++)\n\t\t\tval[i] = <span class=\"hljs-number\">0</span>;\n\t\tlen = <span class=\"hljs-number\">0</span>;\n\t\t<span class=\"hljs-keyword\">while</span> (_val)\n\t\t\tval[++len] = _val % <span class=\"hljs-number\">10</span>, _val /= <span class=\"hljs-number\">10</span>;\n\t&#125;\n\t<span class=\"hljs-type\">void</span> <span class=\"hljs-keyword\">operator</span>=(Int pos)\n\t&#123;\n\t\t*<span class=\"hljs-keyword\">this</span> = <span class=\"hljs-number\">0</span>;\n\t\tlen = pos.len;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= len; i++)\n\t\t\tval[i] = pos.val[i];\n\t&#125;\n\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">carry_bit</span><span class=\"hljs-params\">()</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= len; i++)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span> (val[i] &gt; <span class=\"hljs-number\">9</span>)\n\t\t\t&#123;\n\t\t\t\tval[i + <span class=\"hljs-number\">1</span>] += val[i] / <span class=\"hljs-number\">10</span>;\n\t\t\t\tval[i] %= <span class=\"hljs-number\">10</span>;\n\t\t\t\t<span class=\"hljs-keyword\">if</span> (i == len)\n\t\t\t\t\tlen++;\n\t\t\t&#125;\n\t\t&#125;\n\t&#125;\n\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">eat_zero</span><span class=\"hljs-params\">()</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-keyword\">for</span> (; !val[len] &amp;&amp; len &gt; <span class=\"hljs-number\">1</span>; len--)\n\t\t\t;\n\t\t<span class=\"hljs-keyword\">if</span> (!len)\n\t\t\tlen = <span class=\"hljs-number\">0</span>, val[len] = <span class=\"hljs-number\">0</span>;\n\t&#125;\n\tInt <span class=\"hljs-keyword\">operator</span>+(<span class=\"hljs-type\">int</span> _val)\n\t&#123;\n\t\tInt now = *<span class=\"hljs-keyword\">this</span>;\n\t\tnow[<span class=\"hljs-number\">1</span>] += _val;\n\t\tnow.<span class=\"hljs-built_in\">carry_bit</span>();\n\t\t<span class=\"hljs-keyword\">return</span> now;\n\t&#125;\n\tInt <span class=\"hljs-keyword\">operator</span>+(Int _val)\n\t&#123;\n\t\tInt now = *<span class=\"hljs-keyword\">this</span>;\n\t\tnow.len = <span class=\"hljs-built_in\">max</span>(now.len, _val.len);\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= _val.len; i++)\n\t\t\tnow[i] += _val[i];\n\t\tnow.<span class=\"hljs-built_in\">carry_bit</span>();\n\t\t<span class=\"hljs-keyword\">return</span> now;\n\t&#125;\n\tInt <span class=\"hljs-keyword\">operator</span>*(<span class=\"hljs-type\">int</span> _val)\n\t&#123;\n\t\tInt now = *<span class=\"hljs-keyword\">this</span>;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= len; i++)\n\t\t\tnow[i] *= _val;\n\t\tnow.<span class=\"hljs-built_in\">carry_bit</span>();\n\t\t<span class=\"hljs-keyword\">return</span> now;\n\t&#125;\n\tInt <span class=\"hljs-keyword\">operator</span>*(Int _val)\n\t&#123;\n\t\tInt now;\n\t\tnow.len = len + _val.len - <span class=\"hljs-number\">1</span>;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= now.len; i++)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt;= _val.len; j++)\n\t\t\t&#123;\n\t\t\t\tnow[i + j - <span class=\"hljs-number\">1</span>] += val[i] * _val[j];\n\t\t\t&#125;\n\t\t&#125;\n\t\tnow.<span class=\"hljs-built_in\">eat_zero</span>();\n\t\tnow.<span class=\"hljs-built_in\">carry_bit</span>();\n\t\t<span class=\"hljs-keyword\">return</span> now;\n\t&#125;\n\tInt <span class=\"hljs-keyword\">operator</span>/(<span class=\"hljs-type\">int</span> _val)\n\t&#123;\n\t\tInt now = *<span class=\"hljs-keyword\">this</span>;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = len; i &gt;= <span class=\"hljs-number\">1</span>; i--)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span> (i)\n\t\t\t\tnow[i - <span class=\"hljs-number\">1</span>] += base * (now[i] % _val);\n\t\t\tnow[i] /= _val;\n\t\t&#125;\n\t\tnow.<span class=\"hljs-built_in\">eat_zero</span>();\n\t\t<span class=\"hljs-keyword\">return</span> now;\n\t&#125;\n\t<span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span>&lt;(Int _val) <span class=\"hljs-type\">const</span>\n\t&#123;\n\t\t<span class=\"hljs-keyword\">if</span> (len != _val.len)\n\t\t\t<span class=\"hljs-keyword\">return</span> len &lt; _val.len;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = len; i &gt;= <span class=\"hljs-number\">1</span>; i--)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span> (val[i] != _val[i])\n\t\t\t\t<span class=\"hljs-keyword\">return</span> val[i] &lt; _val[i];\n\t\t&#125;\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n\t&#125;\n\t<span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span>==(Int _val) <span class=\"hljs-type\">const</span>\n\t&#123;\n\t\t<span class=\"hljs-keyword\">if</span> (len != _val.len)\n\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = len; i &gt;= <span class=\"hljs-number\">1</span>; i--)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span> (val[i] != _val[i])\n\t\t\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n\t\t&#125;\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n\t&#125;\n\t<span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span>&gt;(Int _val) <span class=\"hljs-type\">const</span>\n\t&#123;\n\t\t<span class=\"hljs-keyword\">if</span> (len != _val.len)\n\t\t\t<span class=\"hljs-keyword\">return</span> len &gt; _val.len;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = len; i &gt;= <span class=\"hljs-number\">1</span>; i--)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span> (val[i] != _val[i])\n\t\t\t\t<span class=\"hljs-keyword\">return</span> val[i] &gt; _val[i];\n\t\t&#125;\n\t\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n\t&#125;\n\t<span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span>&lt;=(Int _val) <span class=\"hljs-type\">const</span> &#123; <span class=\"hljs-keyword\">return</span> !(*<span class=\"hljs-keyword\">this</span> &gt; _val); &#125;\n\t<span class=\"hljs-type\">bool</span> <span class=\"hljs-keyword\">operator</span>&gt;=(Int _val) <span class=\"hljs-type\">const</span> &#123; <span class=\"hljs-keyword\">return</span> !(*<span class=\"hljs-keyword\">this</span> &lt; _val); &#125;\n\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">init</span><span class=\"hljs-params\">(<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> s[max_size])</span>\n\t</span>&#123;\n\t\tlen = <span class=\"hljs-number\">0</span>;\n\t\t<span class=\"hljs-type\">int</span> begin = <span class=\"hljs-number\">0</span>;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; s[i] &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; s[i] &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>; i++)\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">if</span> (!begin &amp;&amp; s[i] == <span class=\"hljs-number\">48</span>)\n\t\t\t\t<span class=\"hljs-keyword\">continue</span>;\n\t\t\t<span class=\"hljs-keyword\">if</span> (!begin)\n\t\t\t&#123;\n\t\t\t\tbegin = i;\n\t\t\t&#125;\n\t\t\tlen++;\n\t\t&#125;\n\t\t<span class=\"hljs-keyword\">if</span> (!begin)\n\t\t&#123;\n\t\t\tlen = <span class=\"hljs-number\">0</span>, val[<span class=\"hljs-number\">1</span>] = <span class=\"hljs-number\">0</span>;\n\t\t\t<span class=\"hljs-keyword\">return</span>;\n\t\t&#125;\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= len; i++)\n\t\t&#123;\n\t\t\tval[i] = s[len - i + begin] - <span class=\"hljs-number\">48</span>;\n\t\t&#125;\n\t&#125;\n\t<span class=\"hljs-type\">void</span> <span class=\"hljs-keyword\">operator</span>=(<span class=\"hljs-type\">const</span> <span class=\"hljs-type\">char</span> s[max_size]) &#123; <span class=\"hljs-keyword\">this</span>-&gt;<span class=\"hljs-built_in\">init</span>(s); &#125;\n\t<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">print</span><span class=\"hljs-params\">()</span>\n\t</span>&#123;\n\t\t<span class=\"hljs-built_in\">eat_zero</span>();\n\t\t<span class=\"hljs-keyword\">if</span> (!len)\n\t\t\t<span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-number\">48</span>);\n\t\t<span class=\"hljs-keyword\">else</span>\n\t\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = len; i &gt;= <span class=\"hljs-number\">1</span>; i--)\n\t\t\t\t<span class=\"hljs-built_in\">putchar</span>(val[i] + <span class=\"hljs-number\">48</span>);\n\t\t<span class=\"hljs-built_in\">putchar</span>(<span class=\"hljs-string\">&#x27;\\n&#x27;</span>);\n\t&#125;\n&#125;;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">inline</span> <span class=\"hljs-type\">void</span> <span class=\"hljs-title\">read</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> &amp;a)</span>\n</span>&#123;\n\t<span class=\"hljs-type\">int</span> x = <span class=\"hljs-number\">0</span>, f = <span class=\"hljs-number\">1</span>;\n\t<span class=\"hljs-type\">char</span> ch = <span class=\"hljs-built_in\">getchar</span>();\n\t<span class=\"hljs-keyword\">while</span> (ch &gt; <span class=\"hljs-string\">&#x27;9&#x27;</span> || ch &lt; <span class=\"hljs-string\">&#x27;0&#x27;</span>)\n\t&#123;\n\t\t<span class=\"hljs-keyword\">if</span> (ch == <span class=\"hljs-string\">&#x27;-&#x27;</span>)\n\t\t\tf = <span class=\"hljs-number\">-1</span>;\n\t\tch = <span class=\"hljs-built_in\">getchar</span>();\n\t&#125;\n\t<span class=\"hljs-keyword\">while</span> (ch &gt;= <span class=\"hljs-string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"hljs-string\">&#x27;9&#x27;</span>)\n\t\tx = x * <span class=\"hljs-number\">10</span> + ch - <span class=\"hljs-string\">&#x27;0&#x27;</span>, ch = <span class=\"hljs-built_in\">getchar</span>();\n\ta = x * f;\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">void</span> <span class=\"hljs-title\">qsort</span><span class=\"hljs-params\">(<span class=\"hljs-type\">int</span> *array, <span class=\"hljs-type\">int</span> low, <span class=\"hljs-type\">int</span> high)</span>   <span class=\"hljs-comment\">//快排</span>\n</span>&#123;\n\t<span class=\"hljs-keyword\">if</span> (low &gt;= high)\n\t\t<span class=\"hljs-keyword\">return</span>;\n\t<span class=\"hljs-type\">int</span> i = low;\n\t<span class=\"hljs-type\">int</span> j = high;\n\t<span class=\"hljs-type\">int</span> key = array[low];\n\t\n\t<span class=\"hljs-keyword\">while</span> (i &lt; j)\n\t&#123;\n\t\t<span class=\"hljs-keyword\">while</span> (array[j] &gt;= key &amp;&amp; i &lt; j)\n\t\t\tj--;\n\t\tarray[i] = array[j];\n\t\t<span class=\"hljs-keyword\">while</span> (array[i] &lt;= key &amp;&amp; i &lt; j)\n\t\t\ti++;\n\t\tarray[j] = array[i];\n\t&#125;\n\tarray[i] = key;\n\t\n\t<span class=\"hljs-built_in\">qsort</span>(array, low, i - <span class=\"hljs-number\">1</span>);\n\t<span class=\"hljs-built_in\">qsort</span>(array, i + <span class=\"hljs-number\">1</span>, high);\n&#125;\n\n<span class=\"hljs-function\"><span class=\"hljs-type\">int</span> <span class=\"hljs-title\">main</span><span class=\"hljs-params\">()</span>\n</span>&#123;\n\tInt f[<span class=\"hljs-number\">2</span>][N];   <span class=\"hljs-comment\">//要定义成高精度的类型</span>\n\t\n\t<span class=\"hljs-built_in\">read</span>(n), <span class=\"hljs-built_in\">read</span>(jk);\n\n\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= n; i++)\n\t\t<span class=\"hljs-built_in\">read</span>(m[i]);\n\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= n; i++)\n\t\t<span class=\"hljs-built_in\">read</span>(w[i]);\n\t<span class=\"hljs-built_in\">qsort</span>(m, <span class=\"hljs-number\">1</span>, n);\n\t<span class=\"hljs-built_in\">qsort</span>(w, <span class=\"hljs-number\">1</span>, n);\n\n\tf[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>] = <span class=\"hljs-number\">1</span>;\n\n\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">1</span>; i &lt;= n; i++)\n\t&#123;\n\t\t<span class=\"hljs-type\">int</span> k = <span class=\"hljs-number\">0</span>, sg = i &amp; <span class=\"hljs-number\">1</span>; <span class=\"hljs-comment\">// k 就是上面分析的位置数</span>\n\t\t<span class=\"hljs-comment\">// sg 是找一下奇数和偶数，因为如果当前为奇数，在进行本次转移前会清空奇数的数组，而那个奇数的数组是i - 2位置的值。偶数的是i - 1的值，如果sg为偶数则反之</span>\n\n\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt;= i; j++) <span class=\"hljs-comment\">// 采取滚动数组优化，所以每次使用前都要初始化一遍（j一定要从0开始，否则会没有完全初始化,第一次提交的时候就因为这个挂了）</span>\n\t\t&#123;\n\t\t\tf[sg][j] = <span class=\"hljs-number\">0</span>;\n\t\t&#125;\n\n\t\t<span class=\"hljs-keyword\">if</span> (m[i] &gt;= w[i]) <span class=\"hljs-comment\">// 男生不低于女生的情况</span>\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt;= i; j++)\n\t\t\t&#123;\n\t\t\t\t<span class=\"hljs-keyword\">if</span> (m[j] &gt;= w[i]) <span class=\"hljs-comment\">// 处理一下k</span>\n\t\t\t\t\tk++;\n\t\t\t&#125;\n\n\t\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">0</span>; j &lt;= i; j++) <span class=\"hljs-comment\">// 处理前半部分</span>\n\t\t\t&#123;\n\t\t\t\tf[sg][j] = f[!sg][j] * (j + k);\n\t\t\t&#125;\n\n\t\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt;= i - k; j++) <span class=\"hljs-comment\">// 直接加上与它奇偶性不同的那个数组即可</span>\n\t\t\t&#123;\n\t\t\t\tf[sg][j] = f[sg][j] + f[!sg][j - <span class=\"hljs-number\">1</span>] * (i - k - j + <span class=\"hljs-number\">1</span>);\n\t\t\t&#125;\n\t\t&#125;\n\n\t\t<span class=\"hljs-keyword\">else</span> <span class=\"hljs-comment\">// 男生没有女生高的情况</span>\n\t\t&#123;\n\t\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt; i; j++)\n\t\t\t&#123;\n\t\t\t\t<span class=\"hljs-keyword\">if</span> (w[j] &gt; m[i])\n\t\t\t\t\tk++;\n\t\t\t&#125;\n\n\t\t\t<span class=\"hljs-keyword\">for</span> (lv_WXT <span class=\"hljs-type\">int</span> j = <span class=\"hljs-number\">1</span>; j &lt;= i; j++) <span class=\"hljs-comment\">// 处理前半部分</span>\n\t\t\t&#123;\n\t\t\t\tf[sg][j] = f[!sg][j - <span class=\"hljs-number\">1</span>] * (i - j + <span class=\"hljs-number\">1</span> + k);\n\t\t\t&#125;\n\n\t\t\t<span class=\"hljs-keyword\">for</span>(lv_WXT <span class=\"hljs-type\">int</span> j = k ; j &lt;= i ; j ++)\n\t\t\t&#123;\n\t\t\t\tf[sg][j] = f[sg][j] + f[!sg][j] * (j - k);\n\t\t\t&#125;\n\t\t&#125;\n\t&#125;\n\n\tInt res = <span class=\"hljs-number\">0</span>;   <span class=\"hljs-comment\">//res要用高精度的</span>\n\n\t<span class=\"hljs-keyword\">for</span>(lv_WXT <span class=\"hljs-type\">int</span> i = <span class=\"hljs-number\">0</span> ; i &lt;= jk ; i ++ )  <span class=\"hljs-comment\">//最后统计答案，因为奇数的存在了sg为奇数的位置，偶数则反之</span>\n\t&#123;\n\t\tres = res + f[n &amp; <span class=\"hljs-number\">1</span>][i];\n\t&#125;\n\n\tres.<span class=\"hljs-built_in\">print</span>();\n\n\t<span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n&#125;\n</code></pre>\n<p>撒花完结，✿✿ヽ(°▽°)ノ✿</p>\n",
            "tags": [
                "题解",
                "动态规划",
                "题解",
                "动态规划"
            ]
        }
    ]
}